Repository(full_name="theypsilon/advent-of-code-2018") ['/releases']
Repository(full_name="theypsilon/advent-of-code-2019") ['/releases']
Repository(full_name="theypsilon/Archie_MiSTer") ['/releases']
Repository(full_name="theypsilon/arraygen") ['/releases']
Repository(full_name="theypsilon/AspectMock") ['/releases']
Repository(full_name="theypsilon/backup-ops") ['/releases']
Repository(full_name="theypsilon/biff") ['/releases']
Repository(full_name="theypsilon/clang-tests") ['/releases']
Repository(full_name="theypsilon/cmake-test") ['/releases']
Repository(full_name="theypsilon/concat") ['/releases']
Repository(full_name="theypsilon/delme") ['/releases']
Repository(full_name="theypsilon/display-sim") ['/releases']
Repository(full_name="theypsilon/docker-compose") ['/releases']
Repository(full_name="theypsilon/docker-elasticsearch") ['/releases']
Repository(full_name="theypsilon/docker-fakesmtp") ['/releases']
Repository(full_name="theypsilon/docker-fcron") ['/releases']
Repository(full_name="theypsilon/docker-redis") ['/releases']
Repository(full_name="theypsilon/docker-waiter") ['/releases']
Repository(full_name="theypsilon/docker-waitfortrue") ['/releases']
Repository(full_name="theypsilon/dotvim") ['/releases']
Repository(full_name="theypsilon/EvoLearning") ['/releases']
Repository(full_name="theypsilon/fetchdeps") ['/releases']
Repository(full_name="theypsilon/FlatScene-Layer") ['/releases']
Repository(full_name="theypsilon/Forks_MiSTer") ['/releases']
Repository(full_name="theypsilon/gcc-linaro-dockerized") ['/releases']
Repository(full_name="theypsilon/Genesis_MiSTer") ['/releases']
Repository(full_name="theypsilon/getset") ['/releases']
Repository(full_name="theypsilon/getters-by-type-rs") ['/releases']
Repository(full_name="theypsilon/go-httpmock") ['/releases']
Repository(full_name="theypsilon/guake") ['/releases']
Repository(full_name="theypsilon/Holopolis-Map") ['/releases']
Repository(full_name="theypsilon/Itemology") ['/releases']
Repository(full_name="theypsilon/jtbin") ['/releases']
Repository(full_name="theypsilon/lua-arg-file") ['/releases']
Repository(full_name="theypsilon/lua-class") ['/releases']
Repository(full_name="theypsilon/lua-dump") ['/releases']
Repository(full_name="theypsilon/lua-import") ['/releases']
Repository(full_name="theypsilon/lua-lazy") ['/releases']
Repository(full_name="theypsilon/lua-strict") ['/releases']
Repository(full_name="theypsilon/lua-table") ['/releases']
Repository(full_name="theypsilon/lua-type") ['/releases']
Repository(full_name="theypsilon/luafun") ['/releases']
Repository(full_name="theypsilon/Main_MiSTer") ['/releases']
Repository(full_name="theypsilon/MiniECS") ['/releases']
Repository(full_name="theypsilon/MiSTer_MAME_SCRIPTS") ['/releases']
Repository(full_name="theypsilon/moai-dev") ['/releases']
Repository(full_name="theypsilon/MOD_SpriteSet") ['/releases']
Repository(full_name="theypsilon/MOD_TinyXML") ['/releases']
Repository(full_name="theypsilon/nas-auto-usb") ['/releases']
Repository(full_name="theypsilon/Penlight") ['/releases']
Repository(full_name="theypsilon/PHPView-for-Chrome") ['/releases']
Repository(full_name="theypsilon/quartus-lite-c5-dockerized") ['/releases']
Repository(full_name="theypsilon/Retro-Display-Simulator") ['/releases']
Repository(full_name="theypsilon/rust") ['/releases']
Repository(full_name="theypsilon/rust-bug-crash-cfg-if-macro") ['/releases']
Repository(full_name="theypsilon/rust-docker-seed") ['/releases']
Repository(full_name="theypsilon/shell-scripts") ['/releases']
Repository(full_name="theypsilon/stupid") ['/releases']
Repository(full_name="theypsilon/tdd-node-seed") ['/releases']
Repository(full_name="theypsilon/typescript-node-seed") ['/releases']
Repository(full_name="theypsilon/update-copyright") ['/releases']
Repository(full_name="theypsilon/Updater_script_MiSTer_DB9") ['/releases']
Repository(full_name="theypsilon/Updater_script_MiSTer_Unofficial") ['/releases']
Repository(full_name="theypsilon/Update_All_MiSTer") ['/releases']
Repository(full_name="theypsilon/WatchFun") ['/releases']
Repository(full_name="theypsilon/_arcade-organizer") ['/releases']
{
  "name": "theypsilon",
  "image": "https://avatars2.githubusercontent.com/u/852246?v=4",
  "url": "https://github.com/theypsilon",
  "type": "User",
  "repos": [
    {
      "name": "advent-of-code-2018",
      "description": "Solution in Rust for https://adventofcode.com/2018",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/advent-of-code-2018",
      "releases": []
    },
    {
      "name": "advent-of-code-2019",
      "description": "Solutions for Advent of Code 2019 implemented in Rust",
      "readme": "# Advent of Code 2019\nSolutions for [AoC](https://adventofcode.com/2019/) done in Rust.\n\nEvery solution has its own dependency-free crate, with a single self-contained main.rs, so it can be run with an online compiler entirely and thus you don't need to install rust in your system to test them. Just copy/paste them into https://play.rust-lang.org/\n\nI try to keep it simple. I implement tests quite often as a mean to reduce the surface of the problems, and also to get frequent feedback about possible regressions.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/advent-of-code-2019",
      "releases": []
    },
    {
      "name": "Archie_MiSTer",
      "description": "Acorn Archimedes for MiSTer",
      "readme": "# Acorn Archimedes for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\r\n\r\n### This is the port of [Archie](https://github.com/mist-devel/mist-board/tree/master/cores/archie) core from MiST by Stephen Leary\r\n\r\n**CURRENTLY THIS CORE IS IN BETA STATUS**\r\n\r\n1. Basic internals are implemented.\r\n1. Basic Floppy disk support\r\n1. Sound support added but may not work in all situations.\r\n1. The core emulates a 4Mb A3000 type machine with an ARM2a with caches disabled for now (has an A3010 style joystick interface).\r\n1. Core runs at ~91% of an ARM2 @ 8Mhz when using VGA Modes.\r\n1. Some games now run. Expect issues.\r\n\r\n## Installation\r\n\r\nCopy the [*.rbf](https://github.com/MiSTer-devel/Archie_MiSTer/tree/master/releases) into a root folder of the SD card.\r\nCopy a version of a RiscOS ROM into the \"Archie\" folder, renaming it to `riscos.rom`.\r\n\r\n### Floppy disk images\r\n\r\nThe current version supports two floppy drives. Floppy disk images ADF format and of exactly 819200 bytes in size are currently required. This is the most common format for the Acorn Archimedes.\r\n\r\nImages named `floppy0.adf` and `floppy1.adf` (from Archie folder) are auto-inserted into the floppy disk drives on startup. Other images can be selected via the on-screen-display (OSD) which can be opened using the **WIN+F12** key combo.\r\n\r\n\r\n## OSD Menu\r\n\r\nIf the ROM is recognized the core should boot into Risc OS.\r\nPress **Win+F12** to open the OSD menu.\r\n\r\n* Floppy 0: Choose the floppy disk images to use for floppy 0\r\n* Floppy 1: Choose the floppy disk images to use for floppy 1\r\n* OS ROM: Choose the RISCOS rom to use\r\n* Save config: Save current config for next boot\r\n\r\nYou can move to other pages of settings by pressing the right arrow key.\r\n\r\n## Notes\r\n\r\n* CPU module (amber23) has no reset signal, so the only way to reset the core is to reload it. MiSTer will help to reload the core if **USER** button is pressed (or reset combo pressed on keyboard) and core file is named as **\"Archie.rbf\"**. Otherwise you can reload the core manually from menu (**Win+Alt+F12**).\r\n\r\n\r\n# License\r\n\r\nThis core uses the Amber CPU core from OpenCores which is LGPL.\r\nThe core itself is dual licensed LGPL/BSD.\r\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Archie_MiSTer",
      "releases": [
        {
          "name": "Archie_20171016.rbf",
          "sha": "a93f19dd550312dfdbdef6d7070ded09af36773e",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20171016.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20180310.rbf",
          "sha": "8a4dd802381b519b91af8ff6837187aaef1001c8",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20180310.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20180519.rbf",
          "sha": "c40828ddd7ab50af4f0f3a3bb204a371f9610ce2",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20180519.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20190206.rbf",
          "sha": "63500e9d4a03f4fa97da2a9f722334538076db9c",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20190206.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20190304.rbf",
          "sha": "e21292492a3be115bb136c10e54f3388936a9c45",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20190304.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20190427.rbf",
          "sha": "c3bc7d295b30a9e40adc2e6c406ffc61d4044073",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20190427.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20190711.rbf",
          "sha": "7196067da31fb9ae7e9883291c13619ca0c24199",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20190711.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20190912.rbf",
          "sha": "13ea666edaf74b8d5c88aec8437db4023254e371",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20190912.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20190927.rbf",
          "sha": "23ed9d77ade8f4fcf130723c3b695ec39cb615a2",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20190927.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20191116.rbf",
          "sha": "783437120dd8191f50268cf581f760d7884e5d29",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20191116.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20191204.rbf",
          "sha": "1f851c60ec86955664b661a1a2f044aeda589fe5",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/Archie_20191204.rbf",
          "type": "RBF"
        },
        {
          "name": "riscos.rom",
          "sha": "c5ea8aef8fa323131d1684ad5b822a8323b9d26e",
          "url": "https://raw.githubusercontent.com/theypsilon/Archie_MiSTer/master/releases/riscos.rom",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "arraygen",
      "description": "Derive macro for generating arrays from struct fields.",
      "readme": "# Arraygen\n\n[![Crates.io](https://img.shields.io/crates/v/arraygen.svg)](https://crates.io/crates/arraygen)\n[![Docs](https://docs.rs/arraygen/badge.svg)](https://docs.rs/arraygen)\n\nThis crate provides `Arraygen` derive macro for structs, which generates methods returning arrays filled with the selected struct fields.\n\n#### Complete example:\n\n```rust\n#[derive(Arraygen, Debug)]\n#[gen_array(fn get_names: &mut String)]\nstruct Person {\n    #[in_array(get_names)]\n    first_name: String,\n    #[in_array(get_names)]\n    last_name: String,\n}\n\nlet mut person = Person {\n    first_name: \"Ada\".into(),\n    last_name: \"Lovelace\".into()\n};\n\nfor name in person.get_names().iter_mut() {\n    **name = name.to_lowercase();\n}\n\nassert_eq!(\n    format!(\"{:?}\", person),\n    \"Person { first_name: \\\"ada\\\", last_name: \\\"lovelace\\\" }\"\n);\n// PASSES !\n// Notice how it was not lowercased on object creation\n// but now it is.\n```\n\nAs you can see above, the `gen_array` attribute generates a new method returning an array of the indicated type. And the `in_array` attribute tells which fields are contained within the array returned by that method.\n\nWhat `Arraygen` does under the hood is simply generating the following impl:\n\n```rust\nimpl Person {\n    #[inline(always)]\n    fn get_names(&mut self) -> [&mut String; 2] {\n        [&mut self.first_name, &mut self.last_name]\n    }\n}\n```\n\n#### The attribute `gen_array`:\n\nFor generating an `Arraygen` method you have to use the attribute `gen_array` on top of the struct, indicating the method name and the return type. Optionally, you can also indicate the visibility, like in the following example:\n\n```rust\n#[derive(Arraygen)]\n#[gen_array(pub(crate) fn get_strings: &String)]\nstruct Foo {...}\n```\n\nIn the code above, the struct `Foo` would have a new method with the following signature:\n\n```rust\npub(crate) fn get_strings(&self) -> [&String; ?] {...}\n```\n\n#### The attribute `in_array`:\n\nIn order to fill your `Arraygen` methods with struct fields, you have to use the attribute `in_array` in each struct field you want to include.\n\n```rust\n// inside a struct\n#[in_array(get_strings)]\nid: String,\n\n#[in_array(get_strings, get_names)]\nname: String,\n```\n\nYou have to match the method name used in `gen_array` and in `in_array` in order to include those fields in each generated method. So in this example, assuming `gen_strings` and `get_names` are both generated by `gen_array`, the former will get populated with the fields `id` and `name` and the latter will get populated with the field `name`.\n\n\n#### Generating arrays of Trait Objects:\n\nTrait Objects are fully supported, check the documentation to see a few working examples.\n\n\n## Documentation\n\nFor more information, check the [documentation page](https://docs.rs/arraygen).\n\n## Usage\n\nWith Cargo, you can add this line to your Cargo.toml:\n\n```toml\n[dependencies]\narraygen = \"0.1.11\"\n```\n\n## About the Syntax\n\nI'm open to change the syntax for the 1.0 version. Participate in the issue [Syntax Proposals](https://github.com/theypsilon/arraygen/issues/1) to give your opinion on this matter.\n\n## GettersByType\n\nThis crate is heavily inspired by [GettersByType](https://github.com/theypsilon/getters-by-type-rs) which is another derive that allows you\nto do the same thing. But that one is more opinionated, less flexible and less powerful, with the only advantage of being less verbose. That's\nwhy I decided to work on this new solution.\n\n## License\n\nMIT\n",
      "archived": false,
      "url": "https://github.com/theypsilon/arraygen",
      "releases": []
    },
    {
      "name": "AspectMock",
      "description": "The most powerful and flexible mocking framework for PHPUnit / Codeception.",
      "readme": "AspectMock\n==========\n\nAspectMock is not an ordinary PHP mocking framework.\nWith the power of Aspect Oriented programming and the awesome [Go-AOP](https://github.com/lisachenko/go-aop-php) library,\nAspectMock allows you to stub and mock practically anything in your PHP code!\n\n**Documentation** | [Test Doubles Builder](https://github.com/Codeception/AspectMock/blob/master/docs/Test.md) | [ClassProxy](https://github.com/Codeception/AspectMock/blob/master/docs/ClassProxy.md) | [InstanceProxy](https://github.com/Codeception/AspectMock/blob/master/docs/InstanceProxy.md)\n\n**Stability**: alpha\n\n[![Build Status](https://travis-ci.org/Codeception/AspectMock.png?branch=master)](https://travis-ci.org/Codeception/AspectMock)\n[![Latest Stable Version](https://poser.pugx.org/codeception/aspect-mock/v/stable.png)](https://packagist.org/packages/codeception/aspect-mock)\n[![Latest Unstable Version](https://poser.pugx.org/codeception/aspect-mock/v/unstable.png)](https://packagist.org/packages/codeception/aspect-mock)\n\n## Motivation\n\nPHP as a language that was not designed to be testable. Really. \nHow would you fake the `time()` function to produce the same result for each test call?\nIs there any way to stub a static method of a class? Can you redefine a class method at runtime?\nDynamic languages like Ruby or JavaScript allow us to do this. \nThese features are essential for testing. AspectMock to the rescue!\n\nDozens of lines of untested code are written everyday in PHP.\nIn most cases, this code is not actually bad, \nbut PHP does not provide capabilities to test it. You may suggest rewriting it from scratch following test driven design practices and use dependency injection wherever possible. Should this be done for stable working code? Well, there are much better ways to waste time.\n\nWith AspectMock you can unit-test practically any OOP code. PHP powered with AOP incorporates features of dynamic languages we have long been missing. There is no excuse for not testing your code.\nYou do not have to rewrite it from scratch to make it testable. Just install AspectMock with PHPUnit or Codeception and try to write some tests. It's really, really simple!\n\n\n## Features\n\n* Create test doubles for **static methods**.\n* Create test doubles for **class methods called anywhere**.\n* Redefine methods on the fly.\n* Simple syntax that's easy to remember.\n\n## Code Pitch\n\n#### Allows stubbing and mocking of static methods.\n\nLet's redefine static methods and verify their calls at runtime.\n\n``` php\n<?php\nfunction testTableName()\n{\n\t$this->assertEquals('users', UserModel::tableName());\t\n\t$userModel = test::double('UserModel', ['tableName' => 'my_users']);\n\t$this->assertEquals('my_users', UserModel::tableName());\n\t$userModel->verifyInvoked('tableName');\t\n}\n?>\n```\n\n#### Allows replacement of class methods.\n\nTesting code developed with the **ActiveRecord** pattern. Does the use of the ActiveRecord pattern sound like bad practice? No. But the code below is untestable in classic unit testing.\n\n``` php\n<?php\nclass UserService {\n    function createUserByName($name)\n    \t$user = new User;\n    \t$user->setName($name);\n    \t$user->save();\n\t}\n}\n?>\n```\n\nWithout AspectMock you need to introduce `User` as an explicit dependency into class `UserService` to get it tested.\nBut lets leave the code as it is. It works. Nevertheless, we should still test it to avoid regressions.\n\nWe don't want the `$user->save` method to actually get executed, as it will hit the database.\nInstead we will replace it with a dummy and verify that it gets called by `createUserByName`:\n\n``` php\n<?php\nfunction testUserCreate()\n{\n\t$user = test::double('User', ['save' => null]));\n\t$service = new UserService;\n\t$service->createUserByName('davert');\n\t$this->assertEquals('davert', $user->getName());\n\t$user->verifyInvoked('save');\n}\n?>\n```\n\n#### Intercept even parent class methods and magic methods\n\n``` php\n<?php\n// User extends ActiveRecord\nfunction testUserCreate()\n{\n\t$AR = test::double('ActiveRecord', ['save' => null]));\n\ttest::double('User', ['findByNameAndEmail' => new User(['name' => 'jon'])])); \n\t$user = User::findByNameAndEmail('jon','jon@coltrane.com'); // magic method\n\t$this->assertEquals('jon', $user->getName());\n\t$user->save(['name' => 'miles']); // ActiveRecord->save did not hit database\n\t$AR->verifyInvoked('save');\n\t$this->assertEquals('miles', $user->getName());\n}\n?>\n```\n\n#### Beautifully simple\n\nOnly 4 methods are necessary for method call verification and one method to define test doubles:\n\n``` php\n<?php\nfunction testSimpleStubAndMock()\n{\t\n\t$classMock = test::double('User', ['getName' => 'davert']);\n\t$user = new User;\n\t$this->assertEquals('davert', $user->getName());\n\t$classMock->verifyMethodInvoked('getName');\n\t$classMock->verifyMethodInvokedOnce('getName');\n\t$classMock->verifyMethodNeverInvoked('setName');\n\t$classMock->verifyMethodInvokedMultipleTimes('setName',1);\n}\n?>\n```\n\nTo check that method `setName` was called with `davert` as argument.\n\n``` php\n<?php\n$user->verifyMethodInvoked('setName', ['davert']);\n?>\n```\n\n## Wow! But how does it work?\n\nNo PECL extensions is required. The [Go! AOP](http://go.aopphp.com/) library does the heavy lifting by patching autoloaded PHP classes on the fly. By introducing pointcuts to every method call, Go! allows intercepting practically any call to a method. AspectMock is a very tiny framework consisting of only 8 files using the power of the [Go! AOP Framework](http://go.aopphp.com/). Check out Aspect Oriented Development and the Go! library itself.\n\n## Requirements\n\nPHP >= 5.4 + [Go! AOP Requirements](https://github.com/lisachenko/go-aop-php#requirements)\n\n## Installation\n\n### 1. Add aspect-mock to your composer.json.\n\n```\n{\n\t\"require-dev\": {\n\t\t\"codeception/aspect-mock\": \"*\"\n\t}\n}\n```\n\n### 2. Install AspectMock with Go! AOP as a dependency.\n\n```\nphp composer.phar update\n```\n\n## Configuration\n\nInclude `AspectMock\\Kernel` class into your tests bootstrap file. \n\n### With Composer's Autoloader\n\n``` php\n<?php\ninclude __DIR__.'/../vendor/autoload.php'; // composer autoload\n\n$kernel = \\AspectMock\\Kernel::getInstance();\n$kernel->init([\n    'debug' => true,\n    'includePaths' => [__DIR__.'/../src']\n]);\n?>\n```\n\nIf your project uses Composer's autoloader, that's all you need to get started.\n\n### With Custom Autoloader\n\nIf you use a custom autoloader (like in Yii/Yii2 frameworks), you should explicitly point AspectMock to modify it:\n\n``` php\n<?php\ninclude __DIR__.'/../vendor/autoload.php'; // composer autoload\n\n$kernel = \\AspectMock\\Kernel::getInstance();\n$kernel->init([\n    'debug' => true,\n    'includePaths' => [__DIR__.'/../src']\n]);\n$kernel->loadFile('YourAutoloader.php'); // path to your autoloader\n?>\n```\n\nLoad all autoloaders of your project this way, if you do not rely on Composer entirely.\n\n### Without Autoloader\n\nIf it still doesn't work for you... \n\nExplicitly load all required files before testing:\n\n\n``` php\n<?php\ninclude __DIR__.'/../vendor/autoload.php'; // composer autoload\n\n$kernel = \\AspectMock\\Kernel::getInstance();\n$kernel->init([\n    'debug' => true,\n    'includePaths' => [__DIR__.'/../src']\n]);\nrequire 'YourAutoloader.php';\n$kernel->loadPhpFiles('/../common');\n?>\n```\n\n### Customization\n\nThere are a few options you can customize setting up AspectMock. All them are defined in Go! Framework.\nThey might help If you still didn't get AspectMock running on your project.\n\n* `appDir` defines the root of web application which is being tested. All classes outside the root will be replaced with the proxies generated by AspectMock. By default it is a directory in which `vendor` dir of composer if located. **If you don't use Composer** or you have custom path to composer's vendor's folder, you should specify appDir\n* `cacheDir` a dir where updated source PHP files can be stored. If this directory is not set, proxie classes will be built on each run. Otherwise all PHP files used in tests will be updated with aspect injections and stored into `cacheDir` path.\n* `includePaths` directories with files that should be enhanced by Go Aop. Should point to your applications source files as well as framework files and any libraries you use..\n* `excludePaths` a paths in which PHP files should not be affected by aspects. **You should exclude your tests files from interception**.\n\nExample:\n\n\n``` php\n<?php\n$kernel = \\AspectMock\\Kernel::getInstance();\n$kernel->init([\n    'appDir'    => __DIR__ . '/../../',\n    'cacheDir'  => '/tmp/myapp',\n    'includePaths' => [__DIR__.'/../src']\n    'excludePaths' => [__DIR__] // tests dir should be excluded\n]);\n?>\n```\n\n[More configs for different frameworks](https://github.com/Codeception/AspectMock/wiki/Example-configs).\n\n**It's pretty important to configure AspectMock properly. Otherwise it may not work as expected or you get side effects. Please make sure you included all files that you need to mock, but your test files as well as testing frameworks are excluded.**\n\n\n## Usage in PHPUnit\n\nUse newly created `bootstrap` in your `phpunit.xml` configuration. Also disable `backupGlobals`:\n\n``` xml\n<phpunit bootstrap=\"bootstrap.php\" backupGlobals=\"false\">\n```\n\nClear the test doubles registry between tests.\n\n``` php\n<?php\nuse AspectMock\\Test as test;\n\nclass UserTest extends \\PHPUnit_Framework_TestCase\n{\n    protected function tearDown()\n    {\n        test::clean(); // remove all registered test doubles\n    }\n\n    public function testDoubleClass()\n    {\n        $user = test::double('demo\\UserModel', ['save' => null]);\n        \\demo\\UserModel::tableName();\n        \\demo\\UserModel::tableName();\n        $user->verifyInvokedMultipleTimes('tableName',2);\n    }\n\n?>\n```\n\n## Usage in Codeception.\n\nInclude `AspectMock\\Kernel` into `tests/_bootstrap.php`.\nWe recommend including a call to `test::clean()` from your `CodeHelper` class:\n\n``` php\n<?php\nnamespace Codeception\\Module;\n\nclass CodeHelper extends \\Codeception\\Module\n{\n\tfunction _after(\\Codeception\\TestCase $test)\n\t{\n\t\t\\AspectMock\\Test::clean();\n\t}\n}\n?>\n```\n\n## Improvements?\n\nThere is guaranteed to be room for improvements. This framework was not designed to do everything you might ever need (see notes below). But if you feel like you require a feature, please submit a Pull Request. It's pretty easy since there's not much code, and the Go! library is very well documented.\n\n## Credits\n\nFollow [**@codeception**](http://twitter.com/codeception) for updates.\n\nDeveloped by **Michael Bodnarchuk**.\n\nModified by **Jos\u00e9 Manuel Barroso Galindo** for LAZADA.\n\n\nLicense: **MIT**.\n\nPowered by [Go! Aspect-Oriented Framework](http://go.aopphp.com/)",
      "archived": false,
      "url": "https://github.com/theypsilon/AspectMock",
      "releases": []
    },
    {
      "name": "backup-ops",
      "description": "Apps for managing my backup files",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/backup-ops",
      "releases": []
    },
    {
      "name": "biff",
      "description": "Just a minimal website for my group of friends",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/biff",
      "releases": []
    },
    {
      "name": "clang-tests",
      "description": null,
      "readme": "1. Compile: ./compile.sh\n2. Run: ./run.sh\n",
      "archived": false,
      "url": "https://github.com/theypsilon/clang-tests",
      "releases": []
    },
    {
      "name": "cmake-test",
      "description": null,
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/cmake-test",
      "releases": []
    },
    {
      "name": "concat",
      "description": "A string concatenation utility in a single header file for C++11.",
      "readme": "concat.hpp [![Build Status](https://travis-ci.org/theypsilon/concat.svg?branch=master)](https://travis-ci.org/theypsilon/concat)\n======\n\nBecause string concatenation deserves one-liners in C++11 too.\n\n```cpp\nstd::cout << concat(\"aa\", \"bb\") << std::endl;\n/* output: \"aabb\" */\n```\n    \n    \nThat simple. **concat** also works with containers and other scalar types.\n\n```cpp\nstd::vector<int> v{1,2,3,4,5};\nstd::cout << concat(v) << std::endl;\n/* output: \"12345\" */\n```\n\n    \nYou may use separators in two ways:\n\n```cpp\nstd::cout << concat(separator(\" + \"), 1,2,3,4,5) << std::endl;\n/* output: \"1 + 2 + 3 + 4 + 5\" */\n\nstd::cout << concat<' '>('a','b','c') << std::endl;\n/* output: \"a b c\" */\n```\n\n\n\nIt is possible to mix between different parameter types, because under the hood we are using a ``std::ostringstream``.\n\n```cpp\nstd::cout << concat<' '>(\"hello\", \"world\", std::make_tuple(1,2,3), '!', v) << std::endl;\n/* output: \"hello world 1 2 3 ! 1 2 3 4 5\" */\n```\n\n\n\nYeah, it also accepts tuples (even nested ones). You may also introduce manipulators.\n\n```cpp\nstd::cout << concat<' '>(std::setprecision(2), 4.0/3.0, std::setprecision(3), 1.0/3.0) << std::endl;\n/* output: \"1.3 0.333\" */\n```\n\n\n\nAnd if you want fine-grained control of the underlying ``std::stringstream``, you may also supply it. Just make sure that you pass it as the first parameter (second, if there is also a separator parameter).\n\n```cpp\nstd::stringstream s;\nconcat<' '>(s, \"it\", \"just\", \"works!\");\nstd::cout << s.str() << endl;\n/* output: \"it just works!\" */\n```\n\n\n\nIf you supply the std:stringstream as the second or any other parameter, it just gonna be converted to ``std::string``, so you are not writing on it.\n\nSupplying the ``std::stringstream`` can be useful.\n\n```cpp\nstd::ostringstream s1, s2;\n\nread_file(s2, \"test.txt\"); // this might cause s2.setstate(std::ios::failbit);\n\ntry {\n    s1.exceptions(std::ios::failbit);\n    concat(s1, s2); // s1 gets the output of reading s2\n} catch(std::ios::failure& e) {\n    std::cout << e.what() << std::endl;\n}\n\n/* output could be like this: \"ios_base::clear: unspecified iostream_category error\" */\n```\n\n\n    \nYou can work with unicode, by specifing the char type as template parameter.\n\n```cpp\nassert((concat<char16_t>(                u\"uni\", u\"code\") == u\"unicode\") &&\n       (concat<char32_t>(separator(U\"\"), U\"Uni\", U\"code\") == U\"Unicode\"));\n           \n/* that's true! */\n```\n    \n\nBy the way, the only way to specify a separator with UTF parameters is that one.\n\nString type conversion between different UTF charsets is not yet implemented, so when you choose an encoding format, you have to stick to it for all the supplied parameters.\n\nKnow more\n------\n\nIf you want to read more about the power of **concat**, you can learn all you need to know just by reading [tests/unit.cpp](tests/unit.cpp).\n\nWhy not just use std::stringstream?\n------\n\nOf course you can, and I'm sure it is gonna be good enough for many situations. But sometimes I wish it could cover some other common use cases that right now require special (and often tedious) handling. Unfortunately, with ``std::stringstream`` you can not print **arrays**, **containers**, **tuples**, **pairs** or other **stringstreams** in a uniform and concise manner. \n\nFurthemore there are some tricky things about streams, that can make them feel a little unsafe. I.e.: when you attempt to add a ```(const char*)nullptr``` to a stream, it silently fails (unless you configured exceptions), and following operations with ``<<`` would totally be ignored. This would never happen with **concat** even if you decide to inject your own ``std::stringstream`` as shown above.\n\nSeparators, and the function syntax, are also some nice additions that could help to produce a more terse and readable code. It is convenient to remember that in most of the code we write, we are not doing performance critical operations, and therefore we should always consider the chance of trading off a little performance penalty for a better readability.\n\nBuild\n------\nIt is just a header file! Just copy ``concat.hpp`` to your include path, maybe rename the namespace to something more convenient than my nickname, and start using it. \n\nOf course, also make sure your compiler is set to C++11 and that you are linking a standard library implementation in your project, because there is no other dependency. \n\n----\n\nPlease **\"Star\"** the project on GitHub to help it to survive! Thanks!\n",
      "archived": false,
      "url": "https://github.com/theypsilon/concat",
      "releases": []
    },
    {
      "name": "delme",
      "description": null,
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/delme",
      "releases": []
    },
    {
      "name": "display-sim",
      "description": "This is a tool that helps you to recreate the visual feeling of old displays.",
      "readme": "# Display Sim [![Build Status](https://travis-ci.com/theypsilon/display-sim.svg?branch=master)](https://travis-ci.com/theypsilon/display-sim)\n\nThis is a tool that helps you to recreate the visual feeling of old displays.\n\nDemo at [theypsilon.github.io/display-sim](https://theypsilon.github.io/display-sim).\n\n## DEVELOPMENT\n\nPrerequisites:\n\n- https://www.rust-lang.org/tools/install\n- https://nodejs.org/\n- https://rustwasm.github.io/wasm-pack/installer\n- bash\n\nRun: `./run.sh`\n",
      "archived": false,
      "url": "https://github.com/theypsilon/display-sim",
      "releases": []
    },
    {
      "name": "docker-compose",
      "description": "Docker with Docker compose binaries",
      "readme": "DOCKER WITH DOCKER COMPOSE",
      "archived": false,
      "url": "https://github.com/theypsilon/docker-compose",
      "releases": []
    },
    {
      "name": "docker-elasticsearch",
      "description": "ElasticSearch for Docker.",
      "readme": "docker-elasticsearch\n====================\n\nBased on https://github.com/docker-library/elasticsearch/tree/2ceaacde5b9dcc3e15f5daa4b1a282bf0f190d2b/1.4",
      "archived": false,
      "url": "https://github.com/theypsilon/docker-elasticsearch",
      "releases": []
    },
    {
      "name": "docker-fakesmtp",
      "description": "FakeSmtp server running on docker",
      "readme": "# Docker Fake SMTP\n\n```shell\n$ ./test.sh\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/docker-fakesmtp",
      "releases": []
    },
    {
      "name": "docker-fcron",
      "description": null,
      "readme": "Fcron Docker\n============\n```shell\n\tmake docker-test\n\tmake docker-run\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/docker-fcron",
      "releases": []
    },
    {
      "name": "docker-redis",
      "description": "Dockerfile for some old projects still using Redis 2.4",
      "readme": "Docker image for old Redis 2.4, based on [official Redis image](https://github.com/docker-library/redis)\n",
      "archived": false,
      "url": "https://github.com/theypsilon/docker-redis",
      "releases": []
    },
    {
      "name": "docker-waiter",
      "description": "Docker Images implementing wait logic for common services",
      "readme": "# Docker Waiter [![Build Status](https://travis-ci.org/theypsilon/docker-waiter.svg?branch=latest)](https://travis-ci.org/theypsilon/docker-waiter)\n\nThis is an image collection of \"waiters\", images that are meant to be run as one-off processes, exiting succesfully when the matching service they are waiting for is *ready*.\n\nA common problem in docker, is expecting that once a cointainer is *started*, it is also inmmediately *ready*, so it can interoperate with other services normally, but that is not true for many common services. Data races and faulty deployments can occur spuriously if this is not taken seriously into consideration when designing integration routines. Thus, a sane solution for avoiding those problems would be *pinging* the service until a *pong* is returned, indicating that the container is finally *ready* to operate as expected. Unfortunatelly, the *ping* interface needs to be implemented differently for every kind of service, and because this task can be rather cumbersome, you might consider using some *waiters* already implementing those solutions in this repo.\n\nAll *waiter* images will use exactly the same [waiter script](waiter/waiter.sh) as default command that can be configured with the following environment variables:\n\n* **WAITER_TIMEOUT** (optional, default value is 50): Time in seconds that you are willing to wait to your service. If there is no succesful *ping* before the timeout, it means that the service is expected to never be *ready* for the current context, so the process will exit with error code 1.\n* **WAITER_ATTEMPT_SLEEPTIME** (optional, default value is 5): Amount of time the waiter will wait in seconds after an unsuccesful *ping* attempt. After that time, a new attempt will begin.\n* **WAITER_DEBUG** (optional, default: false): If true, it will show in console the response of the *ping* command executed on attemps, otherwise it will be hidden.\n\nAnd in order to provide wait logic for a heterogeneous number of services, every *waiter* here provides a different definition of `ping.sh` that is useful for its correspoding service. In case you wanna check them, those are located at: `services/*/ping.sh`\n\n# List of Images\n\n* **theypsilon/waiter-mysql:0.1.23**: Waits until MySQL is able to execute queries.\n* **theypsilon/waiter-rest:0.1.23**: Waits until the expected HTTP STATUS CODE is returned from a given HTTP URL\n* **theypsilon/waiter-elasticsearch:0.1.23**: Waits until Elastic Search server is up and the cluster health status is green or yellow.\n\n# How to use the Images\n\n### theypsilon/waiter-elasticsearch:0.1.23\n\nConfiguration of the Elastic Search Waiter can be done through the following environment variables:\n\n* **ELASTICSEARCH_HOST** (mandatory)\n* **ELASTICSEARCH_PORT** (mandatory)\n\nExample:\n```\n$ docker run --name elasticsearch_server -d elasticsearch:1.5.2\n\n51321a23d283005344502b330b5249248f70f0c5ac4cee36fb6356a17f078034\n\n$ docker run -it --rm --link elasticsearch_server:elasticsearch_server \\\n\t-e ELASTICSEARCH_HOST=elasticsearch_server \\\n\t-e ELASTICSEARCH_PORT=9200 \\\n\t-e WAITER_DEBUG=false \\\n\t-e WAITER_TIMEOUT=20 \\\n\t-e WAITER_ATTEMPT_SLEEPTIME=1 \\\n\ttheypsilon/waiter-elasticsearch:0.1.23\n\n[WAITER] WAITER_TIMEOUT: 20 | WAITER_ATTEMPT_SLEEPTIME: 1\n[WAITER] ....... OK\n```\n\n\n### theypsilon/waiter-mysql:0.1.23\n\nConfiguration of the MySQL Waiter can be done through the following environment variables:\n\n* **MYSQL_HOST** (mandatory)\n* **MYSQL_PORT** (mandatory)\n* **MYSQL_USER** (mandatory)\n* **MYSQL_PASSWORD** (mandatory)\n* **MYSQL_QUERY** (optional, default value is `select 1`): As long as the query produce an Error, the ping will be valid.\n\nExample:\n```\n$ docker run --name mysql_server -d \\\n\t-e MYSQL_ROOT_PASSWORD=root \\\n\t-e MYSQL_USER=test \\\n\t-e MYSQL_PASSWORD=test \\\n\t-e MYSQL_DATABASE=test \\\n\tmysql:5.6.28\n\nc03b737671099e1454e65e03cb1d4d1c05fdb4ddfd7bf725112d495ad637605a\n\n$ docker run -it --rm --link mysql_server:mysql_server \\\n\t-e MYSQL_HOST=mysql_server \\\n\t-e MYSQL_PORT=3306 \\\n\t-e MYSQL_USER=test \\\n\t-e MYSQL_PASSWORD=test \\\n\t-e WAITER_DEBUG=true \\\n\t-e WAITER_TIMEOUT=20 \\\n\t-e WAITER_ATTEMPT_SLEEPTIME=1 \\\n\ttheypsilon/waiter-mysql:0.1.23 && echo DONE!\n\n[WAITER] WAITER_TIMEOUT: 20 | WAITER_ATTEMPT_SLEEPTIME: 1\n[WAITER] ...... OK\nDONE!\n```\n\n\n### theypsilon/waiter-rest:0.1.23\n\nConfiguration of the REST Waiter can be done through the following environment variables:\n\n* **HTTP_URL** (mandatory): URL of the shape `http://%SERVICE_DOMAIN:%SERVICE_PORT/route/ping`\n* **HTTP_STATUS_CODE** (mandatory): The expected HTTP STATUS CODE meaning that the resource behind the given HTTP URL is OK, typically **200**.\n\nExample:\n```\n$ docker run --name elasticsearch_server -d elasticsearch:1.5.2\n\nf14ac8441f2614748e461acd4ab0417d77a59a06e25fab240a88406736d15107\n\n$ docker run -it --rm --link elasticsearch_server:elasticsearch_server \\\n\t-e HTTP_URL=http://elasticsearch_server:9200/_cluster/health \\\n\t-e HTTP_STATUS_CODE=200 \\\n\t-e WAITER_DEBUG=false \\\n\t-e WAITER_TIMEOUT=20 \\\n\t-e WAITER_ATTEMPT_SLEEPTIME=1 \\\n\ttheypsilon/waiter-rest:0.1.23 && echo DONE!\n\n[WAITER] WAITER_TIMEOUT: 20 | WAITER_ATTEMPT_SLEEPTIME: 1\n[WAITER] .. OK\nDONE!\n```\n\n**NOTE**: Notice that checking elasticsearch by looking the http status code is not sufficient, and you should use the image '**theypsilon/waiter-elasticsearch:0.1.23**' instead to know when the elasticsearch clusters are ready.\n\n# Contributing\n\nThis repository accepts pull requests.\n\nMore details at [CONTRIBUTING.md](CONTRIBUTING.md)\n\n# License\n\n[LICENSE.md](LICENSE.md)\n",
      "archived": false,
      "url": "https://github.com/theypsilon/docker-waiter",
      "releases": []
    },
    {
      "name": "docker-waitfortrue",
      "description": null,
      "readme": "# Wait For True\n\n### Example\n```\n$ docker run --rm theypsilon/waitfortrue:1.0.0 curl --head www.google.com\n\nWAITING FOR [curl --head www.google.com] during 100 seconds\nOK\n```\n\n##### Debug mode\n```\n$ docker run --rm -e DEBUG=true theypsilon/waitfortrue:1.0.0 curl --head www.google.com\n\nWAITING FOR [curl --head www.google.com] during 100 seconds\nDEBUG ON\nHTTP/1.1 200 OK\nDate: Mon, 23 May 2016 06:58:14 GMT\nExpires: -1\nCache-Control: private, max-age=0\nContent-Type: text/html; charset=ISO-8859-1\nP3P: CP=\"This is not a P3P policy! See https://www.google.com/support/accounts/answer/151657?hl=en for more info.\"\nServer: gws\nX-XSS-Protection: 1; mode=block\nX-Frame-Options: SAMEORIGIN\nSet-Cookie: NID=79=DNXrr_uEHM4AuHsKs04608AjkNaA71LK_wkYMhd8hjXCdJBBpaDI3GiwpXHsIdEBIaNbhtFDR4PABL-8MQX3OOrOuPfVCWpu6Pk5X63Avrn3ZvL1ZsfKF0E52xCsJ5-9wfCtxv-gdfnFYdE; expires=Tue, 22-Nov-2016 06:58:14 GMT; path=/; domain=.google.com; HttpOnly\nTransfer-Encoding: chunked\nAccept-Ranges: none\nVary: Accept-Encoding\n\nOK\n```\n\n##### Modifying timeout (default value is 100 seconds)\n```\n$ docker run --rm -e TIMEOUT_SECONDS=5 theypsilon/waitfortrue:1.0.0 curl --head wrong.google.com\n\nWAITING FOR [curl --head wrong.google.com] during 5 seconds\n..!!\nFAILED: timeout triggered after 5 seconds\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: wrong.google.com\n\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/docker-waitfortrue",
      "releases": []
    },
    {
      "name": "dotvim",
      "description": "Vim personal configuration folder",
      "readme": "Installation:\n\n    git clone git://github.com/theypsilon/dotvim.git ~/.vim\n\nCreate symlinks:\n\n    ln -s ~/.vim/vimrc ~/.vimrc\n\nSwitch to the `~/.vim` directory, and fetch submodules:\n\n    cd ~/.vim\n    git submodule init\n    git submodule update\n",
      "archived": false,
      "url": "https://github.com/theypsilon/dotvim",
      "releases": []
    },
    {
      "name": "EvoLearning",
      "description": "Simple Tensor, Neural Network and Evolutionary Reinforcement Learning libraries",
      "readme": "# EvoLearning\nSimple Tensor, Neural Network and Evolutionary Reinforcement Learning libraries\n\n## Bot Example\n\n```csharp\npublic sealed class NeuralNetworkBot : IInputWriter {\n    private NeuralNetwork _nn = null;\n\n    private Context _ctx; // This is a struct containing the simulation state, defined elsewhere.\n    double _fitness = 0;\n    const int InputRaysSize = 30;\n    float[] _inputRays = new float[InputRaysSize];\n\n    public NeuralNetworkBot(Context ctx) {\n        _ctx = ctx;\n        _nn = NeuralNetwork.FromFileOrScratch(new int[] {InputRaysSize, 500, 2});\n        Pre.Assert(ctx.State.Config.DLRays > 0, ctx.State.Config.DLRays);\n    }\n\n    public void WriteInput(ref Input input) {\n\n        if (_ctx.State.Player.HasJustDied) {\n            _nn.FinishLife((int) _fitness, (int) _ctx.State.Stage.StageNumber);\n        } else if (_ctx.State.Player.HasJustReborn) {\n            _nn.NextLife();\n            _fitness = 0;\n        }\n\n        if (_ctx.State.Player.IsDead) {\n            return;\n        }\n\n        // These components are using the following library: https://github.com/theypsilon/MiniECS\n        var playerPosition = _ctx.Pools.PositionComponents.Get(_ctx.State.Player.Entity);\n\n        var fitnessChange = 0.0;\n        float[] inputNeurons = null;\n\n        // The input neurons are values between [0.0, 1.0] indicating the proximity of an enemy\n        // 0 indicates undetected enemy\n        // 0.5 indicates enemy detected at intermediate distance\n        // 1.0 indicates enemy at collision distance\n        // It basically works like a sonar, with rays pointing all coordinates around\n        \n        var neurons = _ctx.State.DeepLearning.Rays; \n        if (neurons == null) return;\n\n        for (var i = 0; i < neurons.Length; i++) {\n            _inputRays[i] = neurons[i];\n            if (neurons[i] >= 0.85) { // indicates an enemy is very close, I'd like to punish that.\n                fitnessChange = -1.5;\n            }\n        }\n        for (var i = 0; i < neurons.Length; i++) {\n            _inputRays[15 + i] = playerPosition.Point.X / 1080; // Player position is between [0.0, 1080.0]\n        }\n        inputNeurons = _inputRays;\n        \n        _nn.Predict(inputNeurons, ref input.Control.Left, ref input.Control.Right);\n\n        // rewarding survivavility\n        fitnessChange += 1.0;\n        \n        // rewarding not moving\n        if (input.Control.Left == false) {\n            fitnessChange += 0.1;\n        }\n        if (input.Control.Right == false) {\n            fitnessChange += 0.1;\n        }\n        \n        // rewarding staying in the center of the screen\n        if (playerPosition.Point.X < 100) {\n            fitnessChange -= 0.25;\n        }\n        if (playerPosition.Point.X > 980) {\n            fitnessChange -= 0.25;\n        }\n\n        _fitness += fitnessChange;\n    }\n}\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/EvoLearning",
      "releases": []
    },
    {
      "name": "fetchdeps",
      "description": "cvs oriented dependency manager written in bash",
      "readme": "FETCHDEPS\n=========\n\nsource repository manager\n",
      "archived": false,
      "url": "https://github.com/theypsilon/fetchdeps",
      "releases": []
    },
    {
      "name": "FlatScene-Layer",
      "description": "High abstraction layer designed to create 2D Apps in C++.",
      "readme": "# FlatScene\n\n**FlatScene** is a high abstraction layer designed to create *2D interactive applications* in a rapid and easy way. This library uses **OpenGL** to render 2D graphics supporting *hardware acceleration*, and **SDL** to manipulate I/O events. \n\nActually, the library is ready for use in **C++**. It benefits from the *portability* inherited from **SDL** and **OpenGL**, thus allowing to the user the managing of *multiplattform projects* without so much concerns.\n\n# DemoArk\n\nThis is a **test application** created to show the features of **FlatScene**.\n\nIn this demo, input keys are :\n\n* **ESC** : Simple option *menu*. You got here an option for leaving the demo.\n\n* **F1** : Swap between *tests*.\n* **F2** : *Restart* current test.\n* **F3** : Swap *fullscreen mode* - *window mode*.\n\n* **SPACE** : *Pause*.\n\n* **Arrow keys** : *Walking*.\n\n* Into first test, press **u** to stress *change map* test.\n\n* Into double cam test, press **a** to kill the grey enemies.\n\n# Compilation\n\nFirst, install gcc, cmake, and the dev libraries for opengl, sdl1.2 and boost (maybe boost is not really needed).\n\nThen type on console: \n```bash\n./run.sh\n```",
      "archived": false,
      "url": "https://github.com/theypsilon/FlatScene-Layer",
      "releases": []
    },
    {
      "name": "Forks_MiSTer",
      "description": "Scripts and tasks for keeping MiSTer core forks synced with their upstreams.",
      "readme": "# Forks MiSTer\nScripts and tasks for keeping MiSTer core forks synced with their upstreams.\n\n### Github Actions\n\n1. [Setup CI/CD](.github/workflows/setup_cicd.yml): Delivering CI/CD code to all forks repositories when necessary. Running on push/pull_request to this repository.\n2. [Sync Forks](.github/workflows/sync_forks.yml): Scheduler every third hour, that cheks if the upstream has a newer release, and in that case tells the fork to sync with it.\n\n### Scripts (Not intended for general use)\n\n1. [`force_fork_release.sh`](force_fork_release.sh): Debugging script that forces a fork release.\n2. [`force_forks_event.sh`](force_forks_event.sh): Debugging script that forces some event in this repository.\n3. [`merge_joydb9md_into_main.sh`](merge_joydb9md_into_main.sh): Migration script that merges branch Joy_DB9MD into master for the given fork/s.\n4. [`delete_branch_joydb9md.sh`](delete_branch_joydb9md.sh): Migration script that deletes the branch Joy_DB9MD from the given fork/s.\n5. [`apply_replace_patch_1.sh`](apply_replace_patch_1.sh): Migration script that applies a replace patch to the given fork/s.\n6. [`delete_latest_commit.sh`](delete_latest_commit.sh): Migration script that deletes the latest commit from the given fork/s.\n\n## Instructions for Forks\n\n- Every fork repository has to add the owner of this repository as [collaborator](https://help.github.com/en/github/setting-up-and-managing-your-github-user-account/inviting-collaborators-to-a-personal-repository).\n\n- If a fork wants to enable email notification to the maintainer in case of merge conflict or compilation error, has to add a [Secret](https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets) named `NOTIFICATION_API_KEY` with the proper auth key to the fork repository.\n\n- The fork needs to appear within [Forks.ini](Forks.ini) with the appropriate values in its declaration. In case it is desired to be synced it also has to be in the `SYNCING_FORKS` list.\n\n### License\n\nCopyright \u00a9 2020, [Jos\u00e9 Manuel Barroso Galindo](https://github.com/theypsilon).\nReleased under the [GPL v3 License](LICENSE).",
      "archived": false,
      "url": "https://github.com/theypsilon/Forks_MiSTer",
      "releases": []
    },
    {
      "name": "gcc-linaro-dockerized",
      "description": "GCC Linaro dockerized compilation environment",
      "readme": "# GCC Linaro compilation environment Dockerized\n\nUseful for compiling for arm targets.\n\nDeveloped for its use in [Main_MiSTer](https://github.com/Miguel-T80c/Main_MiSTer).\n\nContains `make`.\n\nImages on [docker hub](https://hub.docker.com/r/theypsilon/gcc-linaro): \n```bash\ntheypsilon/gcc-linaro:6.5.0 # 667MB\n```\n\nWhen using the image, `/gcc-linaro/bin` will be in your `PATH`.\n\nExpected binaries like `arm-linux-gnueabihf-gcc` are contained in that folder.\n\n### License\n\nCopyright \u00a9 2020, [Jos\u00e9 Manuel Barroso Galindo](https://github.com/theypsilon).\nReleased under the [MIT License](LICENSE).\n",
      "archived": false,
      "url": "https://github.com/theypsilon/gcc-linaro-dockerized",
      "releases": []
    },
    {
      "name": "Genesis_MiSTer",
      "description": "Sega Genesis for MiSTer",
      "readme": "# SEGA Megadrive/Genesis for MiSTer.\n\nThis is the port of fpgagen core.\n\nfpgagen - a SEGA Megadrive/Genesis clone in a FPGA.\nCopyright (c) 2010-2013 Gregory Estrade (greg@torlus.com)\nAll rights reserved\n\n\n## Installing\ncopy *.rbf to root of SD card. Put some ROMs (*.BIN/*.GEN/*.MD) into Genesis folder\n\n\n## Hot Keys\n* F1 - reset to JP(NTSC) region\n* F2 - reset to US(NTSC) region\n* F3 - reset to EU(PAL)  region\n\n\n## Auto Region option\nThere are 2 versions of region detection:\n\n1) File name extension:\n\n* BIN -> JP\n* GEN -> US\n* MD  -> EU\n\n2) Header. It may not always work as not all ROMs follow the rule, especially in European region.\nThe header may include several regions - the correct one will be selected depending on priority option.\n\n\n## Additional features\n\n* Multitaps: 4-way, Team player, J-Cart\n* SVP chip (Virtua Racing)\n* Audio Filters for Model 1, Model 2, Minimal, No Filter.\n* Option to choose between YM2612 and YM3438 (changes Ladder Effect behavior).\n* Composite Blending, smooth dithering patterns in games.\n* Sprite Limit, enables more sprites.\n* CPU Turbo, mitigates slowdowns.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Genesis_MiSTer",
      "releases": [
        {
          "name": "Genesis_20180602.rbf",
          "sha": "4a177709963d84e78504dec09e37b9fffb26990e",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20180602.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20180609.rbf",
          "sha": "41992e2f0f373f80aca4b61e1f200d4fe330a037",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20180609.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20180926.rbf",
          "sha": "099c4da4c1496389852c4ac1c594e7ce0b81b721",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20180926.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181003.rbf",
          "sha": "adf5dc1031e4dd652be4e6bb504359020ef81551",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181003.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181010.rbf",
          "sha": "8215d3978007f69d098ac78bce0a87c41ff5d2cc",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181010.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181015.rbf",
          "sha": "6a52c0306ef44c0d8a4c9400dfec1869f7ad6444",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181015.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181016.rbf",
          "sha": "531b2bf44359b794fad5d164322aa62b5c2fb6f7",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181016.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181019.rbf",
          "sha": "6d138c26920bbe0ad5e713619cf94d0668d050ff",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181019.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181029.rbf",
          "sha": "3fb87664f2525a424af63e556f290ed755f5c2fe",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181029.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181031.rbf",
          "sha": "514ae792bbf7a5eef9f82fd7bdfcb6bc7b0e1307",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181031.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181105.rbf",
          "sha": "3ba1f44e67cbf4be7a4f341e10d1e9f794c2187d",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181105.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181111.rbf",
          "sha": "de67e18d5a545696a6e8e3ee4c33952209dd4300",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181111.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181116.rbf",
          "sha": "861a16015c824a1e1d50802a15b528f893859e85",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181116.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181118.rbf",
          "sha": "a9ff315ff97929b7133be2eb970f21f1411790b3",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181118.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181125.rbf",
          "sha": "1c8651ffa0716a46e7505fc45176ea721d63011f",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181125.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181126.rbf",
          "sha": "5929d435c4eb8dfcc039e09218f9121e397d877f",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181126.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181205.rbf",
          "sha": "7f9d9c34b77977dfc022196d3c64aeb7aa695b16",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181205.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181206.rbf",
          "sha": "4dc2da98e0364387f069d8aeba527c8aefe812b8",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181206.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181207.rbf",
          "sha": "661d2a45160f9048e5831e68db5ec51ae490870e",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181207.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181210.rbf",
          "sha": "fad7ca2417a9ce3fb3631b85824ce0ec6ded732f",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181210.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181224.rbf",
          "sha": "090907fd7f0c0b18d7d5080726bf5fda3ee7a624",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181224.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20181231.rbf",
          "sha": "3403b9b3a63ca4bb1353055d4550f2f3db9c45e5",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20181231.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190110.rbf",
          "sha": "0dd351fb934480f1fc163da39248f8ce3b2e1aa9",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190110.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190218.rbf",
          "sha": "55b38f29138b2f5e90e07decef07dc30cedf9b9d",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190218.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190225.rbf",
          "sha": "79214614b71c52a6017cc82439ecbd969f70f78c",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190225.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190307.rbf",
          "sha": "aa98f2257c59f426fda680ec3b07c086606cfcd3",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190307.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190406.rbf",
          "sha": "4fa23d404b11ecd42e52fc0367c60a685efa1f6b",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190406.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190407.rbf",
          "sha": "c00163edf5bcd3733871b67e16e2840b9810f7e1",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190407.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190415.rbf",
          "sha": "26e9034db73e89cf377d7eaa3685a61e0b89bac2",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190415.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190503.rbf",
          "sha": "8a74435b333133d84edb0cab53c3cae4e3655a9f",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190503.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190510.rbf",
          "sha": "ddbd3eab0d43e69b9c9cc414c0a648a0af1face5",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190510.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190517.rbf",
          "sha": "1c5561896dd5b743af00a8a26a5d69c7e002cd78",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190517.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190604.rbf",
          "sha": "3b66f7c73f3eb5e63eaf38d697dec22a03691e74",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190604.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190617.rbf",
          "sha": "5662792363309c88aea3478155191e8463684a2e",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190617.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190627.rbf",
          "sha": "04a5d67e995312bcaae421f2cebe9943ee37bc6d",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190627.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190712.rbf",
          "sha": "a23ed6ea2f8b8310e59ec06bc16c9c5c3172f3bc",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190712.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190820.rbf",
          "sha": "102392a63f80f898acc1164c9332f7c0671c3cac",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190820.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190821.rbf",
          "sha": "6d9c927f6a6deaafc9bb881a039e1e494dc3cf95",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190821.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190823.rbf",
          "sha": "b3871ad9c3acc53519b86554aba066da8d7db78b",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190823.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190824.rbf",
          "sha": "438db132323b3d60bf83847b47bdf86542aa054a",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190824.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190911.rbf",
          "sha": "1e3ae2a8356579766a8c499483809cea4aeeaf24",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190911.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190925.rbf",
          "sha": "9a5559f320b3222d5388c39d1b3deeee9983c98e",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190925.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20190929.rbf",
          "sha": "55464cb8a89c71c08466e4b1b0c3f2f6c672d1c4",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20190929.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20191014.rbf",
          "sha": "de11e1e27c4cf7533189bfe19c66e8f88edaca36",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20191014.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20191019.rbf",
          "sha": "1185314a7fd8a7ced166ae817064827d754297d4",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20191019.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20191117.rbf",
          "sha": "97c2d22de78d2dfa07fed326a123b69673e5b291",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20191117.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200105.rbf",
          "sha": "ba816f3d7c52ff128c0d01beb8dd12ee885c44ed",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20200105.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200126.rbf",
          "sha": "e8ca869ab4f439e208054448e66844eca0dbb62e",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20200126.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200325.rbf",
          "sha": "c50706b9f63e4e1c5f0008b971ee532fabaaa019",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20200325.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200406.rbf",
          "sha": "8b6d5f606b6f4aa0f4ad2f745099282bce43f601",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20200406.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200502.rbf",
          "sha": "1d3ec1fb3ee2868f9fe9989443acf768dfe53665",
          "url": "https://raw.githubusercontent.com/theypsilon/Genesis_MiSTer/master/releases/Genesis_20200502.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "getset",
      "description": "Add trivial getters & setters to your interface in a very simple and extensible way",
      "readme": "getset.hpp [![Build Status](https://travis-ci.org/theypsilon/getset.svg?branch=master)](https://travis-ci.org/theypsilon/getset)\n======\n\n```cpp\n#include \"getset.hpp\"\n#include <iostream>\n\nusing namespace accessor;\n\nstruct Data {\n    getset<std::string> a;\n    getset<std::string> b;\n    getset<std::string> c;\n};\n\nint main() {\n    Data x{\"Hello\",\"I'm not a blank space\",\"World.\"};\n    x.b(\" \");\n    std::cout << x.a() << x.b() << x.c() << std::endl;\n    return 0;\n}\n\n/* output: \"Hello World.\" */\n```\n\nJust add this simple template to your types and you will have a getter & setter interface that eventually you will be able to modify in the future without any modification in client code. \n\nThis has **zero** overhead. You may compare the asm this code generates, with the one you get when you replace the getset statements with raw variable declarations and simple assignments.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/getset",
      "releases": []
    },
    {
      "name": "getters-by-type-rs",
      "description": "Derive macro for adding a getter method for each type in the struct.",
      "readme": "# Getters By Type\n\n[![Crates.io](https://img.shields.io/crates/v/getters-by-type.svg)](https://crates.io/crates/getters-by-type)\n[![Docs](https://docs.rs/getters-by-type/badge.svg)](https://docs.rs/getters-by-type)\n\nThis crate provides `GettersByType` derive macro for structs, which implements a getter method for each type they contain.\n\nThe generated methods start with the prefix `get_fields_` and end with a transcription of the type they refer.\n\nExample using `GettersByType` :\n\n```rust\n#[derive(GettersByType)]\nstruct Foo {\n    first: i32,\n    second: i32,\n    third: i32,\n}\n\nlet object = Foo { first: 6, second: 12, third: 24 };\n\n// Let's sum all the i32 fields with a fold expression:\nassert_eq!(object.get_fields_i32().iter().fold(0, |acc, x| **x + acc), 42);\n```\n\nAs you notice, the getter methods return an array containing references to all the fields of the same type.\nIn that example, the return type of the method `get_fields_i32` would be `[&i32; 3]`.\n\nThis crate also provides a `mut` version `GettersMutByType` which also adds a mut version for those methods.\n\nIn this case, the generated methods start with the prefix `get_mut_fields_` instead.\n\nExample using `GettersMutByType` :\n\n\n```rust\n#[derive(GettersMutByType)]\nstruct Foo {\n    first: Updater,\n    second: Updater,\n    ...\n    onehundredth: Updater,\n}\n\nimpl Updater {\n    fn update(&mut self) {...}\n}\n\nlet mut object = Foo::new();\n\n// Let's update all the Updater fields\nfor updater in object.get_mut_fields_updater().iter_mut() {\n    updater.update();\n}\n```\n\nIn this example, the return type of the method `get_mut_fields_updater` would be `[&mut Updater; 3]`.\nThere is no dynamic memory allocation happening within the getter methods, as they just return a fixed array with references.\nThere isn't also unsafe code being generated.\n\nFor more information, check the [documentation page](https://docs.rs/getters-by-type).\n\n## Usage\n\nWith Cargo, you can add this line to your Cargo.toml:\n\n```toml\n[dependencies]\ngetters-by-type = \"*\"\n```\n\n## Development\n\nThis currently works with primitive types, and many other referencial and genecic types, such as `&str` or `Vec`, but there are cases that are not completely covered, like the trait objects. Want to contribute? Pull requests are always welcome. Because this is my first work with procedural macros, I guess things can improve a fair lot under the hood, so there should be a few low hanging fruits already. Let's go for them!\n\n## License\n\nMIT\n",
      "archived": false,
      "url": "https://github.com/theypsilon/getters-by-type-rs",
      "releases": []
    },
    {
      "name": "go-httpmock",
      "description": "Utility for mocking the net/http package of the Go language",
      "readme": "httpmock.go ![Build Status](https://travis-ci.org/theypsilon/go-httpmock.svg?branch=master)\n======\n\nSimple utility, for mocking http connections. Work 90% based on this gist: https://gist.github.com/jarcoal/8940980\n\n```go\n// in a gopkg.in/check.v1 test method:\nRegisterResponder(\"GET\", \"http://example.com/\", func(*http.Request) (*http.Response, error) {\n    return GetResponseWithBody(\"xin chao\"), nil\n})\n\nresponse, _ := http.Get(\"http://example.com/\")\n\nc.Assert(BodyToString(response), checker.Equals, \"xin chao\")\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/go-httpmock",
      "releases": []
    },
    {
      "name": "guake",
      "description": "Drop-down terminal for GNOME",
      "readme": "=================\nGuake README file\n=================\n\nIntroduction\n~~~~~~~~~~~~\n\nGuake is a dropdown terminal made for the GNOME desktop\nenvironment. Its style of window is based on an fps games, and one of\nits goals is be easy to reach.\n\nGuake is written mostly in python and has a little piece in C (global\nhotkeys stuff). The code is placed in the src directory. Files and\nimages are in the data directory. Translation stuff is in the po directory.\n\nFeatures? Bugs? Information?\nVisit: http://guake.org/\n\n\nLicense\n~~~~~~~\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or (at\nyour option) any later version.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nGeneral Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n02110-1301, USA.\n\n\nDependencies\n~~~~~~~~~~~~\n\n * Python2.7+\n * pygtk2.10 (gtk.StatusIcon)\n * python-vte\n * python-notify\n * python-dbus\n * python-gconf\n * python-xdg\n * python-appindicator (ubuntu)\n\nTo build guake, you will need the following packages too:\n\n * python-dev\n * gtk+-2.0-dev\n * pygtk-dev\n * gconf2-dev (to use some autoconf stuff)\n\nFor Python 3, you need this package too:\n\n * python3-dev\n\nUbuntu\n------\n\nUnder Debian/Ubuntu, the following command should install all the build\ndependencies::\n\n    sudo apt-get build-dep guake\n\nFor manual dependency listing (Ubuntu 13.10)::\n\n    sudo apt-get install build-essential python autoconf\n    sudo apt-get install gnome-common gtk-doc-tools libglib2.0-dev libgtk2.0-dev libgconf2-dev\n    sudo apt-get install python-gtk2 python-gtk2-dev python-vte glade python-glade2 python-appindicator\n    # uncomment for Python 3\n    # sudo apt-get install python3-dev\n\nRedHat/Fedora\n-------------\n\nTBD\n\nCompilation\n~~~~~~~~~~~~\n\nWe are using an autotools based installation, so if you got the source\nof guake from a release tarball, please do the following::\n\n    $ git clone https://github.com/Guake/guake.git\n    $ cd guake\n    $ ./autogen.sh && ./configure && make\n    $ sudo make install\n\nIf you receive a message asking you if you have installed\nguake.schemas properly when launching guake, it means that your\ndefault sysconfdir is different from the one chosen by autotools. To\nfix that, you probably have to append the param `--sysconfdir=/etc' to\nyour `./configure' call, like this::\n\n    $ ./configure --sysconfdir=/etc && make\n\nIf it is not enought you can install the gconf schemas\nfile by hand by doing the following::\n\n    # GCONF_CONFIG_SOURCE=\"\" gconftool-2 --makefile-install-rule data/guake.schemas\n\nFor more install details, please read the `INSTALL` file.\n\nGit hook\n~~~~~~~~\n\nPlease install this git hook if you want to beauty your patch before submission::\n\n    $ cd guake\n    $ ln -s git-hooks/post-commit .git/hooks/\n",
      "archived": false,
      "url": "https://github.com/theypsilon/guake",
      "releases": []
    },
    {
      "name": "Holopolis-Map",
      "description": "Web mobile app that through geolocalization and the use of stickers with QR codes promotes democractic deliberation processes everywhere in the world.",
      "readme": "# holopolis-map\n\n- Live demo (access with mobile or tablet): https://holopolis-map.pdis.tw\n- Sticker: https://drive.google.com/file/d/1NSmDfdKFqtsEohWYdeemnkXleTbj8NMx/view\n- Mockups: https://xd.adobe.com/view/d6fb46ca-aabf-4167-7ca5-16fff3bbd6f7-a0ca/\n- Slides: https://www.canva.com/design/DADJDvut0tw/8VA8RTSRpb53GYalJ_hIDg/view\n- Documentation: https://docs.google.com/document/d/1GRa8wx6ofWAeXiXy-02J1_AmnJOjLZh_yNERIQ_g88o/view\n\n## Build Setup\n\n``` bash\n# install dependencies\nnpm install\n\n# serve with hot reload at localhost:8080\nnpm run dev\n\n# build for production with minification\nnpm run build\n\n# build for production and view the bundle analyzer report\nnpm run build --report\n\n# run unit tests\nnpm run unit\n\n# run e2e tests\nnpm run e2e\n\n# run all tests\nnpm test\n```\n\nFor detailed explanation on how things work, checkout the [guide](http://vuejs-templates.github.io/webpack/) and [docs for vue-loader](http://vuejs.github.io/vue-loader).\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Holopolis-Map",
      "releases": []
    },
    {
      "name": "Itemology",
      "description": "Plattform/Puzzle 2D Game created with MOAI",
      "readme": "Itemology\n=========\n\nPlattform/Puzzle 2D Game created with Lua and Moai SDK.\n\nWorking on Ubuntu 16.04.2 64 bits after installing: cmake git-core build-essential libglu1-mesa-dev libxmu-dev libxi-dev libxxf86vm-dev libxcb-util0-dev\n\nRun ./run.sh\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Itemology",
      "releases": []
    },
    {
      "name": "jtbin",
      "description": "Binary RBF files for MiST(er) FPGA cores",
      "readme": "# FPGA Clones of Arcade Games by Jose Tejada (@topapate)\n\nThis repository contains only binary files of my FPGA cores. Although I have\nhad some cores released through the MiSTer repository or the source code repository;\nnowadays I only add new releases to this repository in binary form.\n\n# Supported FPGA Systems\n\nCurrently there are three systems that I maintain: MiST, MiSTer and SiDi.\n\n## MiST & SiDi\nFor these systems you can generate ROMs using batch files or the MRA-to-rom file converter.\n\n## MiSTer\n\nYou can download the binaries files from the mister folder. But you can also adapt\nyour update script to grab files from this repository. The folder mister/update contains\nthe update script\n\n# Source Code Repositories\n\ncore                | Source code\n--------------------|--------------------------\nCAPCOM CPS0         | https://www.github.com/jotego/jt_gng\nDouble Dragon       | https://www.github.com/jotego/jtdd\nPopeye              | https://www.github.com/jotego/jtdd\nContra              | https://www.github.com/jotego/jtcontra\nCPS                 | still undisclosed\n\nIf you are a developer, don't miss these cores too:\n\nChip                 | Source code\n---------------------|-----------------------------------\nYM2612,YM2610,YM2203 | https://www.github.com/jotego/jt12\nYM2151:              | https://www.github.com/jotego/jt51\nYM2149:              | https://www.github.com/jotego/jt49\n\n# Final Words\n\nYou can show your appreciation through\n* Patreon: https://patreon.com/topapate\n* Paypal:  https://paypal.me/topapate\n\n```\n+--------------------------------------------------------------------------------+\n|oooooooooooooooooooooooooooooooooo+++++++++++ooooooooooooooooooooooooooooooooooo|\n|ooooooooooooooooooooooooooooooooo+. .    . .+ooooooooooooooooooooooooooooooooooo|\n|ooooooooooooooooooooooooooooooooo~         :o++ooooooooooooooooooooooooooooooooo|\n|oooooooooooooooooooooooooooo+ooo+.        .++.:oo+oo+oooooo+o+oo+oooooo++ooooooo|\n|ooooooooooooooooooooooooo+.......          .. .............................:oooo|\n|oooooooooooooooooooooooo+.                                                .+o+oo|\n|oooooooooooooooooooooooo:                                                 :o:.+o|\n|ooooooooooooooooooooooo+.                                                .++.:oo|\n|ooooooooooooooooooooooo:.....           ...........          ....... ....:o~.+oo|\n|oooooooooooooooooooooooo+++++~         ~+++:++:++++.         ++++++++++++++.+ooo|\n|oooooooooooooooooooooooooo+:~         .++.~:::::::.         .o+.~:::::::::::+ooo|\n|oooooooooooooooooooooooooooo:         :o~.+oooooo+.         ++.~oooooooooooooooo|\n|ooo~........~oooooooooooooo+.        .++.:ooooooo+         ~o:.+oooooooooooooooo|\n|oo:         ~o++ooooooooooo.         +o~.ooooooo+.        .++.~ooooooooooooooooo|\n|oo.         :+.:ooooooooo+.         ~o+.+ooooooo:         ~o:.+ooooooooooooooooo|\n|oo.         ...~:::::::..          .++.~ooooooo+.        .o+.:oooooooooooooooooo|\n|oo~                               ~o+..+ooooooo~         +o~.+oooooooooooooooooo|\n|oo+.                           .~+o+..+ooooooo+.        .o+.+ooooooooooooooooooo|\n|oooo~.                       .:+o+..:+oooooooo.         +o..oooooooooooooooooooo|\n|ooooo+:...              ..~:+++:..:+ooooooooo+         .o+.+oooooooooooooooooooo|\n|ooooooo+++::::::::::++++++++~~.~++ooooooooooo+:+:::::+:++.~ooooooooooooooooooooo|\n|ooooooooo+++:::::::::~:~~~~:++oooooooooooooooooo+::::~::~.+ooooooooooooooooooooo|\n|oooooooooooooo+o+oo++++o+ooooooooooooooooooooooo+o+++o++o+oooooooooooooooooooooo|\n+--------------------------------------------------------------------------------+\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/jtbin",
      "releases": []
    },
    {
      "name": "lua-arg-file",
      "description": "this function reads a file and returns its words as they were cli arguments",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/lua-arg-file",
      "releases": []
    },
    {
      "name": "lua-class",
      "description": "class function, a la Java, for lua",
      "readme": "lua-class\n=========\n\ninspired in Penlight, supports mixins as multiple inheritance",
      "archived": false,
      "url": "https://github.com/theypsilon/lua-class",
      "releases": []
    },
    {
      "name": "lua-dump",
      "description": "Shows information from any given lua value, in stdout, or as a single string",
      "readme": "lua-dump library\n================\n\njust require the init.lua file and use the exported functions contained in dump.lua",
      "archived": false,
      "url": "https://github.com/theypsilon/lua-dump",
      "releases": []
    },
    {
      "name": "lua-import",
      "description": "library for importing dependencies with a more terse syntax",
      "readme": "# lua-import\n\nLibrary for importing dependencies with a more terse syntax\n\n## Import usage\n\nOn top of your file:\n\n```lua\nlocal Layer, Graphics, Data; import()\n```\n\nThis code is equivalent to:\n```lua\nlocal Layer = require('Layer')\nlocal Graphics = require('Graphics')\nlocal Data = require('Data')\n```\n\nAdditionally, you can also provide a path on the import, so it will be used in all the requires:\n\n```lua\nlocal Layer, Graphics, Data; import('lib/')\n```\n\nDoes same as:\n\n```lua\nlocal Layer = require('lib/Layer')\nlocal Graphics = require('lib/Graphics')\nlocal Data = require('lib/Data')\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/lua-import",
      "releases": []
    },
    {
      "name": "lua-lazy",
      "description": "utility for lazy loading in lua",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/lua-lazy",
      "releases": []
    },
    {
      "name": "lua-strict",
      "description": "library for setting a strict mode which prevents polluting a given scope, tipically _G",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/lua-strict",
      "releases": []
    },
    {
      "name": "lua-table",
      "description": "helper functions for dealing with table values in lua",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/lua-table",
      "releases": []
    },
    {
      "name": "lua-type",
      "description": "library for checking lue value types",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/lua-type",
      "releases": []
    },
    {
      "name": "luafun",
      "description": "A high-performance functional programming library designed for LuaJIT tracing just-in-time compiler",
      "readme": "Lua Functional\n==============\n\n<img src=\"/doc/logo.png\" align=\"right\" width=\"174px\" height=\"144px\" />\n\n**Lua Fun** is a high-performance functional programming library designed for\n[LuaJIT tracing just-in-time compiler][LuaJIT].\n\nThe library provides a set of more than 50 programming primitives typically\nfound in languages like Standard ML, Haskell, Erlang, JavaScript, Python and\neven Lisp. High-order functions such as ``map``, ``filter``, ``reduce``, ``zip``\nwill help you to **write simple and efficient functional code**.\n\nLet's see an example:\n\n    > -- Functional style\n    > require \"fun\" ()\n    > -- calculate sum(x for x^2 in 1..n)\n    > n = 100\n    > print(reduce(operator.add, 0, map(function(x) return x^2 end, range(n))))\n    328350\n\n    > -- Object-oriented style\n    > local fun = require \"fun\"\n    > -- calculate sum(x for x^2 in 1..n)\n    > print(fun.range(n):map(function(x) return x^2 end):reduce(operator.add, 0))\n    328350\n\n**Lua Fun** takes full advantage of the innovative **tracing JIT compiler**\nto achieve transcendental performance on nested functional expressions.\nFunctional compositions and high-order functions can be translated into\n**efficient machine code**. Can you believe it? Just try to run the example\nabove with ``luajit -jdump`` and see what happens:\n\n    -- skip some initilization code --\n    ->LOOP:\n    0bcaffd0  movaps xmm5, xmm7\n    0bcaffd3  movaps xmm7, xmm1\n    0bcaffd6  addsd xmm7, xmm5\n    0bcaffda  ucomisd xmm7, xmm0\n    0bcaffde  jnb 0x0bca0024        ->5\n    0bcaffe4  movaps xmm5, xmm7\n    0bcaffe7  mulsd xmm5, xmm5\n    0bcaffeb  addsd xmm6, xmm5\n    0bcaffef  jmp 0x0bcaffd0        ->LOOP\n    ---- TRACE 1 stop -> loop\n\nThe functional chain above was translated by LuaJIT to (!) **one machine loop**\ncontaining just 10 CPU assembly instructions without CALL. Unbelievable!\n\nReadable? Efficient? Can your Python/Ruby/V8 do better?\n\nStatus\n------\n\n**Lua Fun** is in an early alpha stage. The library fully [documented]\n[Documentation] and covered with unit tests.\n\n[![Build Status](https://travis-ci.org/rtsisyk/luafun.png)]\n(https://travis-ci.org/rtsisyk/luafun)\n\nLuaJIT 2.1 alpha is recommended. The library designed in mind of fact that\n[LuaJIT traces tail-, up- and down-recursion][LuaJIT-Recursion] and has a lot of\n[byte code optimizations][LuaJIT-Optimizations]. Lua 5.1-5.3 are also\nsupported.\n\nThis is **master** (development) branch. API may be changed without any special\nnotice. Please use **stable** branch for your production deployments.\nIf you still want to use **master**, please don't forget to grep `git log`\nfor *Incompatible API changes* message. Thanks!\n\nPlease check out [documentation][Documentation] for more information.\n\nMisc\n----\n\n**Lua Fun** is distributed under the [MIT/X11 License] -\n(same as Lua and LuaJIT).\n\nThe library was written to use with [Tarantool] - an efficient in-memory\nstore and an asynchronous Lua application server.\n\nSee Also\n--------\n\n* [Documentation]\n* [RockSpec]\n* lua-l@lists.lua.org\n* luajit@freelists.org\n* roman@tsisyk.com\n\n [LuaJIT]: http://luajit.org/luajit.html\n [LuaJIT-Recursion]: http://lambda-the-ultimate.org/node/3851#comment-57679\n [LuaJIT-Optimizations]: http://wiki.luajit.org/Optimizations\n [MIT/X11 License]: http://opensource.org/licenses/MIT\n [Tarantool]: http://github.com/tarantool/tarantool\n [Getting Started]: http://rtsisyk.github.io/luafun/getting_started.html\n [Documentation]: http://rtsisyk.github.io/luafun\n [RockSpec]: https://raw.github.com/rtsisyk/luafun/master/fun-scm-1.rockspec\n\nPlease **\"Star\"** the project on GitHub to help it to survive! Thanks!\n\n*****\n\n**Lua Fun**. Simple, Efficient and Functional. In Lua. With JIT.\n\n<img src=\"https://d2weczhvl823v0.cloudfront.net/rtsisyk/luafun/trend.png\"\nwidth=\"1px\" height=\"1px\" />\n",
      "archived": false,
      "url": "https://github.com/theypsilon/luafun",
      "releases": []
    },
    {
      "name": "Main_MiSTer",
      "description": "Main MiSTer binary and Wiki",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/Main_MiSTer",
      "releases": [
        {
          "name": "MiSTer_20180502",
          "sha": "7cf4a5393c96c3ca5d1012adee6fd5a517184a75",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20180502",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20180624",
          "sha": "894bcf5350e5085264a58a3430f589cfd9c569e4",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20180624",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20180708",
          "sha": "2febbfe58943738cbb818201f168d6955d286f78",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20180708",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20180808",
          "sha": "63fd3216c3bef924c80d8c644273e86e438cb93a",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20180808",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20180903",
          "sha": "9e919e34eb837818279584212f37dee0f5241475",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20180903",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20181019",
          "sha": "ef00aea10da6f99d2407e040c428061a55016d6d",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20181019",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20181116",
          "sha": "c2f3ae6334d59ee52287c90f87319c43458c8318",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20181116",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20181208",
          "sha": "8b8e8ec73de30192912f3b0560ef85dbd6506427",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20181208",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190108",
          "sha": "21961e794f646f3228a23a5dc698abfedf2eb0f8",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190108",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190112",
          "sha": "2403c4dc8555c7b64a7da853b64028e00074c4a7",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190112",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190119",
          "sha": "6abe1732d8462363ce95c09046377005ee10559d",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190119",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190126",
          "sha": "49c155054ee0b39905920a7557b784f72862277e",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190126",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190205",
          "sha": "4df0d5842014934bacc8ec3a811e29ff4233c95b",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190205",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190218",
          "sha": "1bfa5efda4e1f66da1cd2f90b68f6b2b588630a9",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190218",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190302",
          "sha": "9918d4ad6b424c654e5ee342659c4b81494d351d",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190302",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190304",
          "sha": "d93affdbde6e293c9923c98ef2914a0baf8bbddd",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190304",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190318",
          "sha": "20955ce52d7b532cd8fbbbaed4c8579b66624b80",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190318",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190319",
          "sha": "114cb7c4e4c2867f278daac77dd67c9bba436c4a",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190319",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190320",
          "sha": "27e19c2ace92fa9c76506f172c13ccb95038379b",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190320",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190321",
          "sha": "d54534fbc126c720f06efd15bf2114239cead03a",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190321",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190325",
          "sha": "52d47517953af9729ea242faa70852890215c6ab",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190325",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190404",
          "sha": "f9056d0d4ad82fe1b995b3679343cce6af7c23b3",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190404",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190406",
          "sha": "188bea6925ae1127ab044474006eb98cb12bbb29",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190406",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190408",
          "sha": "5111ca170fe0ab299892eb48d1100022d023711b",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190408",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190421",
          "sha": "a6097f6d3e0f85665504de337dbae1bfa57b7d17",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190421",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190422",
          "sha": "c8d658a6db4502f1ec259424b9894cb3cc492a12",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190422",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190427",
          "sha": "83918c3f18d416856c3b85d147458c863d5c28b6",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190427",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190501",
          "sha": "11a3feb5629d1729333ecebfaa430c5e1586769d",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190501",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190510",
          "sha": "da009310fcc1828bac9efb6e5c08b25b3bde6ba3",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190510",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190513",
          "sha": "dcad7108eee2c607d4e3f1b78cdd95b7acb57c12",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190513",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190515",
          "sha": "c0df0edd64bb9f39f0c2ee9f2547001777e78fce",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190515",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190525",
          "sha": "4f86fc86e45137c173804b034499cbd6bbc09e06",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190525",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190527",
          "sha": "f0b367897a37f72e5cd807c6ab199fdfad833c1d",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190527",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190603",
          "sha": "cd6b2ea373ab3354aa9a6b7fc5dfc7f215f06d83",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190603",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190609",
          "sha": "83620bb6d375f10a12eed5fbca93c8b142680a01",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190609",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190611",
          "sha": "c0eeb23f233033a055cccba7040a4c79ebdf1b50",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190611",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190627",
          "sha": "b1eda8c5ee3c1c4a752981a6606ba098cb18fcb8",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190627",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190711",
          "sha": "fddbaf7cda9d565fc38772e559ece64091ad0b9c",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190711",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190717",
          "sha": "3a5d4f522f5e96b6a4a2a3630db46b1f27efd9d6",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190717",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190820",
          "sha": "f0054cb896753cbeca1c6b23defdd57e92d3cfaf",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190820",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190907",
          "sha": "67b099fb9963f3d7a31153cfb5c77f1bf6cf5b2e",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190907",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190908",
          "sha": "c9c5e1b43c050e9bdf945a82c7710511a24e2c64",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190908",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190911",
          "sha": "ac73b7413d7a9086e99c395120188db614a3ae3c",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190911",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190913",
          "sha": "3fd79ca1c30afba08c7dbe76d99c90550d8c7288",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190913",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20190922",
          "sha": "3a499546dd8d161df343d2c9d6755815753ff0e6",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20190922",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191004",
          "sha": "f7cafd8a03a373e7966edce240dfa1c057e123a4",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191004",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191014",
          "sha": "bc0cb75152688957d1bd8e0204c4e74f71783614",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191014",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191019",
          "sha": "455443646012e134e55baf808a897eeb22583ed0",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191019",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191103",
          "sha": "1c79161938974ed276e2a5fbf823e6f9a17248a3",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191103",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191111",
          "sha": "afc5bfb799966bb1f59e3558908910b93e14f638",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191111",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191117",
          "sha": "5343344051f51418feb5bc5fb497ec1a785d0d02",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191117",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191204",
          "sha": "7ab77ac4c302cae1effd9812fa476d3b15537a6f",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191204",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191205",
          "sha": "c59a64da8941662c863c805d41571844f97b8869",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191205",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191218",
          "sha": "825eadfa902e2b64cf6a0bbcafe14f54f6cba6cb",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191218",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191228",
          "sha": "1a064d3c08bd086d76dff2f7187760c79eb28041",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191228",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20191230",
          "sha": "4d9200c1ae38229918707eadfc84e2eb3d7a289d",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20191230",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200101",
          "sha": "44c3517cf8f55ffc8e53a6975485f35df81d29fa",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200101",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200106",
          "sha": "01fd73ea5db19c19462c6da1daa8a160dd208fc7",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200106",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200109",
          "sha": "cfb50112c6fadc1c623c90582cf353f87bd1b564",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200109",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200113",
          "sha": "a61cfc4b91f1ff3382034a45a03e1d8830af647a",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200113",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200122",
          "sha": "a8d5a8fccf33d565ad7415f913dc0dbe41ab559d",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200122",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200202",
          "sha": "5ac17b26b15b1be0b5f68b059a2d03be6ffacaff",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200202",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200210",
          "sha": "554cc78fcf9464a07a0b49371eac24aaa9a8c540",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200210",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200216",
          "sha": "fcf3a150a9f2303735f7c567a7790e0f027f0f3f",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200216",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200225",
          "sha": "e5203b5890dfb6e2d2e91df9c9f14fbd27a37973",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200225",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200302",
          "sha": "e5258fe94c8ed904c6c2ef167a9487f3adef400f",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200302",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200307",
          "sha": "f50371ba7f6f85adf59cb45fe6b2046eacf8fae0",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200307",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200308",
          "sha": "ecc256e4b8b7c421a8ea58523546feb1b9cca708",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200308",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200311",
          "sha": "11ce105631bebeaf8714c8af76c06fcedce6cdd1",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200311",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200325",
          "sha": "d14dc79000f1cc82378cff6932c41916a0ef06ee",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200325",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200419",
          "sha": "4cfe1d378c9ed26a0f23324db08d4f3b67199bcc",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200419",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200420",
          "sha": "4cfe1d378c9ed26a0f23324db08d4f3b67199bcc",
          "url": "https://raw.githubusercontent.com/theypsilon/Main_MiSTer/master/releases/MiSTer_20200420",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "MiniECS",
      "description": "C# minimalistic entity framework",
      "readme": "# MiniECS\nC# minimalistic entity framework\n\nThis is a very basic entity framework intended for usage with C# 6 runtimes.\n\n## Basic Example\n\n```csharp\npublic class PositionComponent {\n    public Point Point;\n}\n\npublic class LinearMovementComponent\n{\n    public Point Direction;\n    public float Step;\n}\n\n// ...\n// Initialization\n\nvar ecs = new ECS(Define.EntityQuantity, 4096);\n\nvar positionComponents = ecs.CreatePool<PositionComponent>(4096);\nvar linearMovementComponents = ecs.CreatePool<LinearMovementComponent>(4096);\n\nvar limits = ctx.State.Simulation.SpacialLimits; // Simulation State structure defined somewhere else\n\nfor (var i = 0; i < 4096; i++) {\n    var entity = ecs.CreateEntity();\n\n    positionComponents.NewComponent(entity);\n    var position = positionComponents.Get(entity);\n    position.Point = random.GeneratePointWithin(limits);\n\n    linearMovementComponents.NewComponent(entity);\n    var linearMovement = linearMovementComponents.Get(entity);\n    linearMovement.Direction = random.GeneratePoint().normalize();\n    linearMovement.Step = random.GetFloat(0.1f, 30.0f);\n}\n\n// ...\n// Update\n\nvar dt = ctx.State.Simulation.Dt;\n\nforeach (var entity in linearMovementComponents.View()) {\n    var position = ctx.Pools.PositionComponents.Get(entity);\n    var linearMovement = ctx.Pools.LinearMovementComponents.Get(entity);\n    var step = linearMovement.Step;\n\n    position.Point += linearMovement.Direction * step * dt;\n\n    if (!limits.Contain(position.Point)) {\n        ecs.Destroy(entity);\n    }\n}\n```\n",
      "archived": false,
      "url": "https://github.com/theypsilon/MiniECS",
      "releases": []
    },
    {
      "name": "MiSTer_MAME_SCRIPTS",
      "description": "A simple script to automate downloading MAME and HBMAME files for MiSTer",
      "readme": "# MiSTer_MAME_SCRIPTS\nSimple scripts to automate downloading MAME and HBMAME files for MiSTer based on your MRA files.\n\nInstructions \n\nDownload the update_mame-getter.sh and update_hbmame-getter.sh the to the Scripts directory and run.\n\n* update_mame-getter.sh downloads MAME files\n\n* update_hbmame-getter.sh downloads HBMAME files\n\nThese scripts look at what MRA files you have and download the merged set roms needed for them. \n\n**These scripts DO NOT download any cores or mra files.** \n\n\nQ: Can I set my own custom locations for MRA and MAME Directories? \n\nA: A /media/fat/Scripts/update_mame-getter.ini and /media/fat/Scripts/update_hbmame-getter.ini files may be used to set custom locations for your MAME and HBMAME files and MRA files.\nAdd the following line to the ini file to set a directory for MRA files: MRADIR=/top/path/to/mra/files\nAdd the following line to the ini file to set a directory for MAME files: ROMMAME=/path/to/mame\nAdd the following line to the ini file to set a directory for HBMAME files: ROMHBMAME=/path/to/hbmame\n\nQ:Will this script over write files I already have?\n\nA: NO, This script will not clober files you already have. You need to manaully remove any files you have if you want to download new files. This also means that after you have the HBMAME or MAME files downloaded, additional runs of the script will be much faster.\n\nA Merged set contains all of the files for every Clone version of a Parent game.\n\nYou should back up your HBMAME and MAME files before running this script.\n\nUSE AT YOUR OWN RISK - THIS COMES WITHOUT WARRANTE AND MAY KILL BABY SEALS.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/MiSTer_MAME_SCRIPTS",
      "releases": []
    },
    {
      "name": "moai-dev",
      "description": "This is the development repo of Moai SDK. Current, but not necessarily tested or stable.",
      "readme": "# Welcome to Moai!\n\nThanks for checking out the Moai source code. Here's the scoop.\n\nLinux CI: [![Build Status](https://travis-ci.org/moaiforge/moai-sdk.png?branch=master)](https://travis-ci.org/moaiforge/moai-sdk)\nOSX CI: [![Build Status](https://travis-ci.org/moaiforge/moai-sdk.png?branch=travis-osx)](https://travis-ci.org/moaiforge/moai-sdk)\n## Introduction\n\nMoai SDK is an open source game framework for quickly developing great mobile games.\n\nYou can work in Lua or C++, and Moai SDK runs on multiple platforms including iOS, Android, Chrome, Windows, Mac and Linux.\n\n## Download\nPlease clones the source in the following way.\n\n    git clone git@github.com:moai/moai-dev.git\n    git submodule init\n    git submodule update\n\n## Setup\nTools needed to build the MOAI SDK.\n\n* [Android SDK](http://developer.android.com/sdk/index.html)\n* [Android NDK](http://developer.android.com/tools/sdk/ndk/index.html) (32bit Only)\n* [Java SE 6](http://www.oracle.com/technetwork/java/javase/downloads/index.html)\n* [Ant 1.9](http://ant.apache.org/)\n* [CMake 2.8.11](http://www.cmake.org/)\n* [Ruby 1.9](http://www.ruby-lang.org/)\n* [Visual Studio 2010](http://www.visualstudio.com/) (Windows only)\n* [XCode 4 or 5](https://itunes.apple.com/app/xcode/id497799835?mt=12) (Mac only)\n* [MinGW64 TCC](http://tdm-gcc.tdragon.net/) (Windows only, needed for android luajit support or can build mingw version of moai)\n* [Emscripten](https://github.com/kripken/emscripten)\n \nThe following tools are required to build the API documentation.\n\n* [Bundler](http://gembundler.com/)\n* [Doxygen](http://www.doxygen.org/)\n* [Graphviz](http://www.graphviz.org/)\n\nPlease set the following environment variables.\n\n\t# Mac OSX\n\texport MOAI_BIN=<install_path>/moai-dev/release/osx/host-sdl/bin\n\texport MOAI_CONFIG=<install_path>/moai-dev/samples/config\n\n\t# Linux\n\texport MOAI_BIN=<install_path>/moai-dev/release/linux/host-sdl/x64/bin\n\texport MOAI_CONFIG=<install_path>/moai-dev/samples/config\n\n\t# Windows\n\tset MOAI_BIN=<install_path>\u00a5moai-dev\u00a5release\u00a5win32\u00a5host-sdl\u00a5bin\n\tset MOAI_CONFIG=<install_path>\u00a5moai-dev\u00a5samples\u00a5config\n\n## Build Hosts\nPlease build according to the following procedure.\n\n### Windows Host\n\n\tcd moai-dev\n\t.\\bin\\build-win.bat\n\t\n### OSX Host\n\n\t# Build\n\tcd moai-dev\n\t./bin/build-osx-sdl.sh\n\t\n\t# Run\n\tcd <sample_directory>\n\t$MOAI_BIN/moai main.lua\n\n### iOS Host\n\n\tcd moai-dev\n\t./bin/build-ios.sh <lua_dir>\n\n### Linux Host\n\n\t# Build\n\tcd moai-dev\n\t./bin/build-linux-sdl.sh\n\t\n\t# Run\n\t$MOAI_BIN/moai main.lua\n\n### Android Host\n\n\t# Build\n\texport ANDROID_NDK=<path_to_android_ndk>\n\tcd moai-dev\n\t./bin/build-android.sh\n\t\n\t# Edit Setting\n\tcd release/android/host\n\tvi settings-global.sh\n\tvi settings-local.sh\n\t\n\t# Run\n\t./run-host.sh\n\n### HTML Host\n    \n    #build\n    export EMSCRIPTEN_HOME=<path_to_emscripten_1.7.1>\n    cd moai-dev\n    ./bin/build-html.sh\n\n    #run\n    <http-serve> cmake/build/host-template/www\n\n    #see src\\host-html\\readme.md for more info\n\n## Create IDE Projects\n \n### Visual Studio\nExecute `create-projects-win.bat` in `moai-dev\\bin`.\nBy default, this creates a Visual Studio 2012 solution in `moai-dev\\cmake\\projects\\vs2012`. To generate project files for a different version of Visual Studio, specify your desired version (`vs2008`, `vs2010`, `vs2012`, or `vs2013`) as a command-line argument.\n\n### iOS\n    ./bin/create-projects-ios.sh\n    open cmake/projects/moai-ios/moai.xcproj\n\n### OSX\n    ./bin/create-projects-osx.sh\n\topen cmake/projects/moai-osx/moai.xcproj\n\n## Sample code\nGo to the samples folder, which contains dozens of samples that can be run using one the hosts located in ant (Android), xcode (OSX and iOS), or Visual Studio (Windows).\n\nOne of our priorities is to build richer samples for Moai developers, so if you'd like to see a particular code sample, let us know by posting in the [Moai forums](http://getmoai.com/forums/).\n\n## License\n\nThis SDK uses the [CPAL license](http://www.opensource.org/licenses/cpal_1.0). Refer to the  for attribution screens to include with games made with Moai.\n\n## Links\n\n### Moai Pages\n\n* [Moai New Web Site](http://moaiwebsite.github.io/)\n* [Moai FAQ](http://getmoai.com/marketing/moai-faqs.html)\n* [Moai SDK Framework Reference](http://getmoai.com/docs/)\n* [Moai forums](http://getmoai.com/forums/)\n* [Moai Wiki(getmoai)](http://getmoai.com/wiki/)\n* [Moai Wiki(github)](https://github.com/moai/moai-dev/wiki)\n* [Moai API Documentation](http://getmoai.com/docs/).\n\n### Tutorials\n* [GameFromScratch MOAI Tutorials](http://www.gamefromscratch.com/page/Moai-tutorial-series-The-adventures-of-an-intrepid-programmer-in-the-lands-of-Moai.aspx)\n* [moaisnippets](http://www.moaisnippets.info/)\n\n### Libraries\n* [Rapanui](https://github.com/ymobe/rapanui)\n* [Hanappe](https://github.com/makotok/Hanappe)\n* [MOAI GUI](https://github.com/derickd/moaigui)\n* [Shilke2D](https://github.com/Shrike78/Shilke2D)\n* [Spine MOAI](https://github.com/tangerinagames/spine-moai)\n\n### Tools\n* [moaicli](http://halfnelson.github.io/moaicli/)\n* [MoaiUtils](https://github.com/DanielSWolf/MoaiUtils/blob/master/README.md)\n",
      "archived": false,
      "url": "https://github.com/theypsilon/moai-dev",
      "releases": []
    },
    {
      "name": "MOD_SpriteSet",
      "description": "Graphic resource library for BennuGD",
      "readme": "#MOD_SpriteSet\n\nA graphic resource library for the **BennuGD** language.\n\n*This library uses **SDL** and **TinyXML**.*",
      "archived": false,
      "url": "https://github.com/theypsilon/MOD_SpriteSet",
      "releases": []
    },
    {
      "name": "MOD_TinyXML",
      "description": "Module for BennuGD",
      "readme": "#MOD_TinyXML\n\nThis module for **BennuGD** gives the features of **TinyXML** to the language.",
      "archived": false,
      "url": "https://github.com/theypsilon/MOD_TinyXML",
      "releases": []
    },
    {
      "name": "nas-auto-usb",
      "description": "Created a NAS that auto mounts USB media, tested on Raspberry Pi 2",
      "readme": "# NAS with USB automount media\n\nI needed this for my PS2 Slim, so I can connect it to a HDD, through a raspberry pi and network cable. That way speeds are better than with USB 1.1, and FMVs don't freeze.\n\n### Requirements:\n\n* armhf arch (or change pulled image on docker-samba.sh)\n* systemd + udev\n* pmount\n* exfat-fuse + ntfs-3g \n* docker-engine\n\n### Setup:\n\nRun once: ```sudo ./setup.sh```\n\nIn order to show the connected USB media, you would need to reboot.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/nas-auto-usb",
      "releases": []
    },
    {
      "name": "Penlight",
      "description": "A set of pure Lua libraries focusing on input data handling (such as reading configuration files), functional programming (such as map, reduce, placeholder expressions,etc), and OS path management.  Much of the functionality is inspired by the Python standard libraries.",
      "readme": "Penlight Lua Libraries\r\n\r\n1. Why a new set of libraries?\r\n\r\nPenlight brings together a set of generally useful pure Lua modules,\r\nfocussing on input data handling (such as reading configuration files),\r\nfunctional programming (such as map, reduce, placeholder expressions,etc),\r\nand OS path management.  Much of the functionality is inspired by the\r\nPython standard libraries.\r\n\r\n2. Requirements\r\n\r\nThe file and directory functions depend on LuaFileSystem (lfs). If you want\r\ndir.copyfile to work elegantly on Windows, then you need Alien. (Both are\r\npresent in Lua for Windows.)\r\n\r\n3. Known Issues\r\n\r\nError handling is still hit and miss.\r\n\r\nThere are 7581 lines of source and 1764 lines of formal tests, \r\nwhich is not an ideal ratio.\r\n\r\nFormal documentation for comprehension and luabalanced is missing.\r\n\r\n4. Installation\r\n\r\nThe directory structure is\r\n\r\n  lua\r\n     pl \r\n       (module files)\r\n  examples\r\n      (examples)\r\n  tests\r\n      (tests)\t          \r\n  docs\r\n    (index.html)\r\n    api\r\n       (index.html)\r\n       modules\r\n\r\nAll you need to do is copy the pl directory into your Lua module path, which\r\nis typically /usr/local/share/lua/5.1 on a Linux system (of course, you\r\ncan set LUA_PATH appropriately.)\r\n\r\nWith Lua for Windows,  if LUA stands for 'c:\\Program Files\\Lua\\5.1',\r\nthen pl goes into LUA\\lua, docs goes into LUA\\examples\\penlight and\r\nboth examples and tests goes into LUA\\examples\r\n\r\n5. Building the Documentation\r\n\r\nThe Users Guide is processed by markdown.lua. If you like the section headers,\r\nyou'll need to download my modified version:\r\n\r\nhttp://mysite.mweb.co.za/residents/sdonovan/lua/markdown.zip\r\n\r\ndocgen.lua will preprocess the documentation (handles @see references)\r\nand use markdown.\r\n\r\ngen_modules.bat does the LuaDoc stuff.\r\n\r\n6. What's new with 0.8b ?\r\n\r\nFeatures:\r\n\r\npl.app provides useful stuff like simple command-line argument parsing and require_here(), which \r\nmakes subsequent require() calls look in the local directory by preference.\r\n\r\np.file provides useful functions like copy(),move(), read() and write().  (These are aliases to\r\ndir.copyfile(),movefile(),utils.readfile(),writefile())\r\n\r\nCustom error trace will only show the functions in user code.\r\n\r\nMore robust argument checking.\r\n\r\nIn function arguments, now supports 'string lambdas', e.g. '|x| 2*x'\r\n\r\nutils.readfile,writefile now insist on being given filenames. This will cause less confusion.\r\n\r\ntablex.search() is new: will look recursively in an arbitrary table; can specify tables not to follow.\r\ntablex.move() will work with source and destination tables the same, with overlapping ranges.\r\n\r\nBug Fixes:\r\n\r\ndir.copyfile() now works fine without Alien on Windows\r\n\r\ndir.makepath() and rmtree() had problems.\r\n\r\ntablex.compare_no_order() is now O(NlogN), as expected.\r\ntablex.move() had a problem with source size\r\n\r\n7. What's New with 0.7.0b?\r\n\r\nFeatures:\r\n\r\nutils.is_type(v,tp) can say is_type(s,'string') and is_type(l,List).\r\nutils.is_callable(v) either a function, or has a __call metamethod.\r\n\r\nSequence wrappers: can write things like this:\r\n\r\nseq(s):last():filter('<'):copy()\r\n\r\nseq:mapmethod(s,name) - map using a named method over a sequence.\r\n\r\nseq:enum(s)  If s is a simple sequence, then \r\n     for i,v in seq.enum(s) do print(i,v) end\r\n\r\nseq:take(s,n)  Grab the next n values from a (possibly infinite)\r\nsequence.\r\n\r\nIn a related change suggested by Flemming Madsden, the in-place List\r\nmethods like reverse() and sort() return the list, allowing for\r\nmethod chaining.\r\n\r\nlist.join()  explicitly converts using tostring first.\r\n\r\ntablex.count_map() like seq.count_map(), but takes an equality function.\r\n\r\ntablex.difference()  set difference\r\ntablex.set()  explicit set generator given a list of values\r\n\r\nTemplate.indent_substitute() is a new Template method which adjusts\r\nfor indentation and can also substitute templates themselves.\r\n\r\npretty.read(). This reads a Lua table (as dumped by pretty.write)\r\nand attempts to be paranoid about its contents.\r\n\r\nsip.match_at_start(). Convenience function for anchored SIP matches.\r\n\r\nBug Fixes:\r\n\r\ntablex.deepcompare() was confused by false boolean values, which\r\nit thought were synonymous with being nil.\r\n\r\npretty.write() did not handle cycles, and could not display tables\r\nwith 'holes' properly (Flemming Madsden)\r\n\r\nThe SIP pattern '$(' was not escaped properly.\r\nsip.match() did not pass on options table.\r\n\r\nseq.map() was broken for double-valued sequences.\r\nseq.copy_tuples() did not use default_iter(), so did not e.g. like\r\ntable arguments.\r\n\r\ndir.copyfile() returns the wrong result for *nix operations.\r\ndir.makepath() was broken for non-Windows paths.\r\n\r\n8. What's New with 0.6.3?\r\n\r\nThe map and reduce functions now take the function first, as Nature intended.\r\n\r\nThe Python-like overloading of '*' for strings has been dropped, since it\r\nis silly. Also, strings are no longer callable; use 's:at(1)' instead of\r\n's(1)' - this tended to cause Obscure Error messages.\r\n\r\nWherever a function argument is expected, you can use the operator strings\r\nlike '+','==',etc as well as pl.operator.add, pl.operator.eq, etc.\r\n(see end of pl/operator.lua for the full list.)\r\n\r\ntablex now has compare() and compare_no_order(). An explicit set()\r\nfunction has been added which constructs a table with the specified\r\nkeys, all set to a value of true.\r\n\r\nList has reduce() and partition() (This is a cool function which \r\nseparates out elements of a list depending on a classifier function.)\r\n\r\nThere is a new array module which generalizes tablex operations like\r\nmap and reduce for two-dimensional arrays.\r\n\r\nThe famous iterator over permutations from PiL 9.3 has been included.\r\n\r\nDavid Manura's list comprehension library has been included.\r\n\r\nAlso, utils now contains his memoize function, plus a useful function\r\nargs which captures the case where varargs contains nils.\r\n\r\nThere was a bug with dir.copyfile() where the flag was the wrong way round.\r\n\r\nconfig.lines() had a problem with continued lines.\r\n\r\nSome operators were missing in pl.operator; have renamed them to be\r\nconsistent with the Lua metamethod names.\r\n\r\n\r\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Penlight",
      "releases": []
    },
    {
      "name": "PHPView-for-Chrome",
      "description": "PHPView for Chrome",
      "readme": "PHPView 0.1.5\n=============\n\nChrome extension for pretty printing php print_r outputs.\n\nFor example, by doing this in your PHP file:\n```php\n    $array = array('element' => 'value');\n    echo '<pre>';\n    print_r($array); die;\n```\n\nInstead of displaying this:\n```\n    <pre>Array\n    (\n        [element] => value \n    )\n```\n\nWe will see this in Chrome: \n```js\n    [{\"element\": \"value\"}]\n```\n\n\nAnd it also allows you to collapse branches.\n\nCheck it out int he Chrome Store: https://chrome.google.com/webstore/detail/phpview/nlkobfbkblfhlcobdomlhmpbbhmcbkfd\n",
      "archived": false,
      "url": "https://github.com/theypsilon/PHPView-for-Chrome",
      "releases": []
    },
    {
      "name": "quartus-lite-c5-dockerized",
      "description": "Quartus Lite (Cyclone V environment) Dockerized",
      "readme": "# Quartus Lite (Cyclone V environment) Dockerized\n\nBased on https://github.com/chriz2600/quartus-lite\n\nImages on [docker hub](https://hub.docker.com/r/theypsilon/quartus-lite-c5): \n```bash\ntheypsilon/quartus-lite-c5:17.0.docker0   # 4.57GB\ntheypsilon/quartus-lite-c5:17.0.2.docker0 # 7.18GB\ntheypsilon/quartus-lite-c5:17.1.docker0   # 4.56GB\ntheypsilon/quartus-lite-c5:18.0.docker0   # 4.56GB\ntheypsilon/quartus-lite-c5:18.1.docker0   # 4.57GB\ntheypsilon/quartus-lite-c5:19.1.docker0   # 4.76GB\n\ntheypsilon/quartus-lite-c5:17.0.dockerheavy0   # 8.51GB\ntheypsilon/quartus-lite-c5:17.0.2.dockerheavy0 # 11.1GB\ntheypsilon/quartus-lite-c5:17.1.dockerheavy0   # 8.55GB\ntheypsilon/quartus-lite-c5:18.0.dockerheavy0   # 8.52GB\ntheypsilon/quartus-lite-c5:18.1.dockerheavy0   # 8.53GB\ntheypsilon/quartus-lite-c5:19.1.dockerheavy0   # 10.5GB\n```\n\nUse them as base and then:\n```\nRUN /opt/intelFPGA_lite/quartus/bin/quartus_sh --flow compile your_core.qpf\n```\n\n### License\n\nCopyright \u00a9 2020, [Jos\u00e9 Manuel Barroso Galindo](https://github.com/theypsilon).\nReleased under the [MIT License](LICENSE).\n",
      "archived": false,
      "url": "https://github.com/theypsilon/quartus-lite-c5-dockerized",
      "releases": []
    },
    {
      "name": "Retro-Display-Simulator",
      "description": "Experiment about bringing low-res images to a virtual display, and playing around it",
      "readme": "# Retro Display Simulator\n\n## On Windows\n\nDownload latest release from here:\n\n[rds-0.1.0.exe](https://github.com/theypsilon/Retro-Display-Simulator/raw/master/releases/rds-0.1.0.exe)\n\n## On Linux (Tested on Ubuntu 18.04 LTS)\n\nInstall GCC, CMake, OpenGL and ./run.sh it.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Retro-Display-Simulator",
      "releases": [
        {
          "name": "rds-0.1.0.exe",
          "sha": "20b8d34473d28571d768414b240afbd38a816f2f",
          "url": "https://raw.githubusercontent.com/theypsilon/Retro-Display-Simulator/master/releases/rds-0.1.0.exe",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "rust",
      "description": "A safe, concurrent, practical language.",
      "readme": "# The Rust Programming Language\n\nThis is the main source code repository for [Rust]. It contains the compiler,\nstandard library, and documentation.\n\n[Rust]: https://www.rust-lang.org\n\n## Quick Start\n\nRead [\"Installing Rust\"] from [The Book].\n\n[\"Installing Rust\"]: https://doc.rust-lang.org/book/getting-started.html#installing-rust\n[The Book]: https://doc.rust-lang.org/book/index.html\n\n## Building from Source\n\n1. Make sure you have installed the dependencies:\n\n   * `g++` 4.7 or later or `clang++` 3.x\n   * `python` 2.7 (but not 3.x)\n   * GNU `make` 3.81 or later\n   * `cmake` 2.8.8 or later\n   * `curl`\n   * `git`\n\n2. Clone the [source] with `git`:\n\n   ```sh\n   $ git clone https://github.com/rust-lang/rust.git\n   $ cd rust\n   ```\n\n[source]: https://github.com/rust-lang/rust\n\n3. Build and install:\n\n    ```sh\n    $ ./configure\n    $ make && make install\n    ```\n\n    > ***Note:*** You may need to use `sudo make install` if you do not\n    > normally have permission to modify the destination directory. The\n    > install locations can be adjusted by passing a `--prefix` argument\n    > to `configure`. Various other options are also supported \u2013 pass\n    > `--help` for more information on them.\n\n    When complete, `make install` will place several programs into\n    `/usr/local/bin`: `rustc`, the Rust compiler, and `rustdoc`, the\n    API-documentation tool. This install does not include [Cargo],\n    Rust's package manager, which you may also want to build.\n\n[Cargo]: https://github.com/rust-lang/cargo\n\n### Building on Windows\n\nThere are two prominent ABIs in use on Windows: the native (MSVC) ABI used by\nVisual Studio, and the GNU ABI used by the GCC toolchain. Which version of Rust\nyou need depends largely on what C/C++ libraries you want to interoperate with:\nfor interop with software produced by Visual Studio use the MSVC build of Rust;\nfor interop with GNU software built using the MinGW/MSYS2 toolchain use the GNU\nbuild.\n\n\n#### MinGW\n\n[MSYS2][msys2] can be used to easily build Rust on Windows:\n\n[msys2]: https://msys2.github.io/\n\n1. Grab the latest [MSYS2 installer][msys2] and go through the installer.\n\n2. Run `mingw32_shell.bat` or `mingw64_shell.bat` from wherever you installed\n   MSYS2 (i.e. `C:\\msys64`), depending on whether you want 32-bit or 64-bit\n   Rust. (As of the latest version of MSYS2 you have to run `msys2_shell.cmd\n   -mingw32` or `msys2_shell.cmd -mingw64` from the command line instead)\n\n3. From this terminal, install the required tools:\n\n   ```sh\n   # Update package mirrors (may be needed if you have a fresh install of MSYS2)\n   $ pacman -Sy pacman-mirrors\n\n   # Install build tools needed for Rust. If you're building a 32-bit compiler,\n   # then replace \"x86_64\" below with \"i686\". If you've already got git, python,\n   # or CMake installed and in PATH you can remove them from this list. Note\n   # that it is important that the `python2` and `cmake` packages **not** used.\n   # The build has historically been known to fail with these packages.\n   $ pacman -S git \\\n               make \\\n               diffutils \\\n               mingw-w64-x86_64-python2 \\\n               mingw-w64-x86_64-cmake \\\n               mingw-w64-x86_64-gcc\n   ```\n\n4. Navigate to Rust's source code (or clone it), then configure and build it:\n\n   ```sh\n   $ ./configure\n   $ make && make install\n   ```\n\n#### MSVC\n\nMSVC builds of Rust additionally require an installation of Visual Studio 2013\n(or later) so `rustc` can use its linker. Make sure to check the \u201cC++ tools\u201d\noption.\n\nWith these dependencies installed, the build takes two steps:\n\n```sh\n$ ./configure\n$ make && make install\n```\n\n#### MSVC with rustbuild\n\nThe old build system, based on makefiles, is currently being rewritten into a\nRust-based build system called rustbuild. This can be used to bootstrap the\ncompiler on MSVC without needing to install MSYS or MinGW. All you need are\n[Python 2](https://www.python.org/downloads/),\n[CMake](https://cmake.org/download/), and\n[Git](https://git-scm.com/downloads) in your PATH (make sure you do not use the\nones from MSYS if you have it installed). You'll also need Visual Studio 2013 or\nnewer with the C++ tools. Then all you need to do is to kick off rustbuild.\n\n```\npython .\\src\\bootstrap\\bootstrap.py\n```\n\nCurrently rustbuild only works with some known versions of Visual Studio. If you\nhave a more recent version installed that a part of rustbuild doesn't understand\nthen you may need to force rustbuild to use an older version. This can be done\nby manually calling the appropriate vcvars file before running the bootstrap.\n\n```\nCALL \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.bat\"\npython .\\src\\bootstrap\\bootstrap.py\n```\n\n## Building Documentation\n\nIf you\u2019d like to build the documentation, it\u2019s almost the same:\n\n```sh\n$ ./configure\n$ make docs\n```\n\nBuilding the documentation requires building the compiler, so the above\ndetails will apply. Once you have the compiler built, you can\n\n```sh\n$ make docs NO_REBUILD=1\n```\n\nTo make sure you don\u2019t re-build the compiler because you made a change\nto some documentation.\n\nThe generated documentation will appear in a top-level `doc` directory,\ncreated by the `make` rule.\n\n## Notes\n\nSince the Rust compiler is written in Rust, it must be built by a\nprecompiled \"snapshot\" version of itself (made in an earlier state of\ndevelopment). As such, source builds require a connection to the Internet, to\nfetch snapshots, and an OS that can execute the available snapshot binaries.\n\nSnapshot binaries are currently built and tested on several platforms:\n\n| Platform \\ Architecture        | x86 | x86_64 |\n|--------------------------------|-----|--------|\n| Windows (7, 8, Server 2008 R2) | \u2713   | \u2713      |\n| Linux (2.6.18 or later)        | \u2713   | \u2713      |\n| OSX (10.7 Lion or later)       | \u2713   | \u2713      |\n\nYou may find that other platforms work, but these are our officially\nsupported build environments that are most likely to work.\n\nRust currently needs between 600MiB and 1.5GiB to build, depending on platform.\nIf it hits swap, it will take a very long time to build.\n\nThere is more advice about hacking on Rust in [CONTRIBUTING.md].\n\n[CONTRIBUTING.md]: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\n\n## Getting Help\n\nThe Rust community congregates in a few places:\n\n* [Stack Overflow] - Direct questions about using the language.\n* [users.rust-lang.org] - General discussion and broader questions.\n* [/r/rust] - News and general discussion.\n\n[Stack Overflow]: http://stackoverflow.com/questions/tagged/rust\n[/r/rust]: http://reddit.com/r/rust\n[users.rust-lang.org]: https://users.rust-lang.org/\n\n## Contributing\n\nTo contribute to Rust, please see [CONTRIBUTING](CONTRIBUTING.md).\n\nRust has an [IRC] culture and most real-time collaboration happens in a\nvariety of channels on Mozilla's IRC network, irc.mozilla.org. The\nmost popular channel is [#rust], a venue for general discussion about\nRust. And a good place to ask for help would be [#rust-beginners].\n\n[IRC]: https://en.wikipedia.org/wiki/Internet_Relay_Chat\n[#rust]: irc://irc.mozilla.org/rust\n[#rust-beginners]: irc://irc.mozilla.org/rust-beginners\n\n## License\n\nRust is primarily distributed under the terms of both the MIT license\nand the Apache License (Version 2.0), with portions covered by various\nBSD-like licenses.\n\nSee [LICENSE-APACHE](LICENSE-APACHE), [LICENSE-MIT](LICENSE-MIT), and\n[COPYRIGHT](COPYRIGHT) for details.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/rust",
      "releases": []
    },
    {
      "name": "rust-bug-crash-cfg-if-macro",
      "description": "Crash when using cfg_if and defining a macro twice.",
      "readme": "./run.sh\n",
      "archived": false,
      "url": "https://github.com/theypsilon/rust-bug-crash-cfg-if-macro",
      "releases": []
    },
    {
      "name": "rust-docker-seed",
      "description": "rust-docker with a hello world nickel server",
      "readme": "Rust Docker Seed\n================\n```shell\n\tmake docker-test\n\tmake docker-run\n```",
      "archived": false,
      "url": "https://github.com/theypsilon/rust-docker-seed",
      "releases": []
    },
    {
      "name": "shell-scripts",
      "description": "Some shell scripts I use every day",
      "readme": "* **ds.sh** : Detached shell laucher, improving &, with log support\n* **bootstrap-tmux.sh** : I use it as shell interpreter in guake, and embedded in .bashrc at remote servers\n* **parallel.sh** : I use it mostly to query many servers at same time, but it can run any kind of repetitive command in parallel rather than sequentially, which means much more speed in many cases\n* **ssh-tmux.sh** : I use it to connect to many servers to hack them simultaneously, a la terminator broadcast\n* **install-functions.sh** : helper lib around the system package manager (apt/dpkg version only yet)\n* **string-functions.sh** : string utilities (tolower, toupper)\n",
      "archived": false,
      "url": "https://github.com/theypsilon/shell-scripts",
      "releases": []
    },
    {
      "name": "stupid",
      "description": "Toy tokenizer",
      "readme": null,
      "archived": false,
      "url": "https://github.com/theypsilon/stupid",
      "releases": []
    },
    {
      "name": "tdd-node-seed",
      "description": null,
      "readme": "1. Install nodejs plugin for your IntelliJ IDEA IDE.\n2. Open this directory from the IDE.\n3. Run the \"Tests\" configuration.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/tdd-node-seed",
      "releases": []
    },
    {
      "name": "typescript-node-seed",
      "description": null,
      "readme": "Typescript Node Docker Seed\n===========================\n```shell\n\tmake docker-test\n\tmake docker-run\n```",
      "archived": false,
      "url": "https://github.com/theypsilon/typescript-node-seed",
      "releases": []
    },
    {
      "name": "update-copyright",
      "description": "Update a copyright statement with the current year. Also makes minor corrections.",
      "readme": "# update-copyright [![NPM version](https://img.shields.io/npm/v/update-copyright.svg?style=flat)](https://www.npmjs.com/package/update-copyright) [![NPM monthly downloads](https://img.shields.io/npm/dm/update-copyright.svg?style=flat)](https://npmjs.org/package/update-copyright) [![NPM total downloads](https://img.shields.io/npm/dt/update-copyright.svg?style=flat)](https://npmjs.org/package/update-copyright) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/update-copyright.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/update-copyright)\n\n> Update a copyright statement with the current year. Also makes minor corrections.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save update-copyright\n```\n\n## Usage\n\n```js\ncopyright(string, options);\n```\n\nPass a string with a copyright statement to update, and it will be parsed and updated.\n\n```js\nvar copyright = require('update-copyright');\n\ncopyright('Copyright (c) 2015, Jon Schlinkert.');\n//=> 'Copyright (c) 2015-2016, Jon Schlinkert.'\n\ncopyright('Copyright (c) 2012, 2015, Jon Schlinkert.');\n//=> 'Copyright (c) 2012, 2015-2016, Jon Schlinkert.'\n```\n\nThe [current year](https://github.com/jonschlinkert/update-year) is updated/appended to existing years. The rest of the information will stay the same unless new information is passed.\n\n### Lazy mode\n\nIf you're too lazy to pass anything at all, that's okay! You get a free copyright statement with the current year, using data from package.json!\n\n```js\ncopyright();\n//=> 'Copyright (c) 2016, Jon Schlinkert.'\n```\n\n### Optionally fills in author\n\n**Example**\n\nIf the author is missing it will be filled in with the author from package.json.\n\n```js\ncopyright('Copyright (c) 2014.');\n//=> 'Copyright (c) 2014-2015, Jon Schlinkert.'\n```\n\n### Fixes Misspellings\n\nIt will use the author from package.json if a misspelling seems obvious (according to its [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance)):\n\n```js\ncopyright('Copyright (c) 2014, Jon Shlinert');\n//=> 'Copyright (c) 2014, 2016, Jon Schlinkert.'\n```\n\nSee [the tests](./test.js) for more examples.\n\n## Options\n\nA template is used to create the new copyright statement, and the options object is merged with the context that is passed to the template.\n\n### context\n\n1. The (context) object is populated with data from the parsed (old) copyright statement\n2. The object is then updated with the current year, author from package.json, and any other data you pass on the options.\n\n**Custom context**\n\nThis is what the context object looks like. To override anything on the context just pass the property and value on the options:\n\n```js\n{ year: '2015',\n  prefix: 'Copyright',\n  symbol: '(c)',\n  template: '<%= prefix %><%= symbol ? (\" \" + symbol + \" \") : \"\" %><%= years %>, <%= authors %>.',\n  statement: 'Copyright (c) 2015, Jon Schlinkert',\n  dateRange: '2014',\n  latest: '2014',\n  author: 'Jon Schlinkert' }\n```\n\n**Example**\n\nPass any custom data (as shown above) on the options:\n\n```js\ncopyright('Copyright (c) 2015.', {author: 'Foo Bar'});\n//=> 'Copyright (c) 2015-2016, Foo Bar.'\n```\n\n## About\n\n### Related projects\n\n* [copyright-regex](https://www.npmjs.com/package/copyright-regex): Regex for matching and parsing copyright statements. | [homepage](https://github.com/regexhq/copyright-regex \"Regex for matching and parsing copyright statements.\")\n* [parse-copyright](https://www.npmjs.com/package/parse-copyright): Parse copyright statement(s) into an array of copyright objects. | [homepage](https://github.com/jonschlinkert/parse-copyright \"Parse copyright statement(s) into an array of copyright objects.\")\n* [update-year](https://www.npmjs.com/package/update-year): Update or add the current year to a range of years in a string. | [homepage](https://github.com/jonschlinkert/update-year \"Update or add the current year to a range of years in a string.\")\n* [update](https://www.npmjs.com/package/update): Be scalable! Update is a new, open source developer framework and CLI for automating updates\u2026 [more](https://github.com/update/update) | [homepage](https://github.com/update/update \"Be scalable! Update is a new, open source developer framework and CLI for automating updates of any kind in code projects.\")\n* [year](https://www.npmjs.com/package/year): Simple utility to get the current year with 2 or 4 digits. | [homepage](https://github.com/jonschlinkert/year \"Simple utility to get the current year with 2 or 4 digits.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** | \n| --- | --- |\n| 38 | [jonschlinkert](https://github.com/jonschlinkert) |\n| 1 | [david-w-millar](https://github.com/david-w-millar) |\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright \u00a9 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on June 26, 2017._",
      "archived": false,
      "url": "https://github.com/theypsilon/update-copyright",
      "releases": []
    },
    {
      "name": "Updater_script_MiSTer_DB9",
      "description": "Bash script for updating MiSTer cores with ENCC features for DB9/SNAC8 interfaces",
      "readme": "# Updater script for MiSTer\nThe script updates all [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki) cores, including menu.rbf and the main MiSTer Linux executable; it updates scaler filters, GameBoy palettes and scripts; it can (experimental and risky) optionally update the whole Linux system.<br>\nSimply put [update.sh](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/update.sh?raw=true) in your SD and launch it through MiSTer main menu OSD (press F12 and then Scripts).<br>\nPlease right click (save link as...) on the links in this README (inside the README, not in the GitHub repository) or on the RAW button in GitHub script pages in order to actually download the raw Bash scripts, otherwise you could download an HTML page which isn\u2019t a script and won\u2019t be executed by MiSTer (you will see no output, but just an OK button in MiSTer Script menu interface); please don't copy and paste any script code or you may end with a non working script if you use Windows (different end of line character).<br>\n[update.sh](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/update.sh?raw=true) will always download and execute the latest [mister_updater.sh](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/mister_updater.sh?raw=true) (where the real update code is) from GitHub, so you will never have to deal with \"updater updates\". You can make an update.ini (same name as the script and placed in the same directory) file with custom user options: see [mister_updater.sh USER OPTIONS section](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/5c7968cca525adc53b8690c8f762ab49cd2e852e/mister_updater.sh#L89-L205) (please click the link) for all user options and their detailed explanations. If you feel uncomfortable, for security reasons, with a script which downloads and executes another script from the Internet, you can directly download and use [mister_updater.sh](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/mister_updater.sh?raw=true) and it will work the same, all ini file considerations will still be valid, but you will have to update the script manually.<br>\nYou can have many differently named copies of [update.sh](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/update.sh?raw=true) (or [mister_updater.sh](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/mister_updater.sh?raw=true) if you prefer) and its ini file, for different updating behaviours i.e.:<br>\n- you can make an *update_arcade.sh* with its *[update_arcade.ini](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/examples/update_arcade.ini?raw=true)* using these settings (simply copy this code in an empty text file named *update_arcade.ini* and put it in the same directory as *update_arcade.sh*):\n```\nREPOSITORIES_FILTER=\"arcade-cores\"\nADDITIONAL_REPOSITORIES=( )\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_commodore.sh* with its *[update_commodore.ini](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/examples/update_commodore.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"PET2001 VIC20 C64 C16 Minimig\"\nADDITIONAL_REPOSITORIES=( )\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_additional_repositories.sh* with its *[update_additional_repositories.ini](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/examples/update_additional_repositories.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"ZZZZZZZZZ\"\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_fonts.sh* with its *[update_fonts.ini](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/examples/update_fonts.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"ZZZZZZZZZ\"\nADDITIONAL_REPOSITORIES=( \"https://github.com/MiSTer-devel/Fonts_MiSTer|pf|$BASE_PATH/font\" )\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_linux.sh* with its *[update_linux.ini](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/examples/update_linux.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"ZZZZZZZZZ\"\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"true\"\n```\n- you can make an update_all.sh with its [update_all.sh](https://github.com/theypsilon/Updater_script_MiSTer_DB9/blob/master/examples/update_all.ini?raw=true) using these settings:\n```\nUPDATE_CHEATS=\"true\"\nUPDATE_LINUX=\"true\"\nADDITIONAL_REPOSITORIES+=( \"https://github.com/MiSTer-devel/Fonts_MiSTer|pf|$BASE_PATH/font\" )\n\n```\nI take no responsibility for any data loss or anything, if your DE10-Nano catches fire it\u2019s up to you: **use the script at your own risk**.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Updater_script_MiSTer_DB9",
      "releases": []
    },
    {
      "name": "Updater_script_MiSTer_Unofficial",
      "description": "Updater for unofficial cores",
      "readme": "# Updater script for MiSTer Unofficial\nThe script updates all [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki) cores, including menu.rbf and the main MiSTer Linux executable; it updates scaler filters, GameBoy palettes and scripts; it can (experimental and risky) optionally update the whole Linux system.<br>\nSimply put [update_unofficials.sh](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/update_unofficials.sh?raw=true) in your SD and launch it through MiSTer main menu OSD (press F12 and then Scripts).<br>\nPlease right click (save link as...) on the links in this README (inside the README, not in the GitHub repository) or on the RAW button in GitHub script pages in order to actually download the raw Bash scripts, otherwise you could download an HTML page which isn\u2019t a script and won\u2019t be executed by MiSTer (you will see no output, but just an OK button in MiSTer Script menu interface); please don't copy and paste any script code or you may end with a non working script if you use Windows (different end of line character).<br>\n[update_unofficials.sh](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/update_unofficials.sh?raw=true) will always download and execute the latest [mister_updater.sh](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/mister_updater.sh?raw=true) (where the real update code is) from GitHub, so you will never have to deal with \"updater updates\". You can make an update_unofficials.ini (same name as the script and placed in the same directory) file with custom user options: see [mister_updater.sh USER OPTIONS section](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/5c7968cca525adc53b8690c8f762ab49cd2e852e/mister_updater.sh#L89-L205) (please click the link) for all user options and their detailed explanations. If you feel uncomfortable, for security reasons, with a script which downloads and executes another script from the Internet, you can directly download and use [mister_updater.sh](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/mister_updater.sh?raw=true) and it will work the same, all ini file considerations will still be valid, but you will have to update the script manually.<br>\nYou can have many differently named copies of [update_unofficials.sh](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/update_unofficials.sh?raw=true) (or [mister_updater.sh](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/mister_updater.sh?raw=true) if you prefer) and its ini file, for different updating behaviours i.e.:<br>\n- you can make an *update_arcade.sh* with its *[update_arcade.ini](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/examples/update_arcade.ini?raw=true)* using these settings (simply copy this code in an empty text file named *update_arcade.ini* and put it in the same directory as *update_arcade.sh*):\n```\nREPOSITORIES_FILTER=\"arcade-cores\"\nADDITIONAL_REPOSITORIES=( )\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_commodore.sh* with its *[update_commodore.ini](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/examples/update_commodore.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"PET2001 VIC20 C64 C16 Minimig\"\nADDITIONAL_REPOSITORIES=( )\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_additional_repositories.sh* with its *[update_additional_repositories.ini](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/examples/update_additional_repositories.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"ZZZZZZZZZ\"\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_fonts.sh* with its *[update_fonts.ini](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/examples/update_fonts.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"ZZZZZZZZZ\"\nADDITIONAL_REPOSITORIES=( \"https://github.com/MiSTer-devel/Fonts_MiSTer|pf|$BASE_PATH/font\" )\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"false\"\n```\n- you can make an *update_linux.sh* with its *[update_linux.ini](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/examples/update_linux.ini?raw=true)* using these settings:\n```\nREPOSITORIES_FILTER=\"ZZZZZZZZZ\"\nUPDATE_CHEATS=\"false\"\nUPDATE_LINUX=\"true\"\n```\n- you can make an update_all.sh with its [update_all.sh](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/blob/master/examples/update_all.ini?raw=true) using these settings:\n```\nUPDATE_CHEATS=\"true\"\nUPDATE_LINUX=\"true\"\nADDITIONAL_REPOSITORIES+=( \"https://github.com/MiSTer-devel/Fonts_MiSTer|pf|$BASE_PATH/font\" )\n\n```\nI take no responsibility for any data loss or anything, if your DE10-Nano catches fire it\u2019s up to you: **use the script at your own risk**.\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Updater_script_MiSTer_Unofficial",
      "releases": []
    },
    {
      "name": "Update_All_MiSTer",
      "description": "All-in-one script for updating your MiSTer",
      "readme": "# Update All\nAll-in-one script for keeping up-to-date with the [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki) ecosystem.\n\nThis script chains the following scripts:\n1. __Main MiSTer Updater__. Downloads most of cores and firmware. You are able to select between these two options:\n    * [Official Main MiSTer Updater](https://github.com/MiSTer-devel/Updater_script_MiSTer) maintained by [Locutus73](https://github.com/Locutus73) in the [MiSTer-devel](https://github.com/MiSTer-devel) organization.\n    * [DB9 Fork Main MiSTer Updater](https://github.com/theypsilon/Updater_script_MiSTer_DB9) with [Extended Native Controller Compatibility](https://github.com/theypsilon/Update_All_MiSTer/wiki#extended-native-controller-compatibility) for Genesis and NeoGeo/Supergun controllers. Requires [SNAC8](https://github.com/theypsilon/Update_All_MiSTer/wiki#snac8) compatible adapter.\n2. [Jotego Cores Updater](https://github.com/jotego/Updater_script_MiSTer). Downloads many advanced cores made by [Jotego](https://github.com/jotego).\n3. [Unofficial Cores Updater](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial). Downloads [some cores](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/wiki) that are not yet released but are fairly stable. Disabled by default.\n4. [LLAPI Cores Updater](https://github.com/MiSTer-LLAPI/Updater_script_MiSTer). Downloads [LLAPI cores](https://github.com/MiSTer-LLAPI/Updater_script_MiSTer/wiki) which are compatible with BlisSTer and [LLAMA](https://github.com/bootsector/LLAMA). Disabled by default.\n5. [MAME and HBMAME Getter](https://github.com/MAME-GETTER/MiSTer_MAME_SCRIPTS) download roms from https://archive.org/\n6. [Arcade Organizer](https://github.com/MAME-GETTER/_arcade-organizer). Creates a folder structure under `_Arcade/_Organized` for easy navigation to all the MRA files.\n\nThis script also contains some snippets from the __Updater script__ maintained by [Locutus73](https://github.com/Locutus73).\n\n__MAME__ and __HBMAME Getters__ and __Arcade Organizer__ scripts are maintained by [amoore2600](https://www.youtube.com/channel/UC_IynEJIMqkYaCVjEk_EIlg).\n\n\n\n## Setup\n\nDownload this [ZIP file](https://github.com/theypsilon/Update_All_MiSTer/raw/master/setups/update_all.zip) and extract `update_all.sh` to your `/Scripts` folder on your primary SD card.\n\nThen turn on your __MiSTer__, go to the _Scripts_ menu and run this script from there.\n\nIt will take around 30 minutes the first time you run it, but later runs should take much less time.\n\n\n\n## Alternative Setups\n\nOther setups that might be useful for you:\n- [DB9/SNAC8 ZIP](https://github.com/theypsilon/Update_All_MiSTer/raw/master/setups/update_all_db9_snac8.zip): Enables [Extended Native Controller Compatibility](https://github.com/theypsilon/Update_All_MiSTer/wiki#extended-native-controller-compatibility) for Genesis and NeoGeo/Supergun controllers.\n- [Unofficial Cores ZIP](https://github.com/theypsilon/Update_All_MiSTer/raw/master/setups/update_all_unofficials.zip): With this one you'll download also [these cores](https://github.com/theypsilon/Updater_script_MiSTer_Unofficial/wiki) without having to touch anything else.\n- [No MRA-Alternatives ZIP](https://github.com/theypsilon/Update_All_MiSTer/raw/master/setups/update_all_no_mra_alternatives.zip): This setup is in case you wanna skip the `_alternatives` folder, which contains arcade variants, such as hacks, bootlegs, and different regions.\n- [LLAPI ZIP](https://github.com/theypsilon/Update_All_MiSTer/raw/master/setups/update_all_llapi.zip): In case you would like to download [LLAPI cores](https://github.com/MiSTer-LLAPI/Updater_script_MiSTer/wiki) too.\n- [No ROMS ZIP](https://github.com/theypsilon/Update_All_MiSTer/raw/master/setups/update_all_no_roms.zip): In case you would like to skip those scripts that deal with roms.\n- [usb0 ZIP](https://github.com/theypsilon/Update_All_MiSTer/raw/master/setups/update_all_usb0.zip): For people using USB as primary storage. You will be able to run this script from there and install all cores, roms, and MRAs on `/media/usb0`.\n\n\nNOTE: You should extract also `update_all.ini` in these.\n\n\n\n## Offline Setup\n\nCheck [updater-pc](./updater-pc) to download all the MiSTer files from your PC.\n\nUseful if you can't connect your MiSTer to internet.\n\n\n\n## Further Configuration\n\nIn case you would like to modify options by hand, you can create a `update_all.ini` file sitting next to where you have downloaded `update_all.sh`. In case you renamed `update_all.sh` you need to rename its INI file too, so they both share the same basename.\n\nYou may change the following parameters:\n\n```bash\n# Base directory for all script\u2019s tasks, \"/media/fat\" for SD root, \"/media/usb0\" for USB drive root.\nBASE_PATH=\"/media/fat\"\n\n# Selects Main MiSTer Updater to be used.\n## \"false\" to use the Official Main MiSTer Updater.\n## \"true\" to use the DB9 Fork Main MiSTer Updater\nENCC_FORKS=\"false\"\n\n# \"false\" to skip the Main Updater entirely\nMAIN_UPDATER=\"true\"\n# Specific INI settings for this script if you need it.\nMAIN_UPDATER_INI=\"/media/fat/Scripts/update_all.ini\"\n\n# \"false\" to skip Jotego Updater entirely\nJOTEGO_UPDATER=\"true\"\n# Specific INI settings for this script if you need it.\nJOTEGO_UPDATER_INI=\"/media/fat/Scripts/update_all.ini\"\n\n# \"true\" to activate the unofficial cores Updater\nUNOFFICIAL_UPDATER=\"false\"\n# Specific INI settings for this script if you need it.\nUNOFFICIAL_UPDATER_INI=\"/media/fat/Scripts/update_all.ini\"\n\n# \"true\" to activate the LLAPI Updater\nLLAPI_UPDATER=\"false\"\n# Specific INI settings for this script if you need it.\nLLAPI_UPDATER_INI=\"/media/fat/Scripts/update_all.ini\"\n\n# \"false\" to skip downloading MAME roms.\nMAME_GETTER=\"true\"\n# Specific INI settings for this script if you need it.\nMAME_GETTER_INI=\"/media/fat/Scripts/update_mame-getter.ini\"\n\n# \"false\" to skip downloading HBMAME roms.\nHBMAME_GETTER=\"true\"\n# Specific INI settings for this script if you need it.\nHBMAME_GETTER_INI=\"/media/fat/Scripts/update_hbmame-getter.ini\"\n\n# \"false\" to skip running the arcade organizer.\nARCADE_ORGANIZER=\"true\"\n# Specific INI settings for this script if you need it.\nARCADE_ORGANIZER_INI=\"/media/fat/Scripts/update_arcade-organizer.ini\"\n\n# \"false\" to not reboot automatically after a system component has been updated.\n# System component here means menu.rbf, MiSTer binary, Linux, and such.\nAUTOREBOOT=\"true\"\n\n# Waiting time between scripts.\nWAIT_TIME_FOR_READING=4\n\n###########################\n# Troubleshooting Options #\n###########################\n\n# Network resilience parameters\nCURL_RETRY=\"--connect-timeout 15 --max-time 120 --retry 3 --retry-delay 5 --silent --show-error\"\nALLOW_INSECURE_SSL=\"true\"\n\n# This will ignore optimizations and will always try to download ALL needed mame roms.\n# Use it if some roms are not being downloaded, and you don't know why.\n# Will become obsolete once MAME-GETTER has its own optimization logic.\nMAME_GETTER_FORCE_FULL_RESYNC=\"false\"\n# This will ignore optimizations and will always try to download ALL needed hbmame roms.\n# Use it if some roms are not being downloaded, and you don't know why.\n# Will become obsolete once HBMAME-GETTER has its own optimization logic.\nHBMAME_GETTER_FORCE_FULL_RESYNC=\"false\"\n# This will ignore optimizations and will always try to organize ALL installed MRAs.\n# Use it if some MRAs are not being organized, and you don't know why.\n# Will become obsolete once Arcade Organizer has its own optimization logic.\nARCADE_ORGANIZER_FORCE_FULL_RESYNC=\"false\"\n```\n\n\n\n## Optimizations\n\nThe __MAME__ and __HBMAME Getters__ are skipped if no new MRA are detected in the device.\n\nIf there are new MRAs that contains MAME roms, __MAME Getter__ will be executed if enabled.\n\nIf there are new MRAs that contains HBMAME roms, __HBMAME Getter__ will be executed if enabled.\n\n__Arcade Organizer__ is also skipped if there isn't any new MRA.\n\n## Funding\n\nConsider funding [Alexey Melnikov \"Sorgelig\"](https://www.patreon.com/FPGAMiSTer) for his invaluable work on the [MiSTer project](https://github.com/MiSTer-devel/Main_MiSTer/wiki).\n\n\n\n## License\n\nCopyright \u00a9 2020, [Jos\u00e9 Manuel Barroso Galindo](https://github.com/theypsilon).\nReleased under the [GPL v3 License](LICENSE).\n\n\n\n## Warning\n\nI take no responsibility for any data loss or any damage you may incur because of the usage of this script.\n\nPlease check the README.md of the scripts being called by Update All:\n\nhttps://github.com/MiSTer-devel/Updater_script_MiSTer<br>\nhttps://github.com/theypsilon/Updater_script_MiSTer_DB9<br>\nhttps://github.com/jotego/Updater_script_MiSTer<br>\nhttps://github.com/theypsilon/Updater_script_MiSTer_Unofficial<br>\nhttps://github.com/MiSTer-LLAPI/Updater_script_MiSTer<br>\nhttps://github.com/MAME-GETTER/MiSTer_MAME_SCRIPTS<br>\nhttps://github.com/MAME-GETTER/_arcade-organizer<br>\n",
      "archived": false,
      "url": "https://github.com/theypsilon/Update_All_MiSTer",
      "releases": []
    },
    {
      "name": "WatchFun",
      "description": "PersonalMoviesWebsSite ",
      "readme": "# WatchFun\nPersonalMoviesWebsSite \nOnline at: https://gh0sther.github.io/WatchFun\n",
      "archived": false,
      "url": "https://github.com/theypsilon/WatchFun",
      "releases": []
    },
    {
      "name": "_arcade-organizer",
      "description": "A script for organizing _Arcade for MiSTer",
      "readme": "# _arcade-organizer\n\nA Simple script to automate organizing MiSTer's \\_Arcade directory based on your MRA files.\n\nInstructions:\n\n\nDownload the update_arcade-organizer.sh to the Scripts directory and run.\n\nThis script looks at what MRA files you have and the information in them to organize MiSTer's \\_Arcade directory. \n\nIf the XLM tags for Year, Manufacturer, and Category are included in the MRA file, this script will create an \"\\_Organized\" Directory in \"\\_Arcade\" and will create the following sub-directories with soft sysmlinks to organize it:\n\n```\n_Organized\n\u251c\u2500\u2500 _1 A-E\n\u251c\u2500\u2500 _1 F-K\n\u251c\u2500\u2500 _1 L-Q\n\u251c\u2500\u2500 _1 R-T\n\u251c\u2500\u2500 _1 U-Z\n\u251c\u2500\u2500 _2 Year\n\u251c\u2500\u2500 _3 Manufacturer\n\u2514\u2500\u2500 _4 Category\n```\nThese scripts DO NOT DUPLICATE any cores or mra files, only soft symlinks are used.\n\nTHESE SYMLINKS ONLY WORK ON MISTER! IF YOU MOUNT YOUR SD CARD OUTSIDE OF MISTER THESE SYMLINKS WILL NOT WORK.\n\nTHIS SCRIP USES A DEFAULT LOCATION FOR `_Arcade at /media/fat/_Arcade`\n\nAND\n\nA DEFAULT LOCATION FOR \\_Organized at `/media/fat/_Arcade/_Organized`\n\nIf your \\_Arcade Directory is in a diffrent location you MUST use a `/media/fat/Scripts/update_arcade-organizer.ini` file \n\nIf your not using the default locations for \\_Arcade and \\_Organized you must add their locations in `/media/fat/Scripts/update_arcade-organizer.ini` \n\nQ: How can I set my own custom locations for MRA and \\_Organized Directories?\n\nA: A `/media/fat/Scripts/update_arcade-organizer.ini` file may be used to set custom location for your MRA files (Scans recursivly) and \\_Organized files.\nAdd the following line to the ini file to set a directory for MRA files: `MRADIR=/top/path/to/mra/files/_Arcade`\nAdd the following line to the ini file to set a directory for Organized files: `ORGDIR=/path/to/organized/files/_Organized`\n\n\nQ:Will this script over write files I already have?\n\nA: NO, This script will not clober files you already have.\n\n\nQ: What If I get new MRA/Core files? \n\nA: You need to re-run the script to have them included in the Organized files.\n\n\n**You should back up your \\_Arcade directory before running this script.**\n\n**USE AT YOUR OWN RISK - THIS COMES WITHOUT WARRANTE AND MAY NEUTER EVERYTHING.**\n",
      "archived": false,
      "url": "https://github.com/theypsilon/_arcade-organizer",
      "releases": []
    }
  ]
}
