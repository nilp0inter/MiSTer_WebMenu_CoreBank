{
  "name": "Miguel-T80c",
  "image": "https://avatars1.githubusercontent.com/u/60731488?v=4",
  "url": "https://github.com/Miguel-T80c",
  "type": "User",
  "repos": [
    {
      "name": "Amstrad-PCW_MiSTer",
      "description": "Amstrad PCW MiSTer core",
      "readme": "# Amstrad PCW MiSTer Core\n<img src=\"./docs/images/gnome.jpg\" alt=\"Gnome Ranger\" width=\"400\" height=\"300\">\n\nGnome Ranger running on the Amstrad PCW core by Stephen Eddy\n## Overview\nThe Amstrad PCW was a line of computers released by Amstrad UK in the mid 1980's to provide a cheaper alternative to owning an IBM PC for word processing and simple office type applications.  It was supplied with a detachable keyboard, printer, a disk drive and a high resolution monitor.  This monitor allowed the PCW to display sharp monochrome graphics at a resolution of 720 x 256.\n\nDespite the intended market being business applications and home office users, the computer sold over 8 million units and quite a number of games were also developed for the machine as well as  third party addons such as sound cards, joystick adapters and mice.  The Amstrad PCW was also sold as the Schneider Joyce in Europe.\n\nThe PCW came with 256k or 512k and was expandable upto 2MB of memory.  The high resolution display and large amount of memory for the time, makes the PCW the perfect CP/M machine and an ideal system for playing early text and graphic adventures.\n\n## Features\n* Amstrad PCW 8256 with Z80 CPU operating at 4Mhz and 256k memory\n* Turbo support to 8Mhz (2x), 16 Mhz(4x) or 32 Mhz\n* 3\" Disk Drives with read and write support\n* Compatible with standard emulator DSK format\n* PAL (720x256) or NTSC (720x200) resolution support\n* Full PC Keyboard mapping\n* Joystick support for the following types of joystick:\n  * Kempston Joystick\n  * Spectravideo Joystick\n  * Cascade Joystick\n  * DKTronics Joystick\n* Mouse support for the following types of mice:\n  * AMX Mouse\n  * Kempston Mouse\n  * Keymouse\n* Regular PCW Beeper sound and DKTronics Sound Generator (AY-3-8912) support\n* No additional SDRAM or other expansions needed\n \n\n## Using the core\n\nUnlike many home comptuters of the mid 80's, the Amstrad PCW always included a disk drive and monitor and all PCW software is supplied in disk format only.  The emulator supports the standard DSK format images used by the two main PCW emulators, Joyce by John Elliot and CPM/Box by Habisoft.\n\nThe PCW also doesn't have a BOOT ROM but instead streams a small boot routine from the keyboard controller at power-up time.  The PCW core recreates this boot sequence and does not require any external ROM files to boot.  Just place your DSK images in the **/Games/Amstrad PCW/** directory in the root of the SD card.\n\nGames are usually supplied on two disks, normally the first disk is a CP/M boot disk.  Insert this boot disk into the A: drive using the Menu, then select the **RESET** option to restart and load the disk. Once the boot disk has finished booting, you will be prompted by the PCW change the disk to the second disk and press return.\n\n![](./docs/images/change_disk.jpg)\n\nThe main operating system the PCW used was called CP/M which was developed by Digital Research and was one of the worlds first cross platform operating systems.   More infomation about CP/M and some common commands available are documented on [The CP/M Wiki article](https://en.wikipedia.org/wiki/CP/M)\n\n## Current issue\n* Head over Heels boot screen corrupt - The game itself works fine\n* La Abadia del Crimen - Corrupt graphics\n* CP/M disk images can infrequently become corrupt - Back them up\n* CPC Paging mode not supported - I am not aware of any PCW games using it\n\n## Upcoming features\nThe following features are coming shortly\n* 2MB memory support using SDRAM\n* 2 Disk Drives\n\n## Thanks\nSpecial thanks to the following people:\n* John Elliott for the fantastic [PCW Hardware guide](https://www.seasip.info/Unix/Joyce/hardware.pdf), the [Joyce emulator](https://www.seasip.info/Unix/Joyce/) and for answering my emails\n* Javier Chocano from Habisoft for the [CP/M Box emulator](http://www.habisoft.com/pcw/) and early guidance\n* [@zigazou](https://twitter.com/zigazou) for his detailed [wiki article](https://github.com/Zigazou/amstrad-pcw-technical-info/tree/master/video-memory) on the PCW screen memory structure\n* [@asicguy](https://github.com/asicguy), [@alanswx](https://github.com/alanswx) and [@dshadoff](https://github.com/dshadoff) for the help, eoncouragment and support developing the core\n* [@sorgelig](https://github.com/sorgelig) for the fantastic MiSTer project and work\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Amstrad-PCW_MiSTer",
      "releases": [
        {
          "name": "Amstrad-PCW_20200816.rbf",
          "sha": "2128f67c9d37aaf27bd2fb40ca14d9612fc998bd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Amstrad-PCW_MiSTer/master/releases/Amstrad-PCW_20200816.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Amstrad_MiSTer",
      "description": "Amstrad CPC 6128 for MiSTer",
      "readme": "\n# Amstrad CPC 6128 for MiST and MiSTer\nThis core has been started as a port of [CoreAmstrad by Renaud H\u00e9lias](https://github.com/renaudhelias/CoreAmstrad) but every module has been either rewritten or replaced so, now it can be treated as a completely new core.\n\n## Features\n* Precise CPU timings including proper contention model.\n* Precise CRTC model supporting many tricks of Types 1 and 0.\n* 2 disk drives\n* Disk write support.\n* Close to real disk drive emulation with support of some protections.\n* Selectable CPC 6128/664 mode with separate ROM sets.\n* Multiface 2.\n* Several monochrome modes and 2 types of palette (GA/ASIC).\n* Selectable expansion ROM loading.\n* Joystick support with up to 3 buttons (2 on MiST)\n* Kempston, SYMBiFACE II and Multiplay mice.\n* HQ2x and Scanlines FX for scandoubler.\n* Tape input through UART header (MiST) / ADC board (MiSTer)\n* Support *.CDT tape files.\n* Tape output through speaker.\n\n\n## Installation\nplace RBF and **amstrad.rom** into root of SD card. Or on **MiSTer** you can rename ROM to boot.rom and put it into Amstrad folder.\n\n## Disk support\nPut some *.DSK files into Amstrad folder and mount it from OSD menu.\nimportant Basic commands:\n* cat - list the files on mounted disk.\n* run\" - load and start the program. ex: run\"disc\n* |a, |b - switch between drives\n\n## Boot ROM\nBoot ROM has following structure:\n\nOS6128 + BASIC1.1 + AMSDOS + MF2 + OS664 + BASIC664 + AMSDOS + MF2\n\nEvery part is 16KB. You can create your own ROM if you have a special preference.\n\n## Expansion ROM\nExpansion ROM should have file extension .eXX, where XX is hex number 00-FF of ROM page to load.\nEvery page is 16KB. It's possible to load larger ROM. In this case every 16KB block will be loaded in subsequent pages.\n\n### Special extensions:\n* eZZ - LowROM(OS)\n* eZ0 - LowROM(OS) + Page 0(Basic) + subsequent pages depending on size.\n\n### Notes\nYou can load several expansions. With every load the system will reboot. System ROM also can be replaced the same way.\nTo restore original ROM you have to reload the core (Alt-F12).\n\n### MiSTer specific\nYou can define boot extensions to automatically load at start of core. Use following name rules:\n* boot.eXX  - load to both 664 and 6128 configs\n* boot0.eXX - load to 6128 config\n* boot1.eXX - load to 664 config\n\nwhehe XX is 00-FF, ZZ, Z0.\n\n## CDT tape files (MiSTer)\nCDT supported in very basic form for retro feeling and for some very specific apps. There is no way to rewind or fast forward the file. \nUSER LED will lit if there is a tape in the memory and still have data to play and blink while playback.\n\nControl keys:\n* Alt+F1 - mute/unmute the tape sound\n* Alt+F2 - unload the tape (turn off the LED)\n\nCDT playback respects the tape motor ON/OFF state.\n\n## RAM\nCPC664 model has only 64KB RAM - use this model for programs not compatible with 128KB RAM.\n\nCPC6128 model has 64KB+512KB RAM. Upper 448KB are visible in special OS ROM or application aware of 512KB expansion.\n\n## Multiface 2\n* Multiface 2 can be activated with F11.\n* USER LED shows if the MF2 ROM/RAM is active.\n* Returning from the MF2 menu via (r)eturn makes the device invisible.\n* Visibility can be restored via machine reset (original MF 2+).\n* For loading a saved game, MF2 must be visible.\n* ROM version is 8D.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Amstrad_MiSTer",
      "releases": [
        {
          "name": "Amstrad_20200420.rbf",
          "sha": "cab4501287fc0f48e9fffea1f603cfd47a770c73",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Amstrad_MiSTer/master/releases/Amstrad_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "Amstrad_20200510.rbf",
          "sha": "7561bbb2456788faa7b1aabc717a3c54151b319d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Amstrad_MiSTer/master/releases/Amstrad_20200510.rbf",
          "type": "RBF"
        },
        {
          "name": "Amstrad_20200703.rbf",
          "sha": "39d84add8b2e8cf0bea94fe15ce421caf5c557c7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Amstrad_MiSTer/master/releases/Amstrad_20200703.rbf",
          "type": "RBF"
        },
        {
          "name": "Amstrad_20200729.rbf",
          "sha": "686677a4b61f23f461ed77be93173d0f02b915eb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Amstrad_MiSTer/master/releases/Amstrad_20200729.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "ao486_MiSTer",
      "description": "ao486 port for MiSTer",
      "readme": "# ao486 port for MiSTer by Sorgelig.\n\nCore was greatly reworked with many new features and performance added.\n\n## Features:\n* 486DX33 performance (no-FPU).\n* 256MB RAM\n* SVGA with up to 1280x1024@256, 1024x768@64K, 640x480@16M resolutions\n* SoundBlaster 2.0 with OPL3\n* High speed UART (3Mbps) internet connection\n* MIDI port (dumb and fake-smart modes)\n* Dual HDD with up to 8GB each\n* Shared folder support\n\n## How to install\n\n* Copy ao486.rbf to root of SD card\n* Create /ao486 directory on SD card and copy [boot0.rom](https://github.com/MiSTer-devel/ao486_MiSTer/blob/master/releases/bios/boot0.rom?raw=true), [boot1.rom](https://github.com/MiSTer-devel/ao486_MiSTer/blob/master/releases/bios/boot1.rom?raw=true) there.\n* For floppy: copy desired floppy raw image with extension **img** to ao486 directory.\n* For HDD: create an empty file of desired size with extension **vhd** in ao486 directory (or prepare .vhd file separately with any tool supporting .vhd or hard disk .img files and copy to /ao486 folder)\n* Boot ao486 and in OSD choose desired floppy, hdd and boot order\n* Save settings and press \"Reset and apply HDD\"\n\nHDD image is a raw image with MBR. It can be opened in Windows/Linux by many applications,\nso it's possible to prepare a HDD in windows/linux (in most cases you need to work with .img files, then just rename it to .vhd extension)\n\n### SoundBlaster settings:\n* address: 220h\n* IRQ: 5\n* DMA: 1\n* type SoundBlaster 2.0\n\n### MIDI settings:\n* address: 330h\n* IRQ: 9\n\n### Drivers\nWindows 9x drivers for video and modem are [here](https://github.com/MiSTer-devel/ao486_MiSTer/blob/master/releases/drv)\n\n### Note:\n* Press **WIN+F12** to access **OSD on ao486 core**. F12 alone acts as generic F12 PC key.\n\n### Known issues\n* FDD doesn't work under Win9x. To fix it simply delete floppy device from device manager and reboot.\nWindows will still provide flopy access through BIOS in compatibility mode.\n\nOriginal core [repository](https://github.com/alfikpl/ao486)\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/ao486_MiSTer",
      "releases": [
        {
          "name": "ao486_20200510.rbf",
          "sha": "f2c371f1b66dccde450f7949c1ce183c3afd2c1b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/ao486_20200510.rbf",
          "type": "RBF"
        },
        {
          "name": "ao486_20200805.rbf",
          "sha": "4f1052e57f7424a5ef6ab5a9cd18331da3e19b8b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/ao486_20200805.rbf",
          "type": "RBF"
        },
        {
          "name": "ao486_20200810.rbf",
          "sha": "b59c0f8c6b36486f69023f2dcd30c21d6c878e09",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/ao486_20200810.rbf",
          "type": "RBF"
        },
        {
          "name": "ao486_20200811.rbf",
          "sha": "b577b8ebb7962a7f91cfca066158e469091a5045",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/ao486_20200811.rbf",
          "type": "RBF"
        },
        {
          "name": "ao486_20200814.rbf",
          "sha": "1b9f16f31f4ec2e39074b6159cf68620aa26601d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/ao486_20200814.rbf",
          "type": "RBF"
        },
        {
          "name": "ao486_20200816.rbf",
          "sha": "24a38a1a4b848e89317f6bfec0c8937a8f3db516",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/ao486_20200816.rbf",
          "type": "RBF"
        },
        {
          "name": "boot0.rom",
          "sha": "f7573ed6c5420a4bda524baf27eb95a19b2a1736",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/bios/boot0.rom",
          "type": "OTHER"
        },
        {
          "name": "boot1.rom",
          "sha": "b341bef301f8e4abf5d12486b978f9595c693551",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/bios/boot1.rom",
          "type": "OTHER"
        },
        {
          "name": "boot1_opensource.rom",
          "sha": "29cecda09ec76a2e45c28db66d3d29739751fd7e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/bios/boot1_opensource.rom",
          "type": "OTHER"
        },
        {
          "name": "MISTERFB.DRV",
          "sha": "880f1481d9f7177763d41c36b68dc7193a65a9e6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/drv/MISTERFB.DRV",
          "type": "OTHER"
        },
        {
          "name": "MISTERFB.INF",
          "sha": "09b4e3f547e4b1d18d1ddda2732962857eecd15e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/drv/MISTERFB.INF",
          "type": "OTHER"
        },
        {
          "name": "misterfs.exe",
          "sha": "b1790c191750ac7c7494173e7a8d48477f7a0c25",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/drv/misterfs.exe",
          "type": "OTHER"
        },
        {
          "name": "modem9x.inf",
          "sha": "32013f357b176144e6373a173124d931e8fc89e7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/drv/modem9x.inf",
          "type": "OTHER"
        },
        {
          "name": "sysctl.exe",
          "sha": "13b4d90d20a4503011df95ec325eec0ac06cf31f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ao486_MiSTer/master/releases/drv/sysctl.exe",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Apple-II_MiSTer",
      "description": "Apple II+ for MiSTer",
      "readme": "This is MiSTer port of Apple IIe from MiST.\n\nPut disk files into Apple-II folder.\n\n---------------------------------------------------------------------------\n\nThis the MiST port of a reconstruction of an 1980s-era Apple ][+ implemented in VHDL for FPGAs.\nOriginal for the DE2: http://www1.cs.columbia.edu/~sedwards/apple2fpga/\nPort for the MiST: http://ws0.org/tag/apple2/\n\nFeatures:\n- disk loading via osd (no write support yet) supported formats: .nib, .dsk, .do, .po\n- Tape loading via the ADC-in\n- Selectable 6502 or 65C02 CPU \n- joystick support\n- scanlines\n- color, amber, green and black&white monitor\n- language card in slot 0\n- 64K base + 64K auxilary RAM with 80 column and double hi-res support (256KB total with Saturn 128K)\n- Saturn 128k RAM expansion in slot 5 (get the utility disks from here: http://apple2online.com/index.php?p=1_28)\n- Mockingboard model A (two AY-3-8913 chips for six audio channels) in slot 4\n\nOn the \"Apple ][\" boot screen open the OSD with F12 and choose a disk. It will boot\nthe disk automatically. \n\nDisk formats:\nApple-II has a big mess in disk formats. DSK image may contain either DO or PO format.\nEven PO and DO may contain opposite format. So if PO disk doesn't work, then try to rename it to DO.\nif DO or DSK doesn't work then try to rename it to PO.\n\nIf you press reset (the right button on the MiST) you'll enter Applesoft with the ] prompt.\nFrom here you have some limited commands. See: http://www.landsnail.com/a2ref.htm\nIf you want to boot another disk choose a .nib image via the osd and type the following:\n\n]PR#6\n\nor\n\n]CALL -151\n*C600G\n\nThe call command will enter the Monitor. Type the call a second time if the * prompt won't\nshow the first time. \nAt the Monitor you can also type 6 and then Ctrl-P followed by return.\nSee http://vectronicsappleworld.com/appleii/dos.html#bootdos\n\n\n---------------------------------------------------------------------------\n                Pre-MiST ReadMe for historical purpose.\n---------------------------------------------------------------------------\n\nThis is a reconstruction of an 1980s-era Apple ][+ implemented in VHDL for\nFPGAs.\n\nStephen A. Edwards, sedwards@cs.columbia.edu\nhttp://www1.cs.columbia.edu/~sedwards\n------------------------------\nThe current implementation uses the Altera DE2 board and takes advantage\nof its off-chip SRAM, VGA DAC, SD card, audio CODEC, and PS/2 keyboard\ninterface. \n\nIt was designed to be fairly easy to port: the apple2.vhd file should\nbe implementation-agnostic: it only assumes the external availability\nof 48K of RAM and a keyboard.\n\nIt contains a simple read-only Disk II emulator that expects\n\"nibblized\" disk images written raw onto an SD or MMC card (i.e., it\ndoes not use a FAT or any other type of filesystem).\n\nThe VGA controller (not part of an original Apple) doubles each line\nand interprets the Apple's NTSC-compatible color signals to produce a color\n640 X 480 VGA display with non-standard dot timing.\n------------------------------\nTo compile under Altera's Quartus software, open the apple2fpga.qpf\nproject file and compile.\n------------------------------\nVHDL files, in order of elaboration:\n\ntiming_generator.vhd Timing signal generation, video counters\ncharacter_rom.vhd    The beautiful 5 X 8 uppercase-only text font\nvideo_generator.vhd  Text, lores, and hires mode shift registers\nmain_roms.vhd        D000-FFFF ROMs: Applesoft and the Monitor\ncpu6502.vhd          The 6502 CPU core\napple2.vhd           Top-level of the Apple: mostly address decode\ndisk_ii_rom.vhd      C600-C6FF ROM: Disk II bootstrap ROM\ndisk_ii.vhd          Read-only Disk II emulator\nvga_controller.vhd   NTSC-to-VGA color interpolation, line doubler\nPS2_Ctrl.vhd         Low-level PS/2 keyboard interface\nkeyboard.vhd         PS/2 keyboard-to-Apple interface\nspi_controller.vhd   SD/MMC card controller: reads raw tracks\ni2c_controller.vhd   Simple I2C bus driver; initializes the codec\nwm8731_audio.vhd     Controller for the Wolfson WM8731 audio codec\nDE2_TOP.vhd          Top-level entity for the Altera DE2 board\nCLK28MPLL.vhd\t     Altera-specific configuration for 28 MHz PLL\n\nOther files:\n\ndsk2nib.c            Converts a 140K .dsk image file to the raw 228K\n                     .nib format used by the Disk II emulator\n\nmakenibs\t     A shell (e.g., bash) script that assembles\n\t\t     collections of .dsk files into a file suitable\n\t\t     for directly writing onto an SD card\t\t     \n\nrom2vhdl             Script to convert raw ROM files into\n\t\t     synthesizable VHDL code.  Used to produce main_roms.vhd\n\napple2fpga.qpf       Project file for Altera's Quartus\nDE2_TOP.qsf          Mostly pin assignments for Altera's Quartus\nDE2_TOP.sof\t     A compiled bitstream for the DE2 board: the\n\t\t     result of compiling all the VHDL files in\n\t\t     Quartus; suitable for programming if you have a\n\t\t     DE2 board.\n\ndos33master.nib      Bootable disk image: Apple DOS 3.3 system master\n\nbios.a65\t     6502 assembly source for a \"fake\" BIOS\nbios.rom\t     Binary data for the \"fake\" BIOS\n\nMakefile             Rules for creating the .zip, .vhd files, etc.\n------------------------------\nDisk images\n\nThe system expects a sequence of \"nibblized\" (227K) disk images on the\nSD card starting at block 0.  Switches on the DE2 board selects which\nimage appears to be in the drive; the image number is displayed in hex\non two of the seven-segment displays.\n\nMost Apple II disk images are in 140K .dsk files, which stores only\nthe disk's logical data, i.e., is not encoded.  dsk2nib.c is a small C\nprogram that expands .dsk files to .nib files.\n\nI used the \"makenibs\" script to find all the .dsk files in a tree of\ndirectories, assemble them into an image suitable for downloading to\nthe SD card, and print an image number/file name cross-listing.\n\nTo write .nib images to an SD/MMC card under Linux, I use\n\ndd if=dos33master.nib of=/dev/sdd\n\nOf course, your card may appear as something other than /dev/sdd.\n------------------------------\nROMs\n\nThis archive does NOT include a copy of the Apple ][+'s ROMs, which\nare copyright Apple Computer.  Instead, it includes a very trivial\nBIOS that beeps, displays a text screen, then cycles through some\nlores and hires graphics patterns when keys are pressed.  This should\nbe enough to verify the graphics, sound, and keyboard are working (but\nnot the disk emulator).  Source for this BIOS is in the bios.a65 file,\nwhich I assembled using the xa65 cross-assembler.\n\nThe system requires two ROM images: a 12K image of the system roms\n(memory from 0xD000 - 0xFFFF) and a 256-byte image of the Disk II\ncontroller bootstrap ROM (memory from 0xc600 - 0xc6ff if the card is\nin the usual slot 6).\n\nOnce you obtain them, run the \"rom2vhdl\" script to convert the binary\nfiles into .vhd files that hold the data.  The Makefile contains rules\nfor doing this.\n------------------------------\nCredits:\n\nPeter Wendrich supplied the 6502 core:\n\n-- cpu65xx_fast.vhdl, part of FPGA-64, is made available strictly for personal\n-- educational purposes. Distributed with apple2fgpa with permission.\n--\n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com).\n-- All rights reserved.\n-- http://www.syntiac.com/fpga64.html\n\nThe low-level PS/2 keyboard controller is from ALSE:\n\n-- PS2_Ctrl.vhd\n-- ------------------------------------------------\n--   Simplified PS/2 Controller  (kbd, mouse...)\n-- ------------------------------------------------\n-- Only the Receive function is implemented !\n-- (c) ALSE. http://www.alse-fr.com\n\nI adapted the Apple ][ keyboard emulation from Alex Freed's FPGApple:\nhttp://mirrow.com/FPGApple/\n\n ",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Apple-II_MiSTer",
      "releases": [
        {
          "name": "Apple-II_20200512.rbf",
          "sha": "f0df167c6b11b6f94fed6c8ee67d88f18df9f105",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Apple-II_MiSTer/master/releases/Apple-II_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "Dummy",
          "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Apple-II_MiSTer/master/releases/Dummy",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-Asteroids_MiSTer",
      "description": "Atari Asteroids for MiSTer",
      "readme": "This is a Model of Asteroids hardware adapted from Asteroids Deluxe by James Sweet.\r\n\r\n-- Keyboard players inputs :\r\n--\r\n   F1          : Coin + Start 1P\r\n   F2          : Coin + Start 2P\r\n   LEFT,RIGHT  arrows : Steering\r\n   Space: Hyperspace\r\n   Ctrl,M  : Fire\r\n   LAlt: Thrust\r\n\r\n   MAME/IPAC/JPAC Style Keyboard inputs:\r\n     5           : Coin 1\r\n     6           : Coin 2\r\n     1           : Start 1 Player\r\n     2           : Start 1 Player\r\n\r\n-- Joystick support.\r\n\r\n-- OSD language selection\r\n\r\nThe rbf and mra file is in releases\r\n\r\n---------------------------------------------------------------------------------\r\n\r\n                                *** Attention ***\r\n\r\nROMs are not included. In order to use this arcade, you need to provide the\r\ncorrect ROMs.\r\n\r\nTo simplify the process .mra files are provided in the releases folder, that\r\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\r\ncorresponding file of the M.A.M.E. project.\r\n\r\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\r\ninformation on how to setup and use the environment.\r\n\r\nQuickreference for folders and file placement:\r\n\r\n/_Arcade/<game name>.mra\r\n/_Arcade/cores/<game rbf>.rbf\r\n/_Arcade/mame/<mame rom>.zip\r\n/_Arcade/hbmame/<hbmame rom>.zip\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Asteroids_MiSTer",
      "releases": [
        {
          "name": "Arcade-Asteroids_20200506.rbf",
          "sha": "e7c45ae9f5eb0bf59802a2aa2bbfb1876ec0fcbd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Asteroids_MiSTer/master/releases/Arcade-Asteroids_20200506.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Asteroids_20200522.rbf",
          "sha": "b3662cf7e4978fc8889b2a94c4ef3f8ed4a52dbe",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Asteroids_MiSTer/master/releases/Arcade-Asteroids_20200522.rbf",
          "type": "RBF"
        },
        {
          "name": "Asteroids.mra",
          "sha": "92c0e95d482e1ba21b92aaca5b2ed66b0e86aea6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Asteroids_MiSTer/master/releases/Asteroids.mra",
          "type": "MRA",
          "extra": {
            "name": "Asteroids (rev 4)",
            "rbf": "asteroids",
            "zips": [
              "asteroid.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Astrocade_MiSTer",
      "description": "Arcade games on Bally Astrocade Hardware",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade version of Astrocade for MiSTer - Mike Coates\n--\n-- V 1.0 30/03/2020\n-- V 1.1 06/04/2020\n-- V 1.2 03/05/2020\n-- \n------------------------------------------------------------------------------------\n-- From FPGA implementation of the Bally Astrocade based on a project by MikeJ et al\n------------------------------------------------------------------------------------\n--\n-- Notes (on what does and doesn't work!)\n--\n-- Overall\n--\n-- P2 controls not tested for anything\n--\n-- Extra Bases\n-- -----------\n-- This usually uses a trackball, but at the moment it is set up to use an analogue \n-- joystick for player 1 only. \n--\n-- Seawolf II\n-- ----------\n-- This normally uses two periscopes which send their position to the game, again this\n-- is setup to use an analogue joystick for player one. You can turn the fake sight for\n-- player two on and off via a fake dip switch setting. \n--\n-- Sound uses samples, originally from mame but modified to closer match the hardware\n-- \n-- Space Zap\n-- ---------\n-- Player one controls are setup using up/down/left/right - the real hardware uses \n-- buttons for these, not joystick controls, but should be playable.\n--\n-- Wizard of Wor\n-- -------------\n-- Controls are setup in two ways as the game has a unique joystick with two leaves\n-- in each direction, so if you move it a little way, the player turns to face and shoot\n-- that way. If you move it further, then the player moves that way.\n--\n-- n.b. fake dipswitch settings to select Digital or Analogue controls\n-- digital is implemented as directions and two fire buttons. (as per Mame)\n-- analogue should do the same as the real game.\n--\n-- No SC-01A speech chip implemented.\n--\n-- Robby Roto\n-- ----------\n-- setup using digital joystick\n--\n-- Gorf\n-- ----\n-- SC-01A speech implemented using samples\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Astrocade_MiSTer",
      "releases": [
        {
          "name": "Arcade-Astrocade_20200407.rbf",
          "sha": "ba436b0d644f8c3bf2c9cc504ef51550b9a80eb1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Arcade-Astrocade_20200407.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Astrocade_20200408.rbf",
          "sha": "620cc9b0dc2f5b0f4b19ad1f15608104a37109db",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Arcade-Astrocade_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Astrocade_20200414.rbf",
          "sha": "816174a08f9c077b0f7d8d1d9972b3f09425364f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Arcade-Astrocade_20200414.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Astrocade_20200419.rbf",
          "sha": "a51b1943f12fb6d25d893e9128ee8c9ef53346d9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Arcade-Astrocade_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Astrocade_20200503.rbf",
          "sha": "a89b43d4713c4f5c4ce8d6aa8a5e754883a4db1a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Arcade-Astrocade_20200503.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Astrocade_20200528.rbf",
          "sha": "14adae878e44bba10a22a5ed7ed8f45d5af2fb2b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Arcade-Astrocade_20200528.rbf",
          "type": "RBF"
        },
        {
          "name": "Extra Bases.mra",
          "sha": "fce778878b58c37fccb7817deead87185963df2b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Extra%20Bases.mra",
          "type": "MRA",
          "extra": {
            "name": "Extra Bases",
            "rbf": "astrocade",
            "zips": [
              "ebases.zip"
            ]
          }
        },
        {
          "name": "Gorf - Speech.mra",
          "sha": "e7a87e3e0029e555c68d93041bfdb32a6f65238f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Gorf%20-%20Speech.mra",
          "type": "MRA",
          "extra": {
            "name": "Gorf",
            "rbf": "astrocade",
            "zips": [
              "gorf.zip"
            ]
          }
        },
        {
          "name": "Gorf.mra",
          "sha": "aa774fb43185eca43dc4312af4eff7303cee5d6e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Gorf.mra",
          "type": "MRA",
          "extra": {
            "name": "Gorf",
            "rbf": "astrocade",
            "zips": [
              "gorf.zip"
            ]
          }
        },
        {
          "name": "Robby Roto.mra",
          "sha": "b0b371526fc903f03c3c0f833b95dbc8b446d829",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Robby%20Roto.mra",
          "type": "MRA",
          "extra": {
            "name": "The Adventures of Robby Roto!",
            "rbf": "astrocade",
            "zips": [
              "robby.zip"
            ]
          }
        },
        {
          "name": "Seawolf II.mra",
          "sha": "36afb8ef0de4b02ec74894cff7999469a4c4857f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Seawolf%20II.mra",
          "type": "MRA",
          "extra": {
            "name": "Sea Wolf II",
            "rbf": "astrocade",
            "zips": [
              "seawolf2.zip"
            ]
          }
        },
        {
          "name": "Space Zap.mra",
          "sha": "9c6ce0377ef9b612aa24234dcd343d8b8d531f67",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Space%20Zap.mra",
          "type": "MRA",
          "extra": {
            "name": "Space Zap",
            "rbf": "astrocade",
            "zips": [
              "spacezap.zip"
            ]
          }
        },
        {
          "name": "Wizard of Wor.mra",
          "sha": "3500b23fa9b80da66d6665587999e4bcec48be4a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Astrocade_MiSTer/master/releases/Wizard%20of%20Wor.mra",
          "type": "MRA",
          "extra": {
            "name": "Wizard of Wor",
            "rbf": "astrocade",
            "zips": [
              "wow.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-ATetris_MiSTer",
      "description": "Arcade: Atari Tetris for MiSTer",
      "readme": "-------------------------------------------------------------------------------------------\n-- \n-- Arcade: Atari Tetris  for MiSTer by MiSTer-X\n-- 11 December 2019\n-- From: https://github.com/MrX-8B/MiSTer-Arcade-AtariTetris\n-- \n-------------------------------------------------------------------------------------------\n-- 65xx compatible microprocessor core\n----------------------------------------------\n-- FPGAARCADE SVN: $Id: T65.vhd 1347 2015-05-27 20:07:34Z wolfgang.scherr $\n--\n-- Copyright (c) 2002...2015\n--               Daniel Wallner (jesus <at> opencores <dot> org)\n--               Mike Johnson   (mikej <at> fpgaarcade <dot> com)\n--               Wolfgang Scherr (WoS <at> pin4 <dot> at>\n--               Morten Leikvoll ()\n-------------------------------------------------------------------------------------------\n-- Pokey\n----------------------------------------------\n-- (c) 2013 mark watson\n-------------------------------------------------------------------------------------------\n-- Diagonal Input\n----------------------------------------------\n-- (c) 2019 Eniva  https://github.com/eniva/fpga-controls\n-------------------------------------------------------------------------------------------\n-- Tetris (and cocktail version) MRA files\n----------------------------------------------\n-- written by Bruno Silva (@eubrunosilvapt)\n-------------------------------------------------------------------------------------------\n--\n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Rotate\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   F,D,G       : Player 2 Movements\n--   A           : Player 2 Rotate\n--\n-- Joystick support.\n--\n--\n-------------------------------------------------------------------------------------------\n\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-ATetris_MiSTer",
      "releases": [
        {
          "name": "Arcade-AtariTetris_20200415.rbf",
          "sha": "5adff91ee360ec4d7d170899bc18c7de403852d1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ATetris_MiSTer/master/releases/Arcade-AtariTetris_20200415.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-AtariTetris_20200418.rbf",
          "sha": "f7a5b55fd50ac10b8156b53067dd5d0f87827f15",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ATetris_MiSTer/master/releases/Arcade-AtariTetris_20200418.rbf",
          "type": "RBF"
        },
        {
          "name": "Tetris (cocktail set 1).mra",
          "sha": "2f447b1d4643073bd656a0fae6843e7e7ba0df60",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ATetris_MiSTer/master/releases/Tetris%20(cocktail%20set%201).mra",
          "type": "MRA",
          "extra": {
            "name": "Tetris (cocktail set 1)",
            "rbf": "ataritetris",
            "zips": [
              "atetrisc.zip",
              "atetris.zip"
            ]
          }
        },
        {
          "name": "Tetris.mra",
          "sha": "853063dfc97abdbe5582db167fd133ebb96be9da",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ATetris_MiSTer/master/releases/Tetris.mra",
          "type": "MRA",
          "extra": {
            "name": "Tetris (set 1)",
            "rbf": "ataritetris",
            "zips": [
              "atetris.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "e3dd2c9fb733ae2d4a647beb7e0cfbe7dde88769",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ATetris_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-Bagman_MiSTer",
      "description": "Arcade: Bagman for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Bagman port to MiSTer by Sorgelig\n-- 24 October 2017\n-- \n---------------------------------------------------------------------------------\n-- Bagman (STERN) FPGA - DAR - 2014\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F3          : Add coin (press 2 times for one credit!)\n--   F1          : Start\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Fire  \n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Bagman_MiSTer",
      "releases": [
        {
          "name": "Arcade-Bagman_20200508.rbf",
          "sha": "371e1db296aa11ad41d351c15b7e9e56d7569971",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Bagman_MiSTer/master/releases/Arcade-Bagman_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "Bagman.mra",
          "sha": "4be2804cd9539b2a53a056a7c1e8b57906d1438b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Bagman_MiSTer/master/releases/Bagman.mra",
          "type": "MRA",
          "extra": {
            "name": "Bagman",
            "rbf": "bagman",
            "zips": [
              "bagman.zip"
            ]
          }
        },
        {
          "name": "Botanic.mra",
          "sha": "0a3e6ef13b85e83ae7f85cde6369671d07056922",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Bagman_MiSTer/master/releases/Botanic.mra",
          "type": "MRA",
          "extra": {
            "name": "Botanic (English - Spanish, set 1)",
            "rbf": "bagman",
            "zips": [
              "botanic.zip"
            ]
          }
        },
        {
          "name": "Pickin'.mra",
          "sha": "05d3e1cc6cc88281ef9b4e048df47ca721430de6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Bagman_MiSTer/master/releases/Pickin'.mra",
          "type": "MRA",
          "extra": {
            "name": "Pickin'",
            "rbf": "bagman",
            "zips": [
              "pickin.zip"
            ]
          }
        },
        {
          "name": "Squash.mra",
          "sha": "a49d44cd1681b15f4f1d3e78df5b35a376f031ae",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Bagman_MiSTer/master/releases/Squash.mra",
          "type": "MRA",
          "extra": {
            "name": "Squash (Itisa)",
            "rbf": "bagman",
            "zips": [
              "squaitsa.zip"
            ]
          }
        },
        {
          "name": "Super Bagman.mra",
          "sha": "bb767a8e97dbf795a83ce0f5e58e044cbd01ae49",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Bagman_MiSTer/master/releases/Super%20Bagman.mra",
          "type": "MRA",
          "extra": {
            "name": "SuperBagman",
            "rbf": "bagman",
            "zips": [
              "sbagman.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Berzerk_MiSTer",
      "description": "Berzerk Arcade Game",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Berzerk Port to MiSTer\n-- 24 March 2019\n-- \n---------------------------------------------------------------------------------\n-- Berzerk FPGA by Dar - (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   Space,Ctrl  : Fire\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--   \n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n\n\n\n-------------------------------------------------\n-- Berzerk FPGA by Dar - (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n-------------------------------------------------\n-- Berzerk releases\n--\n-- Release 0.0 - 07/07/2018 - Dar\n-------------------------------------------------\nEducational use only\nDo not redistribute synthetized file with roms\nDo not redistribute roms whatever the form\nUse at your own risk\n--------------------------------------------------------------------\nmake sure to use berzerk.zip roms \n--------------------------------------------------------------------\n--\n-- Main features :\n--  PS2 keyboard input @gpio pins 35/34 (beware voltage translation/protection) \n--  Audio pwm output   @gpio pins 1/3 (beware voltage translation/protection) \n--\n-- Uses 1 pll for 10MHz generation from 50MHz\n--\n-- Board key :\n--   0 : reset game\n--\n-- Board switch :\n--\t  1 : tv 15Khz mode / VGA 640x480 mode\n--\n-- Keyboard players inputs :\n--\n--   F3 : Add coin\n--   F2 : Start 2 players\n--   F1 : Start 1 player\n--   SPACE       : fire\n--   RIGHT arrow : move right\n--   LEFT  arrow : move left\n--   UP    arrow : move up \n--   DOWN  arrow : move down\n--\n-- Sound effects : OK\n-- Speech synthesis : todo \n--\n---------------\nVHDL File list \n---------------\n\nmax10_pll_10M.vhd       Pll 10MHz from 50MHz altera mf\n\nberzerk_de10_lite.vhd   Top level for de10-lite board\nberzerk.vhd             Main logic\nberzerk_sound_fx.vhd    Music logic\nberzerk_program1.vhd\nberzerk_program2.vhd\n\nvideo_gen.vhd           Video scheduler, syncs (h,v and composite)\nline_doubler.vhd        Line doubler 15kHz -> 31kHz VGA\n\nkbd_joystick.vhd        Keyboard key to player/coin input\n\nT80se.vhd               T80 release 304  \nT80_Reg.vhd\nT80_Pack.vhd\nT80_MCode.vhd\nT80_ALU.vhd\nT80.vhd\n\nio_ps2_keyboard.vhd     Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\ngen_ram.vhd\n\ndecodeur_7_seg.vhd      for debug\n\n----------------------\nQuartus project files\n----------------------\nde10_lite/berzerk_de10_lite.qsf   de10_lite settings (files,pins,...)\nde10_lite/berzerk_de10_lite.qpf   de10_lite project\nde10_lite/berzerk_de10_lite.sdc   timequest constraints\n\n\n+----------------------------------------------------------------------------------+\n; Fitter Summary                                                                   ;\n+------------------------------------+---------------------------------------------+\n; Fitter Status                      ; Successful - Sat Jul 07 07:38:44 2018       ;\n; Quartus Prime Version              ; 16.1.0 Build 196 10/24/2016 SJ Lite Edition ;\n; Revision Name                      ; berzerk_de10_lite                           ;\n; Top-level Entity Name              ; berzerk_de10_lite                           ;\n; Family                             ; MAX 10                                      ;\n; Device                             ; 10M50DAF484C6GES                            ;\n; Timing Models                      ; Preliminary                                 ;\n; Total logic elements               ; 3,277 / 49,760 ( 7 % )                      ;\n;     Total combinational functions  ; 3,043 / 49,760 ( 6 % )                      ;\n;     Dedicated logic registers      ; 886 / 49,760 ( 2 % )                        ;\n; Total registers                    ; 886                                         ;\n; Total pins                         ; 121 / 360 ( 34 % )                          ;\n; Total virtual pins                 ; 0                                           ;\n; Total memory bits                  ; 241,664 / 1,677,312 ( 14 % )                ;\n; Embedded Multiplier 9-bit elements ; 0 / 288 ( 0 % )                             ;\n; Total PLLs                         ; 1 / 4 ( 25 % )                              ;\n; UFM blocks                         ; 0 / 1 ( 0 % )                               ;\n; ADC blocks                         ; 0 / 2 ( 0 % )                               ;\n+------------------------------------+---------------------------------------------+\n-----------------------------\nRequired ROMs (Not included)\n-----------------------------\n\nYou need the following 8 ROMs from berzerk.zip \n\nberzerk_rc31_1c.rom0.1c CRC(ca566dbc) SHA1(fae2647f12f1cd82826db61b53b116a5e0c9f995)\nberzerk_rc31_1d.rom1.1d CRC(7ba69fde) SHA1(69af170c4a39a3494dcd180737e5c87b455f9203)\nberzerk_rc31_3d.rom2.3d CRC(a1d5248b) SHA1(a0b7842f6a5f86c16d80d78e7012c78b3ea11d1d)\nberzerk_rc31_5d.rom3.5d CRC(fcaefa95) SHA1(07f849aa39f1e3db938187ffde4a46a588156ddc)\nberzerk_rc31_6d.rom4.6d CRC(1e35b9a0) SHA1(5a5e549ec0e4803ab2d1eac6b3e7171aedf28244)\nberzerk_rc31_5c.rom5.5c CRC(c8c665e5) SHA1(e9eca4b119549e0061384abf52327c14b0d56624)\nberzerk_r_vo_1c.1c      CRC(2cfe825d) SHA1(f12fed8712f20fa8213f606c4049a8144bfea42e)\nberzerk_r_vo_2c.2c      CRC(d2b6324e) SHA1(20a6611ad6ec19409ac138bdae7bdfaeab6c47cf)\n\n------\nTools \n------\nYou need to build vhdl ROM image files from the binary file :\n - Unzip the roms file in the tools/berzerk_unzip directory\n - Double click (execute) the script tools/berzerk_unzip/make_berzerk_proms.bat to get the following files\n\nberzerk_program1.vhd\nberzerk_program2.vhd\n\n*DO NOT REDISTRIBUTE THESE FILES*\n\nThe script make_berzerk_proms uses make_vhdl_prom and and duplicate_byte executables delivered both in linux and windows version. The script itself is delivered only in windows version (.bat) but should be easily ported to linux.\n\nSource code of make_vhdl_prom.c and and duplicate_byte.c is also delivered.\n\n---------------------------------\nCompiling for de10_lite\n---------------------------------\nYou can rebuild the project with ROM image embeded in the sof file. DO NOT REDISTRIBUTE THESE FILES.\n4 steps\n\n - put the VHDL rom files into the project directory\n - rebuild berzerk_de10_lite\n - program berzerk_de10_lite.sof into the fpga \n\n------------------------\nEnd of file\n------------------------\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Berzerk_MiSTer",
      "releases": [
        {
          "name": "Arcade-Berzerk_20200216.rbf",
          "sha": "46522d4f2acecbf7efa38ae8a5ffe7a9856b17ca",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Berzerk_MiSTer/master/releases/Arcade-Berzerk_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Berzerk_20200222.rbf",
          "sha": "7bf98dc6f426c395a78680945c26e7383e589d01",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Berzerk_MiSTer/master/releases/Arcade-Berzerk_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Berzerk_20200223.rbf",
          "sha": "368b352d1d955cec5e323ba323bcbe37501a05f3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Berzerk_MiSTer/master/releases/Arcade-Berzerk_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Berzerk_20200408.rbf",
          "sha": "d476883a992c03a5acb7caea42573a6b9523a8fd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Berzerk_MiSTer/master/releases/Arcade-Berzerk_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Berzerk_20200419.rbf",
          "sha": "10f43b651b28d1143ca6cc8627532839977b3f74",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Berzerk_MiSTer/master/releases/Arcade-Berzerk_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Berzerk.mra",
          "sha": "175ea792c648a3da64cdc57cd7bc6b82769aa496",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Berzerk_MiSTer/master/releases/Berzerk.mra",
          "type": "MRA",
          "extra": {
            "name": "Berzerk (revision RC31A)",
            "rbf": "berzerk",
            "zips": [
              "berzerk.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-BlackWidow_MiSTer",
      "description": "Atari Black Widow Vector on MiSTer",
      "readme": "# Black Widow\n\nFPGA implementation of [Atari Black Widow](http://spritesmods.com/?art=bwidow_fpga) by Jeroen Domburg with help from james10952001 \nRasterizer by Dave Woo and fpgaarcade.com\nPort to MiSTer by Alan Steremberg\n\nThis game used two joysticks. If you hook it to an ipac/jpac style adapter, it will use joystick 1 and 2. You can use the MiSTer OSD to\nmap the joystick buttons for the second joystick to the digital buttons on the gamepad.\n\n# Keyboard inputs :\n```\n   F1                        : Coin + Start 1P\n   F2                        : Coin + Start 2P\n   UP,DOWN,LEFT,RIGHT arrows : move spider\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Players\n     R,F,D,G     : Right joystick motion\n   \n\n Joystick support. Make sure to setup the keys specifically for this. It will use 4 buttons for a second digital joypad.\n```\n \n# ROMs\n```\n```\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-BlackWidow_MiSTer",
      "releases": [
        {
          "name": "Arcade-BlackWidow_20200229.rbf",
          "sha": "264ad261d42339cabe78743e3cc5c2bafa7f924f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BlackWidow_MiSTer/master/releases/Arcade-BlackWidow_20200229.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-BlackWidow_20200408.rbf",
          "sha": "daba2e14cc5701c3d9efc50a7d64666940ef8ce0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BlackWidow_MiSTer/master/releases/Arcade-BlackWidow_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-BlackWidow_20200419.rbf",
          "sha": "bf8cda411b575c761e8d6d72ba47714662772f90",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BlackWidow_MiSTer/master/releases/Arcade-BlackWidow_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Black Widow.mra",
          "sha": "5ff7ddfdce7828314748f9a999ca69fc3f4e8867",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BlackWidow_MiSTer/master/releases/Black%20Widow.mra",
          "type": "MRA",
          "extra": {
            "name": "Black Widow",
            "rbf": "BlackWidow",
            "zips": [
              "bwidow.zip"
            ]
          }
        },
        {
          "name": "Gravitar.mra",
          "sha": "43a4b389f49a555edcb7c1b4fe55c16b702f6356",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BlackWidow_MiSTer/master/releases/Gravitar.mra",
          "type": "MRA",
          "extra": {
            "name": "Gravitar (version 3)",
            "rbf": "BlackWidow",
            "zips": [
              "gravitar.zip"
            ]
          }
        },
        {
          "name": "Lunar Battle.mra",
          "sha": "6c255763690f74cbc24a9754b6b74438f8a3a5fc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BlackWidow_MiSTer/master/releases/Lunar%20Battle.mra",
          "type": "MRA",
          "extra": {
            "name": "Lunar Battle (prototype, later)",
            "rbf": "BlackWidow",
            "zips": [
              "lunarbat.zip|gravitar.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-BombJack_MiSTer",
      "description": "Arcade: Bomb Jack for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Bomb Jack port to MiSTer by Sorgelig\n-- 03 November 2017\n-- \n---------------------------------------------------------------------------------\n-- Bomb Jack implementation in FPGA. Author: Alex \n-- http://papilio.cc/index.php?n=Playground.BombJack\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Insert the coin + Start 2 players\n--   F1          : Insert the coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Jump\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Jump\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-BombJack_MiSTer",
      "releases": [
        {
          "name": "Arcade-BombJack_20200221.rbf",
          "sha": "354c6f7eedda8a3071432e5d45111a64335821e5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BombJack_MiSTer/master/releases/Arcade-BombJack_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-BombJack_20200222.rbf",
          "sha": "0fe4346f63637fb7b2da570fbc97d2271c244804",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BombJack_MiSTer/master/releases/Arcade-BombJack_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-BombJack_20200408.rbf",
          "sha": "bab1a3d9a2365c92d34e67fc3eb256fcfd4b19d5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BombJack_MiSTer/master/releases/Arcade-BombJack_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-BombJack_20200419.rbf",
          "sha": "e5abe8d625a4df866e8412cf4146ee741ea72471",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BombJack_MiSTer/master/releases/Arcade-BombJack_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Bomb Jack.mra",
          "sha": "209e6aa5a37c577eeec513d300401dd435b33965",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BombJack_MiSTer/master/releases/Bomb%20Jack.mra",
          "type": "MRA",
          "extra": {
            "name": "Bomb Jack (set 1)",
            "rbf": "bombjack",
            "zips": [
              "bombjack.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-BurgerTime_MiSTer",
      "description": "Arcade: Burger Time for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Burger Time port to MiSTer by Sorgelig\n-- 30 December 2017\n-- \n---------------------------------------------------------------------------------\n---------------------------------------------------------------------------------\n-- Burger Time by Dar (darfpga@aol.fr) (27/12/2017)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd & io_ps2_keyboard\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T65(b) core.Ver 301 by MikeJ March 2005\n-- Latest version from www.fpgaarcade.com (original www.opencores.org)\n---------------------------------------------------------------------------------\n-- YM2149 (AY-3-8910)\n-- Copyright (c) MikeJ - Jan 2005\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Start 2 players\n--   F1          : Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE,CTRL  : Pepper\n--\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Pepper\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-BurgerTime_MiSTer",
      "releases": [
        {
          "name": "Arcade-BurgerTime_20200509.rbf",
          "sha": "96e9f29950c30780d55f505dd66f487d37757609",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BurgerTime_MiSTer/master/releases/Arcade-BurgerTime_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Burger Time.mra",
          "sha": "ce2e0bcaba95ef9e0bb5b1abc4e6aa1f3cd7c774",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BurgerTime_MiSTer/master/releases/Burger%20Time.mra",
          "type": "MRA",
          "extra": {
            "name": "Burger Time (Data East set 1)",
            "rbf": "burgertime",
            "zips": [
              "btime.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-BurningRubber_MiSTer",
      "description": "Arcade: Burning Rubber for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Burning Rubber port to MiSTer by Sorgelig\n-- 30 December 2017\n-- \n---------------------------------------------------------------------------------\n-- burnin rubber by Dar (darfpga@aol.fr) (05/12/2017)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd & io_ps2_keyboard\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T65(b) core.Ver 301 by MikeJ March 2005\n-- Latest version from www.fpgaarcade.com (original www.opencores.org)\n---------------------------------------------------------------------------------\n-- YM2149 (AY-3-8910)\n-- Copyright (c) MikeJ - Jan 2005\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Start 2 players\n--   F1          : Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE,CTRL  : Jump\n--\n-- Player 2 keys not working?\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-BurningRubber_MiSTer",
      "releases": [
        {
          "name": "Arcade-BurningRubber_20200508.rbf",
          "sha": "1b525f5281e095f82ad4ab68c38fbbbf82e506a1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BurningRubber_MiSTer/master/releases/Arcade-BurningRubber_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "BurningRubber.mra",
          "sha": "14014a4ff32693e901ff3b1ae56e532b93455681",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-BurningRubber_MiSTer/master/releases/BurningRubber.mra",
          "type": "MRA",
          "extra": {
            "name": "Burnin' Rubber",
            "rbf": "burningrubber",
            "zips": [
              "brubber.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-CanyonBomber_MiSTer",
      "description": "FPGA implementation of Canyon Bomber arcade game released by Atari in 1977",
      "readme": "# CanyonBomber\nFPGA implementation by james10952001 of Canyon Bomber arcade game released by Kee Games in 1978\nPort to MiSTer by Alan Steremberg\n\n# Keyboard inputs :\n```\n   F1          : Coin + Start 1P\n   F2          : Coin + Start 2P\n   ctrl, space : Fire\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Players\n     A           : Player 2 Fire\n\n\n Joystick support. (Converts the digital joystick to a simulated quadrature encoding)\n```\n\n\nInitial release:\n-- There is still some cleanup of the code that can be done and a minor bug where occasionally there is a small glitch in the motion object as a ship hits the edge of the screen. I am not abslutely certain at this time that this is specific to the FPGA version and not a bug in the original hardware or code. \n\n# ROMs\n```\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n```\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-CanyonBomber_MiSTer",
      "releases": [
        {
          "name": "Arcade-CanyonBomber_20200509.rbf",
          "sha": "614bd433afc26caf876bb57e1f46df32e001d445",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CanyonBomber_MiSTer/master/releases/Arcade-CanyonBomber_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Canyon Bomber.mra",
          "sha": "63623ac79fa63d06233e2505b6d6ed11176276da",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CanyonBomber_MiSTer/master/releases/Canyon%20Bomber.mra",
          "type": "MRA",
          "extra": {
            "name": "Canyon Bomber",
            "rbf": "canyonbomber",
            "zips": [
              "canyon.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Centipede_MiSTer",
      "description": "Centipede Arcade",
      "readme": "# Centipede\n\nFPGA implementation by lisper of [Centipede](https://github.com/lisper/arcade-centipede \"Centipede\") arcade game \nPort to MiSTer by Alan Steremberg\n\n# Keyboard inputs :\n```\n   F1          : Coin + Start 1P\n   F2          : Coin + Start 2P\n   LEFT,RIGHT,UP,DOWN  arrows : Steering\n   Space,Ctrl  : Fire\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Players\n     R,F,D,G     : Player 2 Movements\n     A           : Player 2 Fire\n   \n\n Joystick support. \n```\n\n# Known Problems\n\nNot sure the colors are quite right.\n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n```\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Centipede_MiSTer",
      "releases": [
        {
          "name": "Arcade-Centipede_20200216.rbf",
          "sha": "18fade47f3bd47ed9bbf2191ab804e3eea1c3f08",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Centipede_MiSTer/master/releases/Arcade-Centipede_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Centipede_20200222.rbf",
          "sha": "5fc04d5ecd71c13150e5b76717dd06b52b7846b0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Centipede_MiSTer/master/releases/Arcade-Centipede_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Centipede_20200223.rbf",
          "sha": "7489cf8f29a306f376fa5aa317dd59a41aa76dca",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Centipede_MiSTer/master/releases/Arcade-Centipede_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Centipede_20200408.rbf",
          "sha": "a1a2e9b9aad1e37c06239736ee6ff0890d3b958f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Centipede_MiSTer/master/releases/Arcade-Centipede_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Centipede_20200418.rbf",
          "sha": "e36ba2aaddcc93cf605bf7c7f09ae855b66667e5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Centipede_MiSTer/master/releases/Arcade-Centipede_20200418.rbf",
          "type": "RBF"
        },
        {
          "name": "Centipede.mra",
          "sha": "e294606ed014e4637fa11d309cbb9bb01deb6672",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Centipede_MiSTer/master/releases/Centipede.mra",
          "type": "MRA",
          "extra": {
            "name": "Centipede (revision 4)",
            "rbf": "centipede",
            "zips": [
              "centiped.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-ComputerSpace_MiSTer",
      "description": "Arcade: Computer Space for MiSTer",
      "readme": "---------------------------------------------------------------------------------\r\n-- \r\n-- Arcade: Computer Space - World first commercial arcade!\r\n-- Port to MiSTer by Sorgelig\r\n-- 07 November 2017\r\n-- \r\n---------------------------------------------------------------------------------\r\n-- \r\n-- Computer Space by Mattias G (2015)\r\n-- \r\n---------------------------------------------------------------------------------\r\n-- \r\n-- \r\n-- Keyboard inputs :\r\n--\r\n--   F1          : Start\r\n--   SPACE       : Thrust\r\n--   RIGHT/LEFT  : Turn\r\n--   CTRL        : Fire\r\n--\r\n-- Joystick support.\r\n-- \r\n-- \r\n---------------------------------------------------------------------------------\r\n\r\n                                *** Attention ***\r\n\r\nROMs are not included. In order to use this arcade, you need to provide the\r\ncorrect ROMs.\r\n\r\nTo simplify the process .mra files are provided in the releases folder, that\r\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\r\ncorresponding file of the M.A.M.E. project.\r\n\r\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\r\ninformation on how to setup and use the environment.\r\n\r\nQuickreference for folders and file placement:\r\n\r\n/_Arcade/<game name>.mra\r\n/_Arcade/cores/<game rbf>.rbf\r\n/_Arcade/mame/<mame rom>.zip\r\n/_Arcade/hbmame/<hbmame rom>.zip\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-ComputerSpace_MiSTer",
      "releases": [
        {
          "name": "Arcade-ComputerSpace_20200509.rbf",
          "sha": "ebc4681a7d5703433bf3d19fbf7445b5637dd968",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ComputerSpace_MiSTer/master/releases/Arcade-ComputerSpace_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Computer Space.mra",
          "sha": "27f641de33849ac39bc90142a89d2da40da54232",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ComputerSpace_MiSTer/master/releases/Computer%20Space.mra",
          "type": "MRA",
          "extra": {
            "name": "Computer Space",
            "rbf": "computerspace",
            "zips": []
          }
        }
      ]
    },
    {
      "name": "Arcade-CosmicAvenger_MiSTer",
      "description": "Arcade: Cosmic Avenger for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Cosmic Avenger port to MiSTer by Sorgelig\n-- 14 November 2017\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Lady Bug hardware\n-- Unknown Author on Papilio Plus board.\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2    : Coin + Start 2 players\n--   F1    : Coin + Start 1 player\n--   CTRL  : Fire\n--   SPACE : Bomb\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--   S           : Player 2 Bomb\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-CosmicAvenger_MiSTer",
      "releases": [
        {
          "name": "Arcade-CosmicAvenger_20200509.rbf",
          "sha": "ef1d9d461cbafb4c2c395f39eb0f8c9aa6e67c71",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CosmicAvenger_MiSTer/master/releases/Arcade-CosmicAvenger_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Cosmic Avenger.mra",
          "sha": "5de23d6de3e7c4bb6cbfa7148fdc5eac42255e76",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CosmicAvenger_MiSTer/master/releases/Cosmic%20Avenger.mra",
          "type": "MRA",
          "extra": {
            "name": "Cosmic Avenger",
            "rbf": "cosmicavenger",
            "zips": [
              "cavenger.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-CrazyBalloon_MiSTer",
      "description": "Taito Crazy Balloon ",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade version of Astrocade for MiSTer - Mike Coates\n--\n-- V 1.0 15/06/2020 - Mike Coates\n---------------------------------------------------------------------------------\n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-CrazyBalloon_MiSTer",
      "releases": [
        {
          "name": "Arcade-CrazyBalloon_20200615.rbf",
          "sha": "bfcb704d187ebd1a452fcaad2663477adbe0f04a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyBalloon_MiSTer/master/releases/Arcade-CrazyBalloon_20200615.rbf",
          "type": "RBF"
        },
        {
          "name": "Crazy Balloon.mra",
          "sha": "4d43ee8cd66c60d87c7ed81fc502d2b619df5b68",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyBalloon_MiSTer/master/releases/Crazy%20Balloon.mra",
          "type": "MRA",
          "extra": {
            "name": "Crazy Balloon",
            "rbf": "CrazyBalloon",
            "zips": [
              "crbaloon.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-CrazyClimber_MiSTer",
      "description": "Arcade: Crazy Climber for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Crazy Climber port to MiSTer by Sorgelig\n-- 7 June 2018\n-- \n---------------------------------------------------------------------------------\n-- Crazy climber FPGA by Dar - (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F1          : Add coin + Start 1 player\n--   F2          : Add coin + Start 2 players\n--   W,A,S,D     : Left hand movements\n--   UP,DOWN,LEFT,RIGHT arrows : Right hand movements\n--\n--   5,6 : Add coin\n--   1,2 : Start Player 1, Player 2\n--\n-- Joystick/Gamepad support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-CrazyClimber_MiSTer",
      "releases": [
        {
          "name": "Arcade-CrazyClimber_20200509.rbf",
          "sha": "cd9d4210497c0074f22023f1d96ddad09ead9ca5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyClimber_MiSTer/master/releases/Arcade-CrazyClimber_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Crazy Climber.mra",
          "sha": "e59db005db100d32677cb838614b61e090bf8c33",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyClimber_MiSTer/master/releases/Crazy%20Climber.mra",
          "type": "MRA",
          "extra": {
            "name": "Crazy Climber (US set 1)",
            "rbf": "crazyclimber",
            "zips": [
              "cclimber.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-CrazyKong_MiSTer",
      "description": "Arcade: Crazy Kong for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Crazy Kong port to MiSTer by Sorgelig\n-- 24 October 2017\n-- \n---------------------------------------------------------------------------------\n-- Crazy Kong (Falcon) FPGA - DAR - 2014\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F1          : Coin + Start\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Jump\n--\n-- TODO: player two support doesn't work corectly\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-CrazyKong_MiSTer",
      "releases": [
        {
          "name": "Arcade-CrazyKong_20200508.rbf",
          "sha": "3be506909e6ed1057454b0fafa1897181b37a343",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyKong_MiSTer/master/releases/Arcade-CrazyKong_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "Big Kong.mra",
          "sha": "30c70a5bc444f417e825a24c8d74563da2e377c2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyKong_MiSTer/master/releases/Big%20Kong.mra",
          "type": "MRA",
          "extra": {
            "name": "Big Kong",
            "rbf": "CrazyKong",
            "zips": [
              "ckong.zip"
            ]
          }
        },
        {
          "name": "Crazy Kong (Orca bootleg).mra",
          "sha": "e6d11d5f6227d048a9799e0ddcedaf208b0d0d66",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyKong_MiSTer/master/releases/Crazy%20Kong%20(Orca%20bootleg).mra",
          "type": "MRA",
          "extra": {
            "name": "Crazy Kong (Orca bootleg)",
            "rbf": "CrazyKong",
            "zips": [
              "ckong.zip"
            ]
          }
        },
        {
          "name": "Crazy Kong Part II.mra",
          "sha": "2175257782aec7acd9798f5bc306f1f8883beffd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-CrazyKong_MiSTer/master/releases/Crazy%20Kong%20Part%20II.mra",
          "type": "MRA",
          "extra": {
            "name": "Crazy Kong Part II (set 1)",
            "rbf": "crazykong",
            "zips": [
              "ckongpt2.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Defender_MiSTer",
      "description": "Arcade: Defender for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- Arcade: Defender port to MiSTer by Sorgelig\n-- 22 October 2017\n-- \n---------------------------------------------------------------------------------\n-- Defender by Dar (darfpga@aol.fr) (10 October 2017)\n-- http://darfpga.blogspot.fr\n--\n---------------------------------------------------------------------------------\n-- gen_ram.vhd\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- cpu09l - Version : 0128\n-- Synthesizable 6809 instruction compatible VHDL CPU core\n-- Copyright (C) 2003 - 2010 John Kent\n---------------------------------------------------------------------------------\n-- cpu68 - Version 9th Jan 2004 0.8\n-- 6800/01 compatible CPU core \n-- GNU public license - December 2002 : John E. Kent\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard players inputs :\n--\n--   F3 : Add coin\n--   F2 : Start 2 players\n--   F1 : Start 1 player\n--   SPACE            : Fire  \n--   RIGHT/LEFT arrow : Thrust\n--   UP    arrow : Move up \n--   DOWN  arrow : Move down\n--   SHIFT       : Reverse ship direction\n--   CTRL        : Smart bomb\n--   W           : Hyperspace\n--\n-- Keyboard Service inputs :\n--\n--   A : advance\n--   U : auto/up (!manual/down)\n--   H : high score reset\n--\n-- Mame Keys\n--  1 : Start 1 Player\n--  2 : Start 2 Player\n-- 5,6: Add coin\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Defender_MiSTer",
      "releases": [
        {
          "name": "Arcade-Defender_20200221.rbf",
          "sha": "6561498aaaa5fc9e2dfadb269d1ee35408127e59",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Arcade-Defender_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Defender_20200222.rbf",
          "sha": "68ca0130306920ecf886f3baae9fe825920c574c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Arcade-Defender_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Defender_20200408.rbf",
          "sha": "188be5e7fed58686b453b37eec89e93619a904aa",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Arcade-Defender_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Defender_20200419.rbf",
          "sha": "d7e7ee672e15e8ebbed9777b1eeed57ce11055fa",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Arcade-Defender_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Colony 7.mra",
          "sha": "dcd2324f7a67655d83401871d81767033d2866e2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Colony%207.mra",
          "type": "MRA",
          "extra": {
            "name": "Colony 7 (set 1)",
            "rbf": "defender",
            "zips": [
              "colony7.zip"
            ]
          }
        },
        {
          "name": "Defender.mra",
          "sha": "1996320d5e31c5ceb7657ba7c4d3baf42d7ae723",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Defender.mra",
          "type": "MRA",
          "extra": {
            "name": "Defender (Red label)",
            "rbf": "defender",
            "zips": [
              "defender.zip"
            ]
          }
        },
        {
          "name": "Jin.mra",
          "sha": "00d2a338d080374e5129cf8717a02e9f86dadd81",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Jin.mra",
          "type": "MRA",
          "extra": null
        },
        {
          "name": "Mayday.mra",
          "sha": "cb7f68f17289772dcc6759f67e022b067b091a31",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Defender_MiSTer/master/releases/Mayday.mra",
          "type": "MRA",
          "extra": {
            "name": "Mayday (set 1)",
            "rbf": "defender",
            "zips": [
              "mayday.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-DigDug_MiSTer",
      "description": "Dig Dug for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: DigDug  port to MiSTer by MiSTer-X\n-- 21 September 2019\n-- From: https://github.com/MrX-8B/MiSTer-Arcade-DigDug\n--\n---------------------------------------------------------------------------------\n-- FPGA DigDug for XILINX Spartan-6\n------------------------------------------------\n-- Copyright (c) 2017 MiSTer-X\n---------------------------------------------------------------------------------\n-- T80/T80s - Version : 0242\n-----------------------------\n-- TV80 8-Bit Microprocessor Core\n-- Based on the VHDL T80 core by Daniel Wallner (jesus@opencores.org)\n--\n-- Copyright (c) 2004 Guy Hutchison (ghutchis@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE/CTRL  : Pump\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A/S         : Player 2 Pump\n--\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n-- 21 September 2019\n---------------------------------------------------------------------------------\n--   FIXED: wrong aspect ratio in \"Vert\" mode. \n---------------------------------------------------------------------------------\n-- 24 October 2019\n---------------------------------------------------------------------------------\n--   FIXED: Little problem with CRT and HDMI.\n-- CHANGED: Keyboard inputs.\n--          Abolished rotation of control direction in Horz mode.\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-DigDug_MiSTer",
      "releases": [
        {
          "name": "Arcade-DigDug_20200506.rbf",
          "sha": "3772515e16ab882d6f6d3da69587be87fccdf750",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DigDug_MiSTer/master/releases/Arcade-DigDug_20200506.rbf",
          "type": "RBF"
        },
        {
          "name": "Dig Dug.mra",
          "sha": "e2aee2387aefbb567f2f52f181b9e4eac2b8a90d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DigDug_MiSTer/master/releases/Dig%20Dug.mra",
          "type": "MRA",
          "extra": {
            "name": "Dig Dug (rev 2)",
            "rbf": "digdug",
            "zips": [
              "digdug.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "91c0108177aacb889d67263d530c0e128350b08d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DigDug_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-Dominos_MiSTer",
      "description": "FPGA implementation of Dominos arcade game released by Atari in 1977",
      "readme": "# Dominos\nFPGA implementation by james10952001 of [Dominos](https://github.com/james10952001/Dominos \"Dominos\") arcade game released by Atari in 1977\n\nPort to MiSTer by Alan Steremberg\n\n# Keyboard inputs :\n```\n   F1          : Coin + Start 1P\n   F2          : Coin + Start 2P\n   UP,DOWN,LEFT,RIGHT arrows : Controls\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Players\n     R,F,D,G     : Player 2 Movements\n\n Joystick support. (two supported)\n```\n \n# ROMs\n```\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n```\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Dominos_MiSTer",
      "releases": [
        {
          "name": "Arcade-Dominos_20200509.rbf",
          "sha": "9cf5a092e876e5c9aae3f6f7dcc28c2f949573b8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Dominos_MiSTer/master/releases/Arcade-Dominos_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Dominos.mra",
          "sha": "93c864cda6b5f8400624f48bd35f62bb3ed95889",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Dominos_MiSTer/master/releases/Dominos.mra",
          "type": "MRA",
          "extra": {
            "name": "Dominos",
            "rbf": "dominos",
            "zips": [
              "dominos.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-DonkeyKong_MiSTer",
      "description": "Arcade: Donkey Kong for MiSTer",
      "readme": "---------------------------------------------------------------------------------\r\n-- \r\n-- Arcade: Donkey Kong port to MiSTer by Sorgelig\r\n-- 18 April 2018\r\n-- \r\n---------------------------------------------------------------------------------\r\n-- \r\n-- dkong Copyright (c) 2003 - 2004 Katsumi Degawa\r\n-- T80   Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org) All rights reserved\r\n-- T48   Copyright (c) 2004, Arnim Laeuger (arniml@opencores.org) All rights reserved\r\n-- \r\n---------------------------------------------------------------------------------\r\n-- \r\n-- Support screen and controls rotation on HDMI output.\r\n-- Only controls are rotated on VGA output.\r\n-- \r\n-- \r\n-- Keyboard inputs :\r\n--\r\n--   F1          : Coin + Start 1P\r\n--   F2          : Coin + Start 2P\r\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\r\n--   SPACE       : Jump\r\n--\r\n-- Joystick support.\r\n-- \r\n-- \r\n---------------------------------------------------------------------------------\r\n\r\n                                *** Attention ***\r\n\r\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\r\n\r\nFind this zip file somewhere. You need to find the file exactly as required.\r\nDo not rename other zip files even if they also represent the same game - they are not compatible!\r\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\r\nhashes and contained files there.\r\n\r\nTo generate the ROM using Windows:\r\n1) Copy the zip into \"releases\" directory\r\n2) Execute bat file - it will show the name of zip file containing required files.\r\n3) Put required zip into the same directory and execute the bat again.\r\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\r\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\r\n\r\nTo generate the ROM using Linux/MacOS:\r\n1) Copy the zip into \"releases\" directory\r\n2) Execute build_rom.sh\r\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\r\n\r\nTo generate the ROM using MiSTer:\r\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\r\n2) Using OSD execute build_rom.sh\r\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer",
      "releases": [
        {
          "name": "Arcade-DonkeyKong_20200215.rbf",
          "sha": "18007087f511bf480fcf74751312975a6d372cea",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer/master/releases/Arcade-DonkeyKong_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-DonkeyKong_20200216.rbf",
          "sha": "25f0f494ed6af26099bda289e379d7d6c2922703",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer/master/releases/Arcade-DonkeyKong_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-DonkeyKong_20200222.rbf",
          "sha": "b8dc458bf2ea64d755fc52fd0f91145f5bbd2bf3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer/master/releases/Arcade-DonkeyKong_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-DonkeyKong_20200223.rbf",
          "sha": "373bd3ccb4b4d89d7cf87e5aaf970c32d6074e1e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer/master/releases/Arcade-DonkeyKong_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-DonkeyKong_20200408.rbf",
          "sha": "117536efbd39fed57aa5ccd07c826775c8e76ff8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer/master/releases/Arcade-DonkeyKong_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-DonkeyKong_20200417.rbf",
          "sha": "5b76e1b5b9933ad49f02d1b9b3db74e59ecc9d42",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer/master/releases/Arcade-DonkeyKong_20200417.rbf",
          "type": "RBF"
        },
        {
          "name": "Donkey Kong.mra",
          "sha": "aa42b33b1482603133017bc641885834e22e5d9c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-DonkeyKong_MiSTer/master/releases/Donkey%20Kong.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "DonkeyKong",
            "zips": [
              "dkong.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Dorodon_MiSTer",
      "description": "Arcade: Dorodon for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Dorodon port to MiSTer by Sorgelig\n-- 14 November 2017\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Lady Bug hardware\n-- Unknown Author on Papilio Plus board.\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2  : Coin + Start 2 players\n--   F1  : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Dorodon_MiSTer",
      "releases": [
        {
          "name": "Arcade-Dorodon_20200509.rbf",
          "sha": "107935aa37d6962a766aef7e3b91f323548edc16",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Dorodon_MiSTer/master/releases/Arcade-Dorodon_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Dorodon.mra",
          "sha": "c4592cfdeb36ef96027023fc0547e39c005d1479",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Dorodon_MiSTer/master/releases/Dorodon.mra",
          "type": "MRA",
          "extra": {
            "name": "Dorodon (set 1)",
            "rbf": "dorodon",
            "zips": [
              "dorodon.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Druaga_MiSTer",
      "description": "The Tower of Druaga for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: The Tower of Druaga  port to MiSTer by MiSTer-X\n-- 24 October 2019\n-- From: https://github.com/MrX-8B/MiSTer-Arcade-Druaga\n-- \n---------------------------------------------------------------------------------\n-- FPGA Druaga for XILINX Spartan-3\n--------------------------------------\n-- Copyright (c) 2007 MiSTer-X\n---------------------------------------------------------------------------------\n-- Cycle-Accurate 6809 Core\n-- Revision 1.0 - 13th August 2016\n---------------------------------------------------\n-- Copyright (c) 2016, Greg Miller\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Trig1\n--   CTRL        : Trig2\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Trig1\n--   S           : Player 2 Trig2\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Druaga_MiSTer",
      "releases": [
        {
          "name": "Arcade-Druaga_20200215.rbf",
          "sha": "7f9890a79347a3cb7ca6220e563cb7caa7fd0c45",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Arcade-Druaga_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Druaga_20200216.rbf",
          "sha": "25dd86846114f476a52fb6844f961ffa16f91c5c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Arcade-Druaga_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Druaga_20200222.rbf",
          "sha": "fab665d7ea4180a9bae11472842b1772184d15de",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Arcade-Druaga_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Druaga_20200223.rbf",
          "sha": "48f91c77a4a5f76e99c03af86cc9a484d0f55699",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Arcade-Druaga_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Druaga_20200408.rbf",
          "sha": "e376a0523aed30b6e7d1c894b99a8e26c0ace233",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Arcade-Druaga_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Druaga_20200418.rbf",
          "sha": "ddd6929bcd8387a714288d7ae3e96956011190f8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Arcade-Druaga_20200418.rbf",
          "type": "RBF"
        },
        {
          "name": "DigDug2.mra",
          "sha": "f3bc51873457fc18c5ce4f1e121ff3c671cffb15",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/DigDug2.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "Druaga",
            "zips": [
              "digdug2.zip"
            ]
          }
        },
        {
          "name": "Druaga.mra",
          "sha": "f7167764f3d1f78552a4f0b773ea46897fb1fd05",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Druaga.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "Druaga",
            "zips": [
              "todruaga.zip"
            ]
          }
        },
        {
          "name": "Mappy.mra",
          "sha": "c03697972ea0d89a687c986a2b4ab996fe82d8d3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Mappy.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "Druaga",
            "zips": [
              "mappy.zip"
            ]
          }
        },
        {
          "name": "Motos.mra",
          "sha": "cd879d72739c01fd27df1864e84cdfe25a524f43",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/Motos.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "Druaga",
            "zips": [
              "motos.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "c2f4717aabc9503ad759dbfb438c9a2d4a89c730",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Druaga_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-FoodFight_MiSTer",
      "description": "Arcade: Food Fight for MiSTer",
      "readme": "--------------------------------------------------------------------------------------------------------------\n-- \n-- Arcade: Food Fight  for MiSTer by MiSTer-X\n-- 26 November 2019\n--\n-- https://github.com/MrX-8B/MiSTer-Arcade-FoodFight\n-- \n--------------------------------------------------------------------------------------------------------------\n-- MC68000 compatible softcore\n----------------------------------------------------------------------\n-- TG68 Revision 1.08\n-- Copyright (c) 2007-2010 Tobias Gubener <tobiflex@opencores.org>  \n--------------------------------------------------------------------------------------------------------------\n-- Pokey\n----------------------------------------------------------------------\n-- (c) 2013 mark watson\n--------------------------------------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE,CTRL  : Throw\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A,S         : Player 2 Throw\n--\n--\n-- Highly recommend use an analog joystick.\n-- For a digital joystick or keyboard, turn on the \"Pseudo Analog Stick\" in the OSD.\n--\n-- Immediately after boot, turn the stick several times on the demo screen or in the game for calibration.\n--\n--------------------------------------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-FoodFight_MiSTer",
      "releases": [
        {
          "name": "Arcade-FoodFight_20200509.rbf",
          "sha": "1dd82740de2e27fda937ec3194f1140f2f2b8641",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-FoodFight_MiSTer/master/releases/Arcade-FoodFight_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Food Fight.mra",
          "sha": "321ba4a6dd1346d8c8fd1e2d94d6d2f2ac844245",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-FoodFight_MiSTer/master/releases/Food%20Fight.mra",
          "type": "MRA",
          "extra": {
            "name": "Food Fight (rev 3)",
            "rbf": "foodfight",
            "zips": [
              "foodf.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "34feb556410e3f67dd7484dc1d63147e49aa1b18",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-FoodFight_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-Frenzy_MiSTer",
      "description": "Frenzy Arcade Game",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Frenzy Port to MiSTer\n-- 24 March 2019\n-- \n---------------------------------------------------------------------------------\n-- Frenzy FPGA by Dar - (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   Space,Ctrl  : Fire\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--   \n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n\n\n\n-------------------------------------------------\n-- Berzerk FPGA by Dar - (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n-------------------------------------------------\n-- Berzerk releases\n--\n-- Release 0.0 - 07/07/2018 - Dar\n-------------------------------------------------\nEducational use only\nDo not redistribute synthetized file with roms\nDo not redistribute roms whatever the form\nUse at your own risk\n--------------------------------------------------------------------\nmake sure to use berzerk.zip roms \n--------------------------------------------------------------------\n--\n-- Main features :\n--  PS2 keyboard input @gpio pins 35/34 (beware voltage translation/protection) \n--  Audio pwm output   @gpio pins 1/3 (beware voltage translation/protection) \n--\n-- Uses 1 pll for 10MHz generation from 50MHz\n--\n-- Board key :\n--   0 : reset game\n--\n-- Board switch :\n--\t  1 : tv 15Khz mode / VGA 640x480 mode\n--\n-- Keyboard players inputs :\n--\n--   F3 : Add coin\n--   F2 : Start 2 players\n--   F1 : Start 1 player\n--   SPACE       : fire\n--   RIGHT arrow : move right\n--   LEFT  arrow : move left\n--   UP    arrow : move up \n--   DOWN  arrow : move down\n--\n-- Sound effects : OK\n-- Speech synthesis : todo \n--\n---------------\nVHDL File list \n---------------\n\nmax10_pll_10M.vhd       Pll 10MHz from 50MHz altera mf\n\nberzerk_de10_lite.vhd   Top level for de10-lite board\nberzerk.vhd             Main logic\nberzerk_sound_fx.vhd    Music logic\nberzerk_program1.vhd\nberzerk_program2.vhd\n\nvideo_gen.vhd           Video scheduler, syncs (h,v and composite)\nline_doubler.vhd        Line doubler 15kHz -> 31kHz VGA\n\nkbd_joystick.vhd        Keyboard key to player/coin input\n\nT80se.vhd               T80 release 304  \nT80_Reg.vhd\nT80_Pack.vhd\nT80_MCode.vhd\nT80_ALU.vhd\nT80.vhd\n\nio_ps2_keyboard.vhd     Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\ngen_ram.vhd\n\ndecodeur_7_seg.vhd      for debug\n\n----------------------\nQuartus project files\n----------------------\nde10_lite/berzerk_de10_lite.qsf   de10_lite settings (files,pins,...)\nde10_lite/berzerk_de10_lite.qpf   de10_lite project\nde10_lite/berzerk_de10_lite.sdc   timequest constraints\n\n\n+----------------------------------------------------------------------------------+\n; Fitter Summary                                                                   ;\n+------------------------------------+---------------------------------------------+\n; Fitter Status                      ; Successful - Sat Jul 07 07:38:44 2018       ;\n; Quartus Prime Version              ; 16.1.0 Build 196 10/24/2016 SJ Lite Edition ;\n; Revision Name                      ; berzerk_de10_lite                           ;\n; Top-level Entity Name              ; berzerk_de10_lite                           ;\n; Family                             ; MAX 10                                      ;\n; Device                             ; 10M50DAF484C6GES                            ;\n; Timing Models                      ; Preliminary                                 ;\n; Total logic elements               ; 3,277 / 49,760 ( 7 % )                      ;\n;     Total combinational functions  ; 3,043 / 49,760 ( 6 % )                      ;\n;     Dedicated logic registers      ; 886 / 49,760 ( 2 % )                        ;\n; Total registers                    ; 886                                         ;\n; Total pins                         ; 121 / 360 ( 34 % )                          ;\n; Total virtual pins                 ; 0                                           ;\n; Total memory bits                  ; 241,664 / 1,677,312 ( 14 % )                ;\n; Embedded Multiplier 9-bit elements ; 0 / 288 ( 0 % )                             ;\n; Total PLLs                         ; 1 / 4 ( 25 % )                              ;\n; UFM blocks                         ; 0 / 1 ( 0 % )                               ;\n; ADC blocks                         ; 0 / 2 ( 0 % )                               ;\n+------------------------------------+---------------------------------------------+\n-----------------------------\nRequired ROMs (Not included)\n-----------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n---------------------------------\nCompiling for de10_lite\n---------------------------------\nYou can rebuild the project with ROM image embeded in the sof file. DO NOT REDISTRIBUTE THESE FILES.\n4 steps\n\n - put the VHDL rom files into the project directory\n - rebuild berzerk_de10_lite\n - program berzerk_de10_lite.sof into the fpga \n\n------------------------\nEnd of file\n------------------------\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Frenzy_MiSTer",
      "releases": [
        {
          "name": "Arcade-Frenzy_20200509.rbf",
          "sha": "d37dabaa878e1182c33bd25b53be1dbdd3bfc9fc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Frenzy_MiSTer/master/releases/Arcade-Frenzy_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Frenzy.mra",
          "sha": "c479609237f56ee51dfcd1bfc2bb31d4491e8a47",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Frenzy_MiSTer/master/releases/Frenzy.mra",
          "type": "MRA",
          "extra": {
            "name": "Frenzy (revision RA1)",
            "rbf": "frenzy",
            "zips": [
              "frenzy.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Galaga_MiSTer",
      "description": "Arcade: Galaga for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Galaga port to MiSTer by Sorgelig\n-- 23 October 2017\n-- \n---------------------------------------------------------------------------------\n-- Galaga Midway by Dar (darfpga@aol.fr) (29 December 2016)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Fire  \n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Galaga_MiSTer",
      "releases": [
        {
          "name": "Arcade-Galaga_20200216.rbf",
          "sha": "b07e4505b23eb7bef6b59bfcc71f8b83a3fa46d1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaga_MiSTer/master/releases/Arcade-Galaga_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaga_20200222.rbf",
          "sha": "c5c161295cbbe9ca44466c1df72e6c787f56e3b5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaga_MiSTer/master/releases/Arcade-Galaga_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaga_20200223.rbf",
          "sha": "b5cf0c9cd48d1550c462c77d27c9ae1e42c4cab3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaga_MiSTer/master/releases/Arcade-Galaga_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaga_20200408.rbf",
          "sha": "9908ee75f338a820310261b7ab24bf444e02be14",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaga_MiSTer/master/releases/Arcade-Galaga_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaga_20200411.rbf",
          "sha": "a7759aaa5ec79604fe30d4e3da3b19506dc8150f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaga_MiSTer/master/releases/Arcade-Galaga_20200411.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaga_20200418.rbf",
          "sha": "388f7875260056a58a47a9ae9e3dac0886116fec",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaga_MiSTer/master/releases/Arcade-Galaga_20200418.rbf",
          "type": "RBF"
        },
        {
          "name": "Galaga.mra",
          "sha": "dc7debcd6d201f7ed9382564015271bc11118357",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaga_MiSTer/master/releases/Galaga.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "Galaga",
            "zips": [
              "galagamw.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Galaxian_MiSTer",
      "description": "Arcade: Galaxian for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Galaxian port to MiSTer by Sorgelig\n-- 15 November 2017\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Galaxian hardware\n-- Copyright(c) 2004 Katsumi Degawa\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2         : Coin + Start 2 players\n--   F1         : Coin + Start 1 player\n--   SPACE,CTRL : Fire\n--   LEFT,RIGHT : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   D,G         : Player 2 Movements\n--   A           : Player 2 Fire\n--\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Galaxian_MiSTer",
      "releases": [
        {
          "name": "Arcade-Galaxian_20200215.rbf",
          "sha": "1feb51b0b8cf3dfda949956907843a8c5ea16927",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Arcade-Galaxian_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaxian_20200216.rbf",
          "sha": "cbfa666b90a25cb5c964c58b00a705cbe54f4107",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Arcade-Galaxian_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaxian_20200222.rbf",
          "sha": "c60e702084680e3ffeb11555d460d648ad599324",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Arcade-Galaxian_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaxian_20200408.rbf",
          "sha": "280480f25691bac06c2abaf1849caad6cefef5eb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Arcade-Galaxian_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Galaxian_20200417.rbf",
          "sha": "32eb081dfbb5b161d9997d1eb54c50d2431033c3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Arcade-Galaxian_20200417.rbf",
          "type": "RBF"
        },
        {
          "name": "Azurian Attack.mra",
          "sha": "dfa32bf3cf2c5729f35c5662a39b5014eb17ef9c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Azurian%20Attack.mra",
          "type": "MRA",
          "extra": {
            "name": "Azurian Attack",
            "rbf": "galaxian",
            "zips": [
              "azurian.zip"
            ]
          }
        },
        {
          "name": "Black Hole.mra",
          "sha": "b09dd4b60bb83cd41e4a1443b1bb1c089a3d8958",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Black%20Hole.mra",
          "type": "MRA",
          "extra": null
        },
        {
          "name": "Catacomb.mra",
          "sha": "772d3e9c78694b565ddc1f213a803260698620e4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Catacomb.mra",
          "type": "MRA",
          "extra": {
            "name": "Catacomb",
            "rbf": "galaxian",
            "zips": [
              "catacomb.zip"
            ]
          }
        },
        {
          "name": "Devil Fish.mra",
          "sha": "68aa6ae135717efcbd898d6611fccb052f92070f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Devil%20Fish.mra",
          "type": "MRA",
          "extra": {
            "name": "Devil Fish (Galaxian hardware, bootleg)",
            "rbf": "galaxian",
            "zips": [
              "devilfsh.zip",
              "devilfsg.zip",
              "devilfsg.zip"
            ]
          }
        },
        {
          "name": "Galaxian.mra",
          "sha": "c93ff3b973457cc4f9e2aff96f59c919375ca89e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Galaxian.mra",
          "type": "MRA",
          "extra": {
            "name": "Galaxian (Namco set 1)",
            "rbf": "galaxian",
            "zips": [
              "galaxian.zip"
            ]
          }
        },
        {
          "name": "Lucky Today.mra",
          "sha": "f87ff5ea58ac621976273b51b193dbb97ed1ece2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Lucky%20Today.mra",
          "type": "MRA",
          "extra": {
            "name": "Luck Today",
            "rbf": "galaxian",
            "zips": [
              "luctoday.zip"
            ]
          }
        },
        {
          "name": "Moon Cresta.mra",
          "sha": "49d29d733d2d966240172b95b413d9a82a9b5e85",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Moon%20Cresta.mra",
          "type": "MRA",
          "extra": {
            "name": "Moon Cresta (Galaxian hardware)",
            "rbf": "galaxian",
            "zips": [
              "mooncrgx.zip",
              "mooncrst.zip"
            ]
          }
        },
        {
          "name": "Mr. Do Nightmare.mra",
          "sha": "1509393161fe9531c60eb4f191a0421be39e7bdf",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Mr.%20Do%20Nightmare.mra",
          "type": "MRA",
          "extra": {
            "name": "Mr. Do Nightmare",
            "rbf": "galaxian",
            "zips": []
          }
        },
        {
          "name": "Omega.mra",
          "sha": "b19a00d618c5515d679afa225a9bacd16d7f60c0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Omega.mra",
          "type": "MRA",
          "extra": {
            "name": "Omega (bootleg)",
            "rbf": "galaxian",
            "zips": [
              "omegab.zip",
              "theend.zip"
            ]
          }
        },
        {
          "name": "Orbitron.mra",
          "sha": "5d27141751034b23874fa3499d140f0ebec8ff2a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Orbitron.mra",
          "type": "MRA",
          "extra": {
            "name": "Orbitron",
            "rbf": "galaxian",
            "zips": [
              "orbitron.zip"
            ]
          }
        },
        {
          "name": "Pisces.mra",
          "sha": "c394cf9b846bb76064f0216e206f7ec80129eaca",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Pisces.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "galaxian",
            "zips": [
              "pisces.zip"
            ]
          }
        },
        {
          "name": "UniWar S.mra",
          "sha": "3a5c874903c587a955829a141fef28f9bf1fd977",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/UniWar%20S.mra",
          "type": "MRA",
          "extra": {
            "name": "UniWar S",
            "rbf": "galaxian",
            "zips": [
              "uniwars.zip"
            ]
          }
        },
        {
          "name": "Victory.mra",
          "sha": "9a8d1b29e7e1caec8ca9a06b720ede77f7fd5b28",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/Victory.mra",
          "type": "MRA",
          "extra": {
            "name": "Victory (Comsoft) (bootleg)",
            "rbf": "galaxian",
            "zips": [
              "victorycb.zip",
              "victoryc.zip"
            ]
          }
        },
        {
          "name": "War of the Bugs.mra",
          "sha": "885b3586be3ac951ad74205230ffdd6ee5869766",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Galaxian_MiSTer/master/releases/War%20of%20the%20Bugs.mra",
          "type": "MRA",
          "extra": {
            "name": "War of the Bugs or Monsterous Manouvers in a Mushroom Maze",
            "rbf": "galaxian",
            "zips": [
              "warofbug.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Gaplus_MiSTer",
      "description": "Gaplus for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Gaplus  port to MiSTer by MiSTer-X\n-- 26 October 2019\n-- From: https://github.com/MrX-8B/MiSTer-Arcade-Gaplus\n-- \n---------------------------------------------------------------------------------\n-- FPGA Gaplus for XILINX Spartan-3\n--------------------------------------\n-- Copyright (c) 2007 MiSTer-X\n---------------------------------------------------------------------------------\n-- Cycle-Accurate 6809 Core\n-- Revision 1.0 - 13th August 2016\n---------------------------------------------------\n-- Copyright (c) 2016, Greg Miller\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE/CTRL  : Fire\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A/S         : Player 2 Fire\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Gaplus_MiSTer",
      "releases": [
        {
          "name": "Arcade-Gaplus_20200415.rbf",
          "sha": "8dc09bb0d3ca07e51689796cfa06b89ef942c621",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Gaplus_MiSTer/master/releases/Arcade-Gaplus_20200415.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Gaplus_20200419.rbf",
          "sha": "729ae9c7bf602d67b2d682680ac5cfd5024a9b7d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Gaplus_MiSTer/master/releases/Arcade-Gaplus_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Galaga 3 (GP3 rev. D).mra",
          "sha": "79c45f6b1797df7b3980e6c2d065b4f6af5b90c4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Gaplus_MiSTer/master/releases/Galaga%203%20(GP3%20rev.%20D).mra",
          "type": "MRA",
          "extra": {
            "name": "Galaga 3 (GP3 rev. D)",
            "rbf": "gaplus",
            "zips": [
              "galaga3.zip",
              "gaplus.zip"
            ]
          }
        },
        {
          "name": "Gaplus (GP2 rev. B).mra",
          "sha": "7389e681c178a52f1ac129d487b86f77c326be75",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Gaplus_MiSTer/master/releases/Gaplus%20(GP2%20rev.%20B).mra",
          "type": "MRA",
          "extra": {
            "name": "Gaplus (GP2 rev. B)",
            "rbf": "gaplus",
            "zips": [
              "gaplus.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "e2d6bde9de0be17852c630ca681f168a683e4e1d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Gaplus_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-GnG_MiSTer",
      "description": "Arcade Ghosts'n Goblins for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Ghosts'n Goblins for MiSTer ported by Sorgelig\n-- 20 January 2019\n-- \n---------------------------------------------------------------------------------\n-- JT_GNG FPGA Clone of Ghosts'n Goblins by Jose Tejada (@topapate)\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F1         : Start 1 player\n--   F2         : Start 2 players\n--   F3         : Add Coin\n--   SPACE      : Jump\n--   CTRL,ALT   : Fire\n--   UP,DOWN,LEFT,RIGHT : Movements\n--   \n-- Joystick inputs:\n--   Joypad Button 1    : Jump\n--   Joypad Button 2,3  : Fire\n--   UP,DOWN,LEFT,RIGHT : Movements\n--\n-- Note: in continue screen use combo Fire + 1P/2P to continue\n--\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n\n\n***** ORIGINAl README (many things are irrelevant for MiSTer port): *****\n\n\nJT_GNG FPGA Clone of Ghosts'n Goblins by Jose Tejada (@topapate)\n================================================================\n\nYou can show your appreciation through\n    * Patreon: https://patreon.com/topapate\n    * Paypal: https://paypal.me/topapate\n\nYes, you always wanted to have a Ghosts'n Goblins arcade board at home. First you couldn't get it because your parents somehow did not understand you. Then you grow up and your wife doesn't understand you either. Don't worry, MiST is here to the rescue.\n\nWhat you get with this is an extremely accurate (allegedly 100% accurate) clone of the original hardware. You will notice differences from MAME if you compare. Try resetting it and compare those screens for a start! Original hardware handled sound and graphics in a different way from the emulator. There were delays in CPU bus access and other details that will make the experience different from an emulator. Of course, no pause. Just like the real thing!\n\nI hope you will have as much fun with it as I had it while making it!\n\nProject Structure\n=================\n\nThis work has two separate parts:\n\n1. A verilog model of the original hardware, replicated from original schematics. This is found in the hdl folder. Some test benches are available in the \"ver\" (for verification) folder. Data sheets of parts used in the original design are located in the \"doc\" folder. This is interesting to understand how it worked. It can be used to repair broken boards too.\n\n2. A modern clone written in Verilog. It has been made with the MiST board in mind but the game itself (jtgng_game module) is highly portable. All components used aim to be cycle exact -some even sub-cycle exact- so the recreation is the most similar thing to having the original PCB you can get.\n\nModules\n=======\n\nThe FPGA clone uses the following modules:\n\nJT12: For YM2203 sound synthesis. From the same author.\nMC6809 from Greg Miller\nT80: originally from Daniel Wallner, with edits from Alexey Melnikov (Mister)\nhybrid_pwm_sd.v copied from FPGAgen source code. Unknown author\n\nDirectory Structure\n===================\nhdl/        replica of original PCB schematics\nver/        simulation files for original PCB\nmodules     external files used\ndoc         documents related to original PCB\nrom         script to convert from MAME rom files to the required format\n            simulation files expect the rom files here\nmist/       MiST board version of Ghosts'n Goblins.\n            Latest core version is located in this folder and called core.rbf\nmist/hdl    Verilog files of the clone for MiST\nmist/doc    documents related to MiST clone or MiST hardware\nmist/quartus project to synthesize the clone\nmist/ver    simulation files of MiST clone\n\nClone Structure\n===============\n\nThe top level module is called jtgng_mist. This is the module that is really dependent on the board. If you want to port jtgng to a different FPGA board you will need to modify this file. Most other files will likely stay the same\n\nThe game itself in module jtgng_game. It is written using an arbitrary clock (active on positive edge) and a clock enable signal (switching on the negative edge). From jtgng_game down the hierarchy, everything should be highly portable.\n\nThe video output is a 256x256 screen. That is what you get from jtgng_game in a signal format that replicates the original hardware. jtgng_mist instantiates a module called jtgng_vga that converts the image to a standard VGA resolution without losing frame speed.\n\nROM Generation\n==============\n\nCopy your .zip files to the rom folder and use Python to execute the file jtgng.py from a command line. Then copy the .rom file to the SD card with the name JTGNG.rom\n\nSD Card\n=======\n\nFor MiST copy the file core.rbf to the SD card at the root directory. Copy also the rom you have generated with the name JTGNG.rom. It will get loaded at start.\n\nExtras\n======\n\nYou can press F12 to bring the OSD menu up. You can turn off music, or sound effects with it. By default, a screen filter makes the screen look closer to an old tube monitor. If you turn it off you will get sharp pixels. Note that if you switch from sharp to soft pixels you will need a couple of seconds to get your eyes used as the brain initially perceives this as an out of focus image compared to the old one.\n\nSound\n=======\nOriginal filter for sound:\n    -high pass filter with cut-off freq. at 1.6Hz\n    -low pass filter with cut-off freq. at 32.3kHz\n\nCredits\n=======\n\nJose Tejada Gomez. Twitter @topapate\nProject is hosted in http://www.github.com/jotego/jt_gng\nLicense: GPL3, you are obligued to publish your code if you use mine\n\nSpecial thanks to Greg Miller and Alexey Melnikov\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-GnG_MiSTer",
      "releases": [
        {
          "name": "Arcade-GnG_20200509.rbf",
          "sha": "5667cbd6b27b203a7551fea8e5f247557b61c5f4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-GnG_MiSTer/master/releases/Arcade-GnG_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Ghosts'n Goblins.mra",
          "sha": "a88eefa4d008f5e8687f9f53ad1deae99757f85c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-GnG_MiSTer/master/releases/Ghosts'n%20Goblins.mra",
          "type": "MRA",
          "extra": {
            "name": "Ghosts'n Goblins (World set 1)",
            "rbf": "gng",
            "zips": [
              "gng.zip"
            ]
          }
        },
        {
          "name": "Makai-Mura (Japan).mra",
          "sha": "effcb3510b21edc4c5e7ba0b09f9d055f19c0938",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-GnG_MiSTer/master/releases/Makai-Mura%20(Japan).mra",
          "type": "MRA",
          "extra": {
            "name": "Makai-Mura (Japan)",
            "rbf": "gng",
            "zips": [
              "gng.zip|makaimur.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-IremM62_MiSTer",
      "description": "Irem62 from pace, and mist including Lode Runner, etc",
      "readme": "Irem M62 Hardware\n=================\n\nBased on old PACE code by Mark McDougall(tcdev), enhanced by Gyorgy Szombathelyi in March 2020.\n\nGames supported:\n- Lode Runner 1-4\n- Kung Fu Master\n- Horizon\n- Battle Road\n- Spelunker 1-2\n- Kid Niki\n- Youjyudn\n\n# Keyboard inputs :\n```\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     1           : Start 1 Player\n     2           : Start 2 Player\n     5           : Coin 1\n     6           : Coin 2\n     R,F,D,G     : Player 2\n     A           : Fire2 A\n     S           : Fire2 B \n\t\n Joystick support. \n```\n\n# Known Bugs\n\n- Kung-Fu Master has a sprite color problem\n- Lot Lot isn't fully implemented\n\n\n# ROMs\n```\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n```\n\nLaunch game using the appropriate .MRA\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-IremM62_MiSTer",
      "releases": [
        {
          "name": "Arcade-IremM62_20200603.rbf",
          "sha": "572d5d1ec42c5f223188bf50b40b29dee14da9e4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Arcade-IremM62_20200603.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-IremM62_20200705.rbf",
          "sha": "97a66321309235a7ffc167393374a1dafe7ba9a9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Arcade-IremM62_20200705.rbf",
          "type": "RBF"
        },
        {
          "name": "Battle Road.mra",
          "sha": "c5af659b525b6769cce04c945c3d339be46cb523",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Battle%20Road.mra",
          "type": "MRA",
          "extra": {
            "name": "The Battle-Road",
            "rbf": "iremm62",
            "zips": [
              "battroad.zip"
            ]
          }
        },
        {
          "name": "Horizon.mra",
          "sha": "6dee7061a10a36d70cba031ccdb1d33ee5af3f05",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Horizon.mra",
          "type": "MRA",
          "extra": {
            "name": "Horizon (Irem)",
            "rbf": "iremm62",
            "zips": [
              "horizon.zip"
            ]
          }
        },
        {
          "name": "Kid Niki - Radical Ninja.mra",
          "sha": "1b01bb5cc944c963e39c89fca4e4175ab750f8ea",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Kid%20Niki%20-%20Radical%20Ninja.mra",
          "type": "MRA",
          "extra": {
            "name": "Kid Niki - Radical Ninja (World)",
            "rbf": "iremm62",
            "zips": [
              "kidniki.zip"
            ]
          }
        },
        {
          "name": "Kung-Fu Master.mra",
          "sha": "101c96de8f42e7bb535981373567df1b44ce906f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Kung-Fu%20Master.mra",
          "type": "MRA",
          "extra": {
            "name": "Kung-Fu Master (World)",
            "rbf": "iremm62",
            "zips": [
              "kungfum.zip"
            ]
          }
        },
        {
          "name": "Lode Runner II - The Bungeling Strikes Back.mra",
          "sha": "8cafdd5747e63793adc352a6fe540c6558ec2bd2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Lode%20Runner%20II%20-%20The%20Bungeling%20Strikes%20Back.mra",
          "type": "MRA",
          "extra": {
            "name": "Lode Runner II - The Bungeling Strikes Back",
            "rbf": "iremm62",
            "zips": [
              "ldrun2.zip"
            ]
          }
        },
        {
          "name": "Lode Runner III - The Golden Labyrinth.mra",
          "sha": "750f1043caba36789c97e562f491960800f3c7d2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Lode%20Runner%20III%20-%20The%20Golden%20Labyrinth.mra",
          "type": "MRA",
          "extra": {
            "name": "Lode Runner III - The Golden Labyrinth",
            "rbf": "iremm62",
            "zips": [
              "ldrun3.zip"
            ]
          }
        },
        {
          "name": "Lode Runner IV - Teikoku Karano Dasshutsu.mra",
          "sha": "b7fca63e9ea3f6d450def9f701022b6dbc4f5be2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Lode%20Runner%20IV%20-%20Teikoku%20Karano%20Dasshutsu.mra",
          "type": "MRA",
          "extra": {
            "name": "Lode Runner IV - Teikoku Karano Dasshutsu (Japan)",
            "rbf": "iremm62",
            "zips": [
              "ldrun4.zip"
            ]
          }
        },
        {
          "name": "Lode Runner.mra",
          "sha": "e814d820f2b09bbe2015ed4a17207b6ca42051eb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Lode%20Runner.mra",
          "type": "MRA",
          "extra": {
            "name": "Lode Runner (set 1)",
            "rbf": "iremm62",
            "zips": [
              "ldrun.zip"
            ]
          }
        },
        {
          "name": "Spelunker II - 23 no Kagi.mra",
          "sha": "6be0ab5378ba76f9b41b3b0d1712c2680579ef73",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Spelunker%20II%20-%2023%20no%20Kagi.mra",
          "type": "MRA",
          "extra": {
            "name": "Spelunker II - 23 no Kagi (Japan)",
            "rbf": "iremm62",
            "zips": [
              "spelunk2.zip"
            ]
          }
        },
        {
          "name": "Spelunker.mra",
          "sha": "59351a671daaeaf0f06f4e675a1e1900d4dff1be",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Spelunker.mra",
          "type": "MRA",
          "extra": {
            "name": "Spelunker",
            "rbf": "iremm62",
            "zips": [
              "spelunkr.zip"
            ]
          }
        },
        {
          "name": "Youjyuden.mra",
          "sha": "dc575f0840516ad92262f222b5f22a7b0168616f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-IremM62_MiSTer/master/releases/Youjyuden.mra",
          "type": "MRA",
          "extra": {
            "name": "Youjyuden (Japan)",
            "rbf": "iremm62",
            "zips": [
              "youjyudn.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-LadyBug_MiSTer",
      "description": "Arcade: Lady Bug for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Lady Bug port to MiSTer by Sorgelig\n-- 14 November 2017\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Lady Bug hardware\n-- Unknown Author on Papilio Plus board.\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2  : Coin + Start 2 players\n--   F1  : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-LadyBug_MiSTer",
      "releases": [
        {
          "name": "Arcade-LadyBug_20200509.rbf",
          "sha": "12ffd4b4fe6b38fa6a4aa4e080b7c8ef8f537f96",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-LadyBug_MiSTer/master/releases/Arcade-LadyBug_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Lady Bug.mra",
          "sha": "c6bb2b0c22c3a1421b921ffca84e81b4fca021fd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-LadyBug_MiSTer/master/releases/Lady%20Bug.mra",
          "type": "MRA",
          "extra": {
            "name": "Lady Bug",
            "rbf": "ladybug",
            "zips": [
              "ladybug.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-LunarLander_MiSTer",
      "description": null,
      "readme": "This is a Model of LunarLander hardware adapted from Asteroids by James Sweet.\r\n\r\n-- Keyboard players inputs :\r\n--\r\n   F1          : Start 1P\r\n   F2          : Start 2P\r\n   F3          : Coin \r\n   LEFT,RIGHT arrows : Steering\r\n   A,D : Steering\r\n   UP,DOWN arrows : Thrust\r\n   Ctrl  : Abort\r\n   LAlt: Select\r\n   Space: game select\r\n\r\n   MAME/IPAC/JPAC Style Keyboard inputs:\r\n     5           : Coin 1\r\n     6           : Coin 2\r\n     1           : Start 1 Player\r\n     2           : Start 1 Player\r\n\r\n\r\n-- Joystick support.  Analog or Digital - select in OSD\r\n\r\n-- OSD language selection\r\n\r\nThe rbf file is in releases\r\n\r\n---------------------------------------------------------------------------------\r\n\r\n                                *** Attention ***\r\n\r\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\r\n\r\nFind this zip file somewhere. You need to find the file exactly as required.\r\nDo not rename other zip files even if they also represent the same game - they are not compatible!\r\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\r\nhashes and contained files there.\r\n\r\nTo generate the ROM using Windows:\r\n1) Copy the zip into \"releases\" directory\r\n2) Execute bat file - it will show the name of zip file containing required files.\r\n3) Put required zip into the same directory and execute the bat again.\r\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\r\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\r\n\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-LunarLander_MiSTer",
      "releases": [
        {
          "name": "Arcade-LunarLander_20200509.rbf",
          "sha": "e4bab5915aa80f37818fb44cdecf5ffa787c7369",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-LunarLander_MiSTer/master/releases/Arcade-LunarLander_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Lunar Lander.mra",
          "sha": "03f49db4df4df84910adcdabb1774e17be9843bd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-LunarLander_MiSTer/master/releases/Lunar%20Lander.mra",
          "type": "MRA",
          "extra": {
            "name": "Lunar Lander (rev 2)",
            "rbf": "lunarlander",
            "zips": [
              "llander.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-MarioBros_MiSTer",
      "description": "Mario Bros arcade core for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Mario Bros port to MiSTer by gaz68 (https://github.com/gaz68)\n-- June 2020\n-- \n-- Original Donkey Kong port to MiSTer by Sorgelig\n-- 18 April 2018\n-- \n---------------------------------------------------------------------------------\n-- \n-- dkong Copyright (c) 2003 - 2004 Katsumi Degawa\n-- T80   Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org) All rights reserved\n-- T48   Copyright (c) 2004, Arnim Laeuger (arniml@opencores.org) All rights reserved\n-- \n---------------------------------------------------------------------------------\n-- \n-- Keyboard inputs :\n--\n--   F2          : Start 2 players\n--   F1          : Start 1 player\n--   SPACE       : Jump\n--   LEFT,RIGHT arrows : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   D,G         : Player 2 Movements\n--   A           : Player 2 Jump\n--\n--\n-- Joystick support.\n--  \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-MarioBros_MiSTer",
      "releases": [
        {
          "name": "Arcade-MarioBros_20200628.rbf",
          "sha": "39c8685677296d39915e7f351e77eba1fb1dfd06",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MarioBros_MiSTer/master/releases/Arcade-MarioBros_20200628.rbf",
          "type": "RBF"
        },
        {
          "name": "Mario Bros.mra",
          "sha": "bef497e093890e4ac0a7eefc3613e4ee0e04dfe8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MarioBros_MiSTer/master/releases/Mario%20Bros.mra",
          "type": "MRA",
          "extra": {
            "name": "Mario Bros. (US, Revision G)",
            "rbf": "MarioBros",
            "zips": [
              "mario.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-MCR1_MiSTer",
      "description": "Arcade: MCR2 for MiSTer for MiSTer FPGA",
      "readme": "# Midway MCR1 port for MiSTer\n\n[Original readme](readme_orig.txt) (mostly irrelevant to MiSTer)\n\n# Keyboard inputs :\n```\n   ESC         : Coin 1\n   F1          : Start 1P\n   F2          : Start 2P \n   UP,DOWN,LEFT,RIGHT arrows : Player 1\n   LCtrl : Fire A\n   LAlt  : Fire B\n\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Player\n     R,F,D,G     : Player 2\n     A           : Fire2 A\n     S           : Fire2 B \n\t\n Joystick support. \n```\n# Games\n\n### Kick\nUp to 2 players.\nSupported 2 control modes: Joystick/Spinner\n1. Left/Right - movement, A - Kick, B - Speed\n2. Spinner    - movement, A - Kick, B - Speed\n\n### Solar Fox\nUp to 2 players.\nUp/Down/Left/Right - movements, A - Fire, B - Speed\n \n# Unsupported Games\nDraw Poker (gambling machine for casino)\n \n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\nPut rom on your SD card. Example directory : _Arcade/mame/\n\n```\n\nLaunch game using the appropriate .MRA\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-MCR1_MiSTer",
      "releases": [
        {
          "name": "Arcade-MCR1_20200215.rbf",
          "sha": "3febe79e8855a1d221b1d6f91ba3b6d91f6698ea",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR1_20200216.rbf",
          "sha": "902eef5969b807746427a1860bb2498a5732da36",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR1_20200217.rbf",
          "sha": "b131e3bb241fd22209d396dc763ff2eb9034089d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200217.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR1_20200221.rbf",
          "sha": "0198a31bb89eb1c800a9eb982916abd87db01895",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR1_20200222.rbf",
          "sha": "534f12e7040c1900a85f5947b3388ea4790c111a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR1_20200302.rbf",
          "sha": "95f99f660263d815565ca187b45616460a96650c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200302.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR1_20200408.rbf",
          "sha": "e88e771fe95b09e75cd8c1a22bb973518841badc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR1_20200419.rbf",
          "sha": "491c94a0064b4429c73a366b1f277459c55d8e44",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Arcade-MCR1_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Kick-Man.mra",
          "sha": "1c34cf55c2f47a4fe59ba1b6d1faed166fc391ba",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Kick-Man.mra",
          "type": "MRA",
          "extra": {
            "name": "Kick-Man",
            "rbf": "MCR1",
            "zips": [
              "kick.zip|kickman.zip"
            ]
          }
        },
        {
          "name": "Kick.mra",
          "sha": "9a11a9d9cd278de07d0c041e3e467d5d2ba04458",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Kick.mra",
          "type": "MRA",
          "extra": {
            "name": "Kick",
            "rbf": "MCR1",
            "zips": [
              "kick.zip"
            ]
          }
        },
        {
          "name": "Solar Fox.mra",
          "sha": "1af29c01fa13a5a39192bfc84a07983f587fcc51",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR1_MiSTer/master/releases/Solar%20Fox.mra",
          "type": "MRA",
          "extra": null
        }
      ]
    },
    {
      "name": "Arcade-MCR2_MiSTer",
      "description": "Arcade: MCR2 for  for MiSTer FPGA",
      "readme": "# Midway MCR2 port for MiSTer\n\n[Original readme](README_orig.txt) (mostly irrelevant to MiSTer)\n\n# Keyboard inputs :\n```\n   ESC    : Coin 1\n   UP,DOWN,LEFT,RIGHT arrows : Player 1\n   LCtrl  : Fire A\n   LAlt   : Fire B\n   Space  : Fire C   \n   LShift : Fire D\n   Z      : Fire E\n   X      : Fire F \n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     1           : Start 1 Player\n     2           : Start 2 Player\n\t 5           : Coin 1\n     6           : Coin 2\n     R,F,D,G     : Player 2\n     A           : Fire2 A\n     S           : Fire2 B \n     Q           : Fire2 C\n     W           : Fire2 D\n     I           : Fire2 E\n     K           : Fire2 F\n\t\n Joystick support. \n```\n# Games\n\n### Domino Man\nUp to 2 players. \n* Up/Down/Left/Right - movements \n* A - Swat \n\n### Kozmik Krooz'r\nUp to 2 players.\n* Up/Down/Left/Right - movements\n* A - Fire\n* B - Shield\nSupports 2 control modes: Joystick/Spinner\nSpinner - Rotate Right,Rotate Left\n \n### Satan's Hollow\nUp to 2 players.\n* Left/Right - movements\n* A - Fire\n\n### Tron\nUp to 2 players.\n* Up/Down/Left/Right - movements\n* A - Fire\nSupports 2 control modes: Joystick/Spinner\nSpinner - Rotate Right,Rotate Left\n\n### Two Tigers\nUp to 2 players.\n* Left/Right - movements\n* A - Shoot\n* B - Bomb\n* C - DogFight\nSupports 2 control modes: Joystick/Spinner\nSpinner - Rotate Right,Rotate Left\n\n### Wacko\nUp to 2 players.\n* Up/Down/Left/Right - movements\n* A - Zap Right\n* B - Zap Down\n* C - Zap Up\n* D - Zap Left\nSupports 2 control modes: Joystick/Trackball\nTrackball - Up/Down/Left/Right\n \n# ROMs\n```\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n```\n\nLaunch game using the appropriate .MRA\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-MCR2_MiSTer",
      "releases": [
        {
          "name": "Arcade-MCR2_20200215.rbf",
          "sha": "5afad7cbe39b347fa560706d942b3e0823d0f702",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200216.rbf",
          "sha": "b5bf79d9316d6dadc0f4d6f09e0f9c0bbd923e60",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200217.rbf",
          "sha": "39214b1337c7717541293c23f966e3632cf7b7ce",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200217.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200221.rbf",
          "sha": "423705d7ac2fd8a93f9383ed2f877b6e11de4460",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200222.rbf",
          "sha": "947f4c49fddee6f8761ea42627f4db4ae0966b1d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200223.rbf",
          "sha": "7d170d9ec128152485d7bb7fd3be9c59bb2f1148",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200302.rbf",
          "sha": "550db7dd7631eb052016b78eda9ecd9526317b55",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200302.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200408.rbf",
          "sha": "22bc618017cd4d60d9fba36c3f5bc340cbabb45e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200419.rbf",
          "sha": "8e4b517ad373375e77eed940c8373d26221c0901",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR2_20200523.rbf",
          "sha": "e5d3a68b5e73c0afb6169290f525b37e2d69c6c1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Arcade-MCR2_20200523.rbf",
          "type": "RBF"
        },
        {
          "name": "Domino Man.mra",
          "sha": "82e72152f83f4854e24b4dff34486c80f15dba5f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Domino%20Man.mra",
          "type": "MRA",
          "extra": {
            "name": "Domino Man",
            "rbf": "MCR2",
            "zips": [
              "domino.zip"
            ]
          }
        },
        {
          "name": "Kozmik Kroozr.mra",
          "sha": "2d7478863867f09f6bc16b3e133316e4dbf6e881",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Kozmik%20Kroozr.mra",
          "type": "MRA",
          "extra": {
            "name": "Kozmik Krooz'r",
            "rbf": "MCR2",
            "zips": [
              "kroozr.zip"
            ]
          }
        },
        {
          "name": "Satans Hollow.mra",
          "sha": "ee5f296798063055f8889bd47a5ea71d27eb7876",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Satans%20Hollow.mra",
          "type": "MRA",
          "extra": {
            "name": "Satan's Hollow",
            "rbf": "MCR2",
            "zips": [
              "shollow.zip"
            ]
          }
        },
        {
          "name": "Tron.mra",
          "sha": "0a9080bb126f3db78b1158c7b443599d8b8c9272",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Tron.mra",
          "type": "MRA",
          "extra": {
            "name": "Tron",
            "rbf": "MCR2",
            "zips": [
              "tron.zip"
            ]
          }
        },
        {
          "name": "Two Tigers.mra",
          "sha": "af492a24ccd7bea21da66a405d84f38bef5ce604",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Two%20Tigers.mra",
          "type": "MRA",
          "extra": {
            "name": "Two Tigers (Tron conversion)",
            "rbf": "MCR2",
            "zips": [
              "twotiger.zip",
              "twotigerc.zip"
            ]
          }
        },
        {
          "name": "Wacko.mra",
          "sha": "ec91c6398405f2107f0957fea6047ecb9f7c1cf5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR2_MiSTer/master/releases/Wacko.mra",
          "type": "MRA",
          "extra": {
            "name": "Wacko",
            "rbf": "MCR2",
            "zips": [
              "wacko.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-MCR3Mono_MiSTer",
      "description": "Arcade: MCR3 Mono for MiSTer FPGA",
      "readme": "# Midway MCR Monoboard port for MiSTer\n\n[Original readme](readme_orig.txt) (mostly irrelevant to MiSTer)\n\n# Keyboard inputs :\n```\n   ESC         : Coin 1\n   UP,DOWN,LEFT,RIGHT arrows : Player 1\n   LCtrl  : Fire A\n   LAlt   : Fire B\n   Space  : Fire C   \n   LShift : Fire D\n   Z      : Fire E\n   X      : Fire F \n\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Player\n     R,F,D,G     : Player 2\n     A           : Fire2 A\n     S           : Fire2 B \n     Q           : Fire2 C\n     W           : Fire2 D\n     I           : Fire2 E\n     K           : Fire2 F\n\t\n Joystick support. \n```\n\n# Games\n\n### Sarge\nSupported 2 control modes:\n1. Up/Down - left side, X/B - right side, A - Fire 1, Y - Fire 2\n2. Up/Down/Left/Right - movements, A - Fire 1, B - Fire 2\n\n### Rampage\nUp to 3 players.\nUp/Down/Left/Right - movements, A - Punch, B - Jump\n\n### Power Drive\nUp to 3 players. Each playey has its own coin button to join.\nA - Left Wheel, B - Right Wheel, C - Wheelie, D - 4WD/2WD\n\n### Max RPM\nUp to 2 players. Each player has its own start button to join.\nLeft/Right - Steering, Up/Down - Thottle +/-, A,B - Gear +/-\n\n### Demolition Derby\nUp to 4 players. Each player has its own start button to join.\nLeft/Right - Steering, A - Forward, B - Reverse\n\n### Star Guards\nUp to 3 players. Each playey has its own coin and start buttons to join.\nSupported 2 control modes:\n1. A - Fire right, B - Fire bottom, X - Fire up, Y - Fire left.\n2. Any of A/B/X/Y is fire to the fly direction.\n\n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\nPut rom on your SD card. Example directory : _Arcade/mame/\n\n```\n\nLaunch game using the appropriate .MRA\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer",
      "releases": [
        {
          "name": "Arcade-MCR3Mono_20200215.rbf",
          "sha": "359eb8e46c265e1b9accf5a4b77c2f5f0c5922ae",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Mono_20200216.rbf",
          "sha": "4654e2ba1ffde85d43a21aa7ee41d21d906b115d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Mono_20200217.rbf",
          "sha": "93263b19a4f281ac3e04e2a491dae0a024d5a4f1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200217.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Mono_20200221.rbf",
          "sha": "dbf8878a4689277aeaa3f9f3ef2af68c1764f2ae",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Mono_20200222.rbf",
          "sha": "0f9073a1b7cd3f1e098a6f705aae2635cf76aead",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Mono_20200302.rbf",
          "sha": "3e69b8340b9bb9291658abd8017f62934f32cac4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200302.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Mono_20200408.rbf",
          "sha": "d3f276c621839eccc0bdef3b2b68fd639941a054",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Mono_20200419.rbf",
          "sha": "1c9e4b6be76127733c659d91d7eded568cdbab32",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Arcade-MCR3Mono_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Demolition Derby.mra",
          "sha": "99457a184640290926ead37b850564f5e34c59c8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Demolition%20Derby.mra",
          "type": "MRA",
          "extra": {
            "name": "Demolition Derby",
            "rbf": "MCR3Mono",
            "zips": [
              "demoderb.zip|demoderm.zip"
            ]
          }
        },
        {
          "name": "Max RPM.mra",
          "sha": "3ceb7a39ea7a17ed40c974fe52a2b26b19f25a1c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Max%20RPM.mra",
          "type": "MRA",
          "extra": {
            "name": "Max RPM (ver 2)",
            "rbf": "MCR3Mono",
            "zips": [
              "maxrpm.zip"
            ]
          }
        },
        {
          "name": "Power Drive.mra",
          "sha": "f56819347b885bc10b543c1bd9769d43230d9226",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Power%20Drive.mra",
          "type": "MRA",
          "extra": {
            "name": "Power Drive",
            "rbf": "MCR3Mono",
            "zips": [
              "powerdrv.zip"
            ]
          }
        },
        {
          "name": "Rampage.mra",
          "sha": "b4faccf67120f6b93236cb990505f6d276174782",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Rampage.mra",
          "type": "MRA",
          "extra": {
            "name": "Rampage (Rev 3, 8/27/86)",
            "rbf": "MCR3Mono",
            "zips": [
              "rampage.zip"
            ]
          }
        },
        {
          "name": "Sarge.mra",
          "sha": "12218c81f21d18534f7fb9f38d9f3ebbe277f9ad",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Sarge.mra",
          "type": "MRA",
          "extra": {
            "name": "Sarge",
            "rbf": "MCR3Mono",
            "zips": [
              "sarge.zip"
            ]
          }
        },
        {
          "name": "Star Guards.mra",
          "sha": "2fd529238df865809fd82706983bc48d0b74af9a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Mono_MiSTer/master/releases/Star%20Guards.mra",
          "type": "MRA",
          "extra": {
            "name": "Star Guards",
            "rbf": "MCR3Mono",
            "zips": [
              "stargrds.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-MCR3Scroll_MiSTer",
      "description": "Arcade: MCR3 Scroll for MiSTer FPGA",
      "readme": "# Midway MCR3scroll port for MiSTer\n\n[Original readme](README_orig.txt) (mostly irrelevant to MiSTer)\n\n# Keyboard inputs :\n```\n   ESC         : Coin 1\n   UP,DOWN,LEFT,RIGHT arrows : Player 1\n   LCtrl  : Fire A\n   LAlt   : Fire B\n   Space  : Fire C   \n   LShift : Fire D\n   Z      : Fire E\n   X      : Fire F \n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     1           : Start 1 Player\n     2           : Start 2 Player\n     R,F,D,G     : Player 2\n     A           : Fire2 A\n     S           : Fire2 B \n     Q           : Fire2 C\n     W           : Fire2 D\n     I           : Fire2 E\n     K           : Fire2 F\n\t\n Joystick support. \n```\n# Games\n\n### Spyhunter\nSupports digital and analog Steering, Gas.\n* Left/Right - Steering  \n* A - Machine Guns \n* B - Smoke Screen\n* C - Weapons Van\n* D - Missiles\n* E - Oil Slick\n* F - Shift\n\n### Crater Raider\nUp to 2 players. Supports 2 control modes: Joystick/Spinner\n1. Joystick\n* Up/Down/Left/Right - movements\n* A - Fire\n* B - Shield\n* E - START2\n* F - START1\n2. Spinner\n* Left/Right - Spinner\n* Up - Forward\n* Down - Reverse\n* A - Fire\n* B - Shield\n* E - START2\n* F - START1 \n \n### Turbo Tag \n Up to 2 players. Supports digital and analog Steering, Gas.\n* Left/Right - Steering\n* A - LButton/1Player\n* B - LTrigger\n* C - Center Button\n* D- RButton/2Player\n* E - RTrigger\n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\nPut rom on your SD card. Example directory : _Arcade/Mame/\n\n```\n\nLaunch game using the appropriate .MRA\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer",
      "releases": [
        {
          "name": "Arcade-MCR3Scroll_20200215.rbf",
          "sha": "9429563803c820f17db17d2dd0b7c3ba97d56d8c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Scroll_20200216.rbf",
          "sha": "cfc7f9a57d9b569bc4353ef5327e446536e049d8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Scroll_20200217.rbf",
          "sha": "93150b16dfef7f6a4ee7d9a87dafcaa0038b16e1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200217.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Scroll_20200221.rbf",
          "sha": "cdbc913e9e2ace22154b2a1fda2752b40647ec07",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Scroll_20200222.rbf",
          "sha": "095ca511f9c549c095c218d0f04c50034b95b137",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Scroll_20200302.rbf",
          "sha": "66781d03529c922f9bce6a88981d9a5f002e25f9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200302.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Scroll_20200408.rbf",
          "sha": "f4d6c1f22174b551d2b85ff2c6eddd016aa57d23",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3Scroll_20200419.rbf",
          "sha": "1624ec2a0e38bc5b6c85cc628d08b6d94c088a98",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Arcade-MCR3Scroll_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Crater Raider.mra",
          "sha": "94bbd3a93ddf94618111dddb9c78f9b2baa9fa99",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Crater%20Raider.mra",
          "type": "MRA",
          "extra": {
            "name": "Crater Raider",
            "rbf": "mcr3scroll",
            "zips": [
              "crater.zip"
            ]
          }
        },
        {
          "name": "Spy Hunter.mra",
          "sha": "c71352892fd2d3f5c0cdc5b2fe6684c8fca1e16b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Spy%20Hunter.mra",
          "type": "MRA",
          "extra": {
            "name": "Spy Hunter",
            "rbf": "mcr3scroll",
            "zips": [
              "spyhunt.zip"
            ]
          }
        },
        {
          "name": "Turbo Tag.mra",
          "sha": "486746b645b544388a4b405d698cb909d199cd47",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3Scroll_MiSTer/master/releases/Turbo%20Tag.mra",
          "type": "MRA",
          "extra": {
            "name": "Turbo Tag",
            "rbf": "mcr3scroll",
            "zips": [
              "turbotag.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-MCR3_MiSTer",
      "description": "Arcade: MCR3 Scroll for MiSTer FPGA",
      "readme": "# Midway MCR3 port for MiSTer\n\n[Original readme](README_orig.txt) (mostly irrelevant to MiSTer)\n\n# Keyboard inputs :\n```\n   ESC    : Coin 1\n   UP,DOWN,LEFT,RIGHT arrows : Player 1\n   LCtrl  : Fire A\n   LAlt   : Fire B\n   Space  : Fire C   \n   LShift : Fire D\n   Z      : Fire E\n   X      : Fire F \n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     1           : Start 1 Player\n     2           : Start 2 Player\n     5           : Coin 1\n     6           : Coin 2\n     R,F,D,G     : Player 2\n     A           : Fire2 A\n     S           : Fire2 B \n     Q           : Fire2 C\n     W           : Fire2 D\n     I           : Fire2 E\n     K           : Fire2 F\n\t\n Joystick support. \n```\n# Games\n\n### Timber\nUp to 2 players. \n* Up/Down/Left/Right - movements \n* A - Chop Right \n* B - Chop Left\n\n### Tapper\nUp to 2 players.\n* Up/Down/Left/Right - movements\n* A - Fill\n \n### Discs of Tron\nUp to 2 players.\n* Up/Down/Left/Right - movements\n* A - Toss\n* B - Deflect\n* C - Aim Up\n* D - Aim Down\nSupports 2 control modes: Joystick/Spinner\nSpinner - Rotate Right,Rotate Left\n\n### Journey\nUp to 2 players.\n* Up/Down/Left/Right - movements\n* A - Blast\n\nDownload a sound file from mame sounds ( https://samples.mameworld.info/ click current samples ) , and put journey.zip in:\n_Arcade/sound/\n \n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\nPut rom on your SD card. Example directory : _Arcade/mame/\n\n```\n\nLaunch game using the appropriate .MRA\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-MCR3_MiSTer",
      "releases": [
        {
          "name": "Arcade-MCR3_20200215.rbf",
          "sha": "90e26974eb7243e1a0c4b00a8743f701af1cea1e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3_20200216.rbf",
          "sha": "59c68e4f241ffd785bf5175c5c36e79337641a26",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3_20200217.rbf",
          "sha": "dd260c01351f08ff56e1f5a6f6393ab092c14e29",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200217.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3_20200221.rbf",
          "sha": "2c59a6ecdf61897a3835fc0ffd453b6b9ed88516",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3_20200222.rbf",
          "sha": "50b5c42fe4fd296735860e6000520c176b256bab",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3_20200302.rbf",
          "sha": "70dfdee0dcd8d9a31c03dc6af6d6a186255e06b4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200302.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3_20200408.rbf",
          "sha": "5f4ef7e55563e160e0aa8c9b6ad5ed814a61a81a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-MCR3_20200419.rbf",
          "sha": "35526e3928d52d19b15b29bdc0bf0e531f896999",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Arcade-MCR3_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Discs of Tron.mra",
          "sha": "6aa9da710f391a936a60f3df2114d21878e01b1e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Discs%20of%20Tron.mra",
          "type": "MRA",
          "extra": {
            "name": "Discs of Tron (Upright)",
            "rbf": "mcr3",
            "zips": [
              "dotron.zip"
            ]
          }
        },
        {
          "name": "Journey.mra",
          "sha": "dcbe249b56a7fd6364b0de271a17c78784a3ccce",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Journey.mra",
          "type": "MRA",
          "extra": {
            "name": "Journey",
            "rbf": "MCR3",
            "zips": [
              "journey.zip",
              "/sound/journey.zip"
            ]
          }
        },
        {
          "name": "Tapper.mra",
          "sha": "be227c534bae4b2e53d59d5979876b2f8837692e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Tapper.mra",
          "type": "MRA",
          "extra": {
            "name": "Tapper (Budweiser, 1-27-84)",
            "rbf": "mcr3",
            "zips": [
              "tapper.zip"
            ]
          }
        },
        {
          "name": "Timber.mra",
          "sha": "e77d18c3aaaaacb15adc01b73e82f1f21c984074",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MCR3_MiSTer/master/releases/Timber.mra",
          "type": "MRA",
          "extra": {
            "name": "Timber",
            "rbf": "mcr3",
            "zips": [
              "timber.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-MoonPatrol_MiSTer",
      "description": "Arcade: Moon Patrol for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Moon Patrol port to MiSTer by Sorgelig\n-- 27 November 2017\n-- \n---------------------------------------------------------------------------------\n-- Uses PACE framework by http://pacedev.net/\n---------------------------------------------------------------------------------\n-- Moon patrol sound board by Dar (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- cpu68 - Version 9th Jan 2004 0.8\n-- 6800/01 compatible CPU core \n-- GNU public license - December 2002 : John E. Kent\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F1          : Coin + Start\n--   CTRL        : Fire\n--   SPACE       : Jump\n--   LEFT,RIGHT  : Increase/Decrease the speed\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-MoonPatrol_MiSTer",
      "releases": [
        {
          "name": "Arcade-MoonPatrol_20200508.rbf",
          "sha": "d92bc68d7546d05ebb68d5085239e97667675119",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MoonPatrol_MiSTer/master/releases/Arcade-MoonPatrol_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "Moon Patrol.mra",
          "sha": "0bd0b6cf4426fb5a48e0532292b6c4df094d9b08",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-MoonPatrol_MiSTer/master/releases/Moon%20Patrol.mra",
          "type": "MRA",
          "extra": {
            "name": "Moon Patrol",
            "rbf": "moonpatrol",
            "zips": [
              "mpatrol.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-NinjaKun_MiSTer",
      "description": "Ninja-Kun for MiSter",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Ninja-Kun  port to MiSTer by MiSTer-X\n-- 23 October 2019\n-- https://github.com/MrX-8B/MiSTer-Arcade-NinjaKun\n-- \n---------------------------------------------------------------------------------\n-- FPGA Ninja-Kun for Spartan-6\n------------------------------------------------\n-- Copyright (c) 2011 MiSTer-X\n---------------------------------------------------------------------------------\n-- T80/T80s - Version : 0242\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- YM2149 (AY-3-8910)\n-- Copyright (c) MikeJ - Jan 2005\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Shot\n--   CTRL        : Jump\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Shot\n--   S           : Player 2 Jump\n--\n-- Joystick support.\n--\n--\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-NinjaKun_MiSTer",
      "releases": [
        {
          "name": "Arcade-NinjaKun_20200415.rbf",
          "sha": "4b30afe1ac714377dc6dbda99be8aa27317596f0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-NinjaKun_MiSTer/master/releases/Arcade-NinjaKun_20200415.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-NinjaKun_20200419.rbf",
          "sha": "e7b6863cc353e2954de46a783d088c2e225d3392",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-NinjaKun_MiSTer/master/releases/Arcade-NinjaKun_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Ninjakun.mra",
          "sha": "548c6455c4cdb6de13ded7b8465dcfbf0cf878fc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-NinjaKun_MiSTer/master/releases/Ninjakun.mra",
          "type": "MRA",
          "extra": {
            "name": "Ninjakun Majou no Bouken",
            "rbf": "ninjakun",
            "zips": [
              "ninjakun.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "ea7c701cf1bc398c70dcb4519f5b7c35d21f0316",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-NinjaKun_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-Pacman_MiSTer",
      "description": "Arcade: Pacman for MiSTer FPGA",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Pacman port to MiSTer by Sorgelig\n-- 09 November 2017\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Pacman hardware\n-- Copyright (c) MikeJ - January 2006\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F1          : Start Player 1\n--   F2          : Start Player 2\n--   F3\t\t : Coin Player 1\n--   F5          : Skip to next level\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Pacman_MiSTer",
      "releases": [
        {
          "name": "Alibaba 40 Thieves.mra",
          "sha": "01d16b9a52c76753c3a3af02f1ea629aef842b01",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Alibaba%2040%20Thieves.mra",
          "type": "MRA",
          "extra": {
            "name": "Ali Baba and 40 Thieves",
            "rbf": "pacman",
            "zips": [
              "alibaba.zip"
            ]
          }
        },
        {
          "name": "Arcade-Pacman_20200215.rbf",
          "sha": "a67358a4b206058105fc740dc71778c59e0f861a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Arcade-Pacman_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Pacman_20200216.rbf",
          "sha": "46c7a780135165d190560110733d97b9965f3bad",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Arcade-Pacman_20200216.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Pacman_20200221.rbf",
          "sha": "df76d2006f3f26580121cdf3a0a4605a5db09b7e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Arcade-Pacman_20200221.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Pacman_20200222.rbf",
          "sha": "4693397f7b442583bc246d894d4e3de15373101b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Arcade-Pacman_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Pacman_20200408.rbf",
          "sha": "4734fc1a0534745ba9db4fff2b1640faeb3dcd5a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Arcade-Pacman_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Pacman_20200417.rbf",
          "sha": "d4b8a6b1783d1ea3aebf6772ba9c1253a3a04322",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Arcade-Pacman_20200417.rbf",
          "type": "RBF"
        },
        {
          "name": "Beastie Feastie.mra",
          "sha": "705adcc52e0ffb0381c1af6f44451a8d475dc0a5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Beastie%20Feastie.mra",
          "type": "MRA",
          "extra": {
            "name": "Beastie Feastie (Pac-Man conversion)",
            "rbf": "pacman",
            "zips": [
              "suprglob.zip"
            ]
          }
        },
        {
          "name": "Birdiy.mra",
          "sha": "94122de4672e7a037f14188e28f6df181d7b10b0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Birdiy.mra",
          "type": "MRA",
          "extra": {
            "name": "Birdiy",
            "rbf": "pacman",
            "zips": [
              "birdiy.zip"
            ]
          }
        },
        {
          "name": "Crush Roller.mra",
          "sha": "1906726789e07c00236a542cc7897f5200ce3247",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Crush%20Roller.mra",
          "type": "MRA",
          "extra": {
            "name": "Crush Roller (set 2)",
            "rbf": "pacman",
            "zips": [
              "crush2.zip",
              "crush.zip"
            ]
          }
        },
        {
          "name": "Dream Shopper.mra",
          "sha": "5eb274f9101abb07b6cf256023f74486187fc45b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Dream%20Shopper.mra",
          "type": "MRA",
          "extra": {
            "name": "Dream Shopper",
            "rbf": "pacman",
            "zips": [
              "dremshpr.zip"
            ]
          }
        },
        {
          "name": "Eeekk!.mra",
          "sha": "bc8ec1d88a37410275c9962edfbf4cb53ba669ea",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Eeekk!.mra",
          "type": "MRA",
          "extra": {
            "name": "Eeekk! (Pac-Man conversion)",
            "rbf": "pacman",
            "zips": [
              "eeekkp.zip",
              "eeekk.zip"
            ]
          }
        },
        {
          "name": "Eggor.mra",
          "sha": "8914acb5e1c92a747ce6aee561d06db0ebec8df8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Eggor.mra",
          "type": "MRA",
          "extra": {
            "name": "Eggor",
            "rbf": "pacman",
            "zips": [
              "eggor.zip"
            ]
          }
        },
        {
          "name": "Eyes.mra",
          "sha": "f26053af388d4a30d48a108ba8db351f78d80173",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Eyes.mra",
          "type": "MRA",
          "extra": {
            "name": "Eyes (US set 1)",
            "rbf": "pacman",
            "zips": [
              "eyes.zip"
            ]
          }
        },
        {
          "name": "Gorkans.mra",
          "sha": "0caef4b169fe04e0d48c360becbbac43918315f5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Gorkans.mra",
          "type": "MRA",
          "extra": {
            "name": "Gorkans",
            "rbf": "pacman",
            "zips": [
              "gorkans.zip",
              "mrtnt.zip"
            ]
          }
        },
        {
          "name": "Jump Shot.mra",
          "sha": "41b0570756d0f6cbc4e0bdcf33a74b9c02b267e0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Jump%20Shot.mra",
          "type": "MRA",
          "extra": {
            "name": "Jump Shot",
            "rbf": "pacman",
            "zips": [
              "jumpshot.zip"
            ]
          }
        },
        {
          "name": "Lizard Wizard.mra",
          "sha": "93d819abb182636d206e445d9a2e32b7f26eae4a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Lizard%20Wizard.mra",
          "type": "MRA",
          "extra": {
            "name": "Lizard Wizard",
            "rbf": "pacman",
            "zips": [
              "lizwiz.zip"
            ]
          }
        },
        {
          "name": "Mr. TNT.mra",
          "sha": "8c19c04a572651c328587f9603ae155fd540b26b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Mr.%20TNT.mra",
          "type": "MRA",
          "extra": {
            "name": "Mr. TNT",
            "rbf": "pacman",
            "zips": [
              "mrtnt.zip"
            ]
          }
        },
        {
          "name": "Ms. Pacman.mra",
          "sha": "051ea9ba33f9fc418c48e598f13cf175b1f8d390",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Ms.%20Pacman.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "pacman",
            "zips": [
              "mspacman.zip"
            ]
          }
        },
        {
          "name": "Pac-Man (Midway).mra",
          "sha": "1098ab615bea40b1cd5eb5bb652fb2dc8f9ea485",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Pac-Man%20(Midway).mra",
          "type": "MRA",
          "extra": {
            "name": "Pac-Man (Midway)",
            "rbf": "pacman",
            "zips": [
              "pacman.zip",
              "puckman.zip",
              "pacman.zip"
            ]
          }
        },
        {
          "name": "Pacman Club.mra",
          "sha": "2239faddabbea90e66fbc15ea297afcfbe0d7f45",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Pacman%20Club.mra",
          "type": "MRA",
          "extra": {
            "name": "Pacman Club - Club Lambada (Argentina)",
            "rbf": "pacman",
            "zips": [
              "clubpacm.zip"
            ]
          }
        },
        {
          "name": "Pacman Plus.mra",
          "sha": "222bd7b480908f7c09e889aea868cdb369273440",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Pacman%20Plus.mra",
          "type": "MRA",
          "extra": {
            "name": "Pac-Man Plus",
            "rbf": "pacman",
            "zips": [
              "pacplus.zip"
            ]
          }
        },
        {
          "name": "Pacmanic Miner.mra",
          "sha": "cd38ca9850966026e693dae055a9c906fb23a73e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Pacmanic%20Miner.mra",
          "type": "MRA",
          "extra": {
            "name": "Pacmanic Miner",
            "rbf": "pacman",
            "zips": []
          }
        },
        {
          "name": "Ponpoko.mra",
          "sha": "750066e0cf89b0487685f33eab0a05bf2b80a99e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Ponpoko.mra",
          "type": "MRA",
          "extra": {
            "name": "Ponpoko",
            "rbf": "pacman",
            "zips": [
              "ponpoko.zip"
            ]
          }
        },
        {
          "name": "Puck Man (Japan set 1).mra",
          "sha": "2ff4d39b6db8729ecb47248199e2af12dc5a068e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Puck%20Man%20(Japan%20set%201).mra",
          "type": "MRA",
          "extra": {
            "name": "Puck Man (Japan set 1)",
            "rbf": "pacman",
            "zips": [
              "puckman.zip"
            ]
          }
        },
        {
          "name": "Super Glob.mra",
          "sha": "cde6d590c791066d102b3c7adfdaa6936ca41be6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Super%20Glob.mra",
          "type": "MRA",
          "extra": {
            "name": "Super Glob (Pac-Man hardware) (German bootleg)",
            "rbf": "pacman",
            "zips": [
              "sprglbpg.zip",
              "suprglob.zip"
            ]
          }
        },
        {
          "name": "The Glob.mra",
          "sha": "95bc7817947b89f640b99d4ea81033a5150cd998",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/The%20Glob.mra",
          "type": "MRA",
          "extra": {
            "name": "The Glob (Pac-Man hardware)",
            "rbf": "pacman",
            "zips": [
              "suprglob.zip"
            ]
          }
        },
        {
          "name": "Van-Van Car.mra",
          "sha": "f708dd6695656bcf6e220115560124354ffbf485",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Van-Van%20Car.mra",
          "type": "MRA",
          "extra": {
            "name": "Van-Van Car",
            "rbf": "pacman",
            "zips": [
              "vanvan.zip"
            ]
          }
        },
        {
          "name": "Woodpecker.mra",
          "sha": "28d0e48a1034da9713a8cae692a5bddb4c173c59",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pacman_MiSTer/master/releases/Woodpecker.mra",
          "type": "MRA",
          "extra": null
        }
      ]
    },
    {
      "name": "Arcade-Pengo_MiSTer",
      "description": "Arcade: Pengo for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Pengo port to MiSTer by Sorgelig\n-- 09 November 2017\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Pengo hardware\n-- Copyright (c) MikeJ - January 2006\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   SPACE,CTRL  : Kick\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Kick\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Pengo_MiSTer",
      "releases": [
        {
          "name": "Arcade-Pengo_20200508.rbf",
          "sha": "d32c6952f6ec1e8ef8aa61e6d90210860efe010e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pengo_MiSTer/master/releases/Arcade-Pengo_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "Pengo.mra",
          "sha": "d1f88a30567628c9e6f1cf431cf6d41642a4e226",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pengo_MiSTer/master/releases/Pengo.mra",
          "type": "MRA",
          "extra": {
            "name": "Pengo (set 1 rev c)",
            "rbf": "pengo",
            "zips": [
              "pengo.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Phoenix_MiSTer",
      "description": "Arcade: Phoenix for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Phoenix port to MiSTer by Sorgelig\n-- 22 October 2017\n-- \n---------------------------------------------------------------------------------\n-- Phoenix (Amstar) FPGA - DAR - 2016\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F3          : Add coin\n--   F2          : Start 2 players\n--   F1          : Start 1 player\n--   SPACE       : Fire  \n--   UP/RIGHT    : Move up \n--   DOWN/LEFT   : Move down\n--   CTRL        : Barrier(Shield)\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--   S           : Player 2 Barrier(Shield)\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Phoenix_MiSTer",
      "releases": [
        {
          "name": "Arcade-Phoenix_20200508.rbf",
          "sha": "3c168a93e59282d41d6dd348a360d4470c372117",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Phoenix_MiSTer/master/releases/Arcade-Phoenix_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "Phoenix.mra",
          "sha": "d14a175ad5b4a49792d105df967b62d5a1ec39af",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Phoenix_MiSTer/master/releases/Phoenix.mra",
          "type": "MRA",
          "extra": {
            "name": "Phoenix (Amstar, set 1)",
            "rbf": "phoenix",
            "zips": [
              "phoenix.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Pleiads_MiSTer",
      "description": null,
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Pleiads port to MiSTer by Sorgelig\n-- 22 October 2017\n-- 14 June  2019 - renamed and load Capitol ROM for Capitol version (From Phoenix)\n---------------------------------------------------------------------------------\n-- Phoenix (Amstar) FPGA - DAR - 2016\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F3          : Add coin\n--   F2          : Start 2 players\n--   F1          : Start 1 player\n--   SPACE       : Fire  \n--   UP/RIGHT    : Move up \n--   DOWN/LEFT   : Move down\n--   CTRL        : Barrier(Shield)\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--   S           : Player 2 Barrier(Shield)\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Pleiads_MiSTer",
      "releases": [
        {
          "name": "Arcade-Pleiads_20200508.rbf",
          "sha": "2c5f649877ff95252ee2f7ccbfc71eee755d96fe",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pleiads_MiSTer/master/releases/Arcade-Pleiads_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Pleiads_20200512.rbf",
          "sha": "298623382717d11809fd5b45e914dc42fee2cd54",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pleiads_MiSTer/master/releases/Arcade-Pleiads_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Pleiads_20200516.rbf",
          "sha": "bc7af78c249b3af4d96fbd73df460edaaf45f153",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pleiads_MiSTer/master/releases/Arcade-Pleiads_20200516.rbf",
          "type": "RBF"
        },
        {
          "name": "Pleiads (Centuri).mra",
          "sha": "d21e90de5c89f0a6dc42c4be2d4f97fed878a48e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pleiads_MiSTer/master/releases/Pleiads%20(Centuri).mra",
          "type": "MRA",
          "extra": {
            "name": "Pleiads (Centuri)",
            "rbf": "Arcade-Pleiads",
            "zips": [
              "pleiadce.zip"
            ]
          }
        },
        {
          "name": "Pleiads.mra",
          "sha": "90f2efda117697a0bdd8fc07f985af1ae86dc076",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pleiads_MiSTer/master/releases/Pleiads.mra",
          "type": "MRA",
          "extra": {
            "name": "Pleiads (Tehkan)",
            "rbf": "pleiads",
            "zips": [
              "pleiads.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Pong_MiSTer",
      "description": "Arcade: Atari Pong (1972) for MiSTer",
      "readme": "*****************************************************************\n**              Arcade: Atari Pong (1972)                      **\n** A Verilog implementation based on the original schematics.  **\n*****************************************************************\n\n                Written by: Richard Eng\n                email:      engric@gmail.com\n                twitter:    @richard_eng\n                www:        retrobits.no\n                git:        github.com/Eicar\n\n---------\nChangelog\n---------\n  2019-10-06 Initial release\n\n------\nInputs\n------\n\nMAME/IPAC/JPAC Style Keyboard inputs:\n    5   : Coin 1\n    6   : Coin 2\n\n+Analog joysticks for paddles (player 1+2)\n\n---------\nFile list\n---------\n\nsys/*     GPL-2, Copyright (C) 2019 Sorgelig\nrtl/*     MIT, Copyright (c) 2019 Richard Eng\n\n---\nQ&A\n---\n\n-Q: How accurate is this implementation?\n A: This implementation is based on the original Atari schematics. However, the\n    original hardware consists of both digital (sync+async logic) and analog circuits. The analog circuits\n    are simulated using digital logic. All signals should be accurate to the system clock edges (7.159MHz).\n\n-Q: Help! I'm unable to move the paddles using the keyboard!\n A: Currently only analog joystick controls are supported.\n\n-Q: Help! I'm unable to move the paddle to the top of the screen!\n A: This is not a bug. The original hardware design did not allow for this to happen.\n\n-Q: The core \"reset\" does not seem to work\n A: This is true. The original Pong hardware did not support a global \"reset\" signal.\n    I might add support for this in the future.\n\n-Q: Can you please add support for XXX!\n A: I will probably not add features not present in the original game.\n    This core is all about accuracy. \n\n-Q: Your HDL code looks like crap!\n A: You are probably right about that! I have a 20+ years software developer background but HDL is\n    pretty new to me. Hopefully I will get better at it :)\n    \n-Q: I've found a bug!\n A: Please let me know about it! I really want this core to be as accurate as possible.\n    I will make sure you will get credit for it!\n\n-Q: This core is awesome! How can I make a donation?\n A: All donations are welcome and extremely appreciated! Donations will make it possible\n    for me to spend more time on writing new cores.\n\n    Donations can be sent to: paypal.me/riceng\n\n\n-End of file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Pong_MiSTer",
      "releases": [
        {
          "name": "Arcade-Pong_20200509.rbf",
          "sha": "cb18c18ebf66bd2a3195ff321b9093d3d34de82e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pong_MiSTer/master/releases/Arcade-Pong_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Pong.mra",
          "sha": "4fa87e5c5efaf32e238ca6bd7ea6468e38be5494",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pong_MiSTer/master/releases/Pong.mra",
          "type": "MRA",
          "extra": {
            "name": "Pong",
            "rbf": "Pong",
            "zips": []
          }
        }
      ]
    },
    {
      "name": "Arcade-Pooyan_MiSTer",
      "description": "Arcade: Pooyan for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Pooyan port to MiSTer by Sorgelig\n-- 09 November 2017\n-- \n---------------------------------------------------------------------------------\n-- Pooyan by Dar (darfpga@aol.fr) (08/11/2017)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd & io_ps2_keyboard\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- YM2149 (AY-3-8910)\n-- Copyright (c) MikeJ - Jan 2005\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   SPACE,CTRL  : Fire\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Fire\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Pooyan_MiSTer",
      "releases": [
        {
          "name": "Arcade-Pooyan_20200508.rbf",
          "sha": "358ed7c1aa7d299c96e2bcfa1b17713da89cbdc4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pooyan_MiSTer/master/releases/Arcade-Pooyan_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "Pooyan.mra",
          "sha": "c1b8e6d25878ec693df71833b01df7c40234ebcc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Pooyan_MiSTer/master/releases/Pooyan.mra",
          "type": "MRA",
          "extra": {
            "name": "Pooyan",
            "rbf": "pooyan",
            "zips": [
              "pooyan.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Popeye_MiSTer",
      "description": "Arcade: Popeye for MiSTer",
      "readme": "# Nintendo Popeye port for MiSTer\r\n\r\n# Keyboard inputs :\r\n```\r\n   ESC         : Coin 1\r\n   F1          : Start 1P\r\n   F2          : Start 2P \r\n   UP,DOWN,LEFT,RIGHT arrows : Player 1\r\n   LCtrl : Fire A\r\n\r\n\r\n   MAME/IPAC/JPAC Style Keyboard inputs:\r\n     5           : Coin 1\r\n     6           : Coin 2\r\n     1           : Start 1 Player\r\n     2           : Start 2 Player\r\n     R,F,D,G     : Player 2\r\n     A           : Fire2 A\r\n\t\r\n Joystick support. \r\n```\r\n# Games\r\n \r\n# ROMs\r\n```\r\n                                *** Attention ***\r\n\r\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\r\n\r\nFind this zip file somewhere. You need to find the file exactly as required.\r\nDo not rename other zip files even if they also represent the same game - they are not compatible!\r\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\r\nhashes and contained files there.\r\nPut rom on your SD card. Example directory : _Arcade/mame/\r\n\r\n```\r\n\r\nLaunch game using the appropriate .MRA\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Popeye_MiSTer",
      "releases": [
        {
          "name": "Arcade-Popeye_20200303.rbf",
          "sha": "e9f615ef48c70831a5de3dd5d78355edcd09f429",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Popeye_MiSTer/master/releases/Arcade-Popeye_20200303.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Popeye_20200303a.rbf",
          "sha": "02672e67256777b0cab87db30504250c550bd522",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Popeye_MiSTer/master/releases/Arcade-Popeye_20200303a.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Popeye_20200305.rbf",
          "sha": "48a0658eea1cf8ac48359847bdb9f49733f0204b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Popeye_MiSTer/master/releases/Arcade-Popeye_20200305.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Popeye_20200408.rbf",
          "sha": "6597e0cd62f75eda9f8ad8cdcb3eb8979238aea3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Popeye_MiSTer/master/releases/Arcade-Popeye_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Popeye_20200419.rbf",
          "sha": "d28e8f87a5077aa3b0e376acb7055b28733782c9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Popeye_MiSTer/master/releases/Arcade-Popeye_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Popeye.mra",
          "sha": "7587a76614d8fe4328f297dce2e45cb43ffd3de6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Popeye_MiSTer/master/releases/Popeye.mra",
          "type": "MRA",
          "extra": {
            "name": "Popeye (revision D)",
            "rbf": "popeye",
            "zips": [
              "popeye.zip"
            ]
          }
        },
        {
          "name": "Sky Skipper.mra",
          "sha": "42243e1ea7636ec6b21a0783d60130afb12a50b2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Popeye_MiSTer/master/releases/Sky%20Skipper.mra",
          "type": "MRA",
          "extra": {
            "name": "Sky Skipper",
            "rbf": "popeye",
            "zips": [
              "skyskipr.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-RallyX_MiSTer",
      "description": "RallyX and NRallyX core",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: New Rally-X  port to MiSTer by MiSTer-X\n-- 18 September 2019\n-- From: https://github.com/MrX-8B/MiSTer-Arcade-RallyX\n-- \n---------------------------------------------------------------------------------\n-- FPGA New Rally-X for Spartan-3 Starter Board\n------------------------------------------------\n-- Copyright (c) 2005 MiSTer-X\n---------------------------------------------------------------------------------\n-- T80/T80s - Version : 0242\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE/CTRL  : Smoke\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A/S         : Player 2 Smoke\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n-- 22 October 2019\n---------------------------------------------------------------------------------\n--  FIXED: CRT video problems\n-- CHANGE: Keyboard inputs\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-RallyX_MiSTer",
      "releases": [
        {
          "name": "Arcade-RallyX_20200415.rbf",
          "sha": "0e38197b1fae2304c13659adaea820418db987ed",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RallyX_MiSTer/master/releases/Arcade-RallyX_20200415.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-RallyX_20200419.rbf",
          "sha": "0dede452a308541f2ec467253c3f7baee58d55d7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RallyX_MiSTer/master/releases/Arcade-RallyX_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "New Rally-X.mra",
          "sha": "cae2ca9bc7de2d67ae1fc0a4bb3cccc8766596b9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RallyX_MiSTer/master/releases/New%20Rally-X.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "RallyX",
            "zips": [
              "nrallyx.zip"
            ]
          }
        },
        {
          "name": "Rally-X.mra",
          "sha": "88488fd4990ffd3460bb901733e90db3139f15c7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RallyX_MiSTer/master/releases/Rally-X.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "RallyX",
            "zips": [
              "rallyx.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "2f46969c3c43bd2a17c7ee0156897558404f6b02",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RallyX_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-RiverPatrol_MiSTer",
      "description": "River Patrol for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: River Patrol port to MiSTer \n-- based on Arcade: Crazy Climber port to MiSTer by Sorgelig\n-- 7 June 2018\n-- \n---------------------------------------------------------------------------------\n-- Crazy climber FPGA by Dar - (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F1          : Add coin + Start 1 player\n--   F2          : Add coin + Start 2 players\n--   LEFT,RIGHT  : move boat\n--   CTRL        : gas\n--\n--   5,6 : Add coin\n--   1,2 : Start Player 1, Player 2\n--\n-- Joystick/Gamepad support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-RiverPatrol_MiSTer",
      "releases": [
        {
          "name": "Arcade-RiverPatrol_20200509.rbf",
          "sha": "ffcc2694deb5ad91f1938e81ad60c4a592b52f0a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RiverPatrol_MiSTer/master/releases/Arcade-RiverPatrol_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "River Patrol.mra",
          "sha": "92439852e0c77ca46a82740ebf0ca3cffb0f5b57",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RiverPatrol_MiSTer/master/releases/River%20Patrol.mra",
          "type": "MRA",
          "extra": {
            "name": "River Patrol (Japan, unprotected)",
            "rbf": "riverpatrol",
            "zips": [
              "rpatrol.zip|rpatroln.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Robotron_MiSTer",
      "description": "Arcade Robotron for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- Arcade: Robotron port to MiSTer by oldgit, Sorgelig\n-- 12 December 2018\n-- \n---------------------------------------------------------------------------------\n-- gen_ram.vhd\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- cpu09l - Version : 0128\n-- Synthesizable 6809 instruction compatible VHDL CPU core\n-- Copyright (C) 2003 - 2010 John Kent\n---------------------------------------------------------------------------------\n-- cpu68 - Version 9th Jan 2004 0.8\n-- 6800/01 compatible CPU core \n-- GNU public license - December 2002 : John E. Kent\n---------------------------------------------------------------------------------\n--\n-- This port is only possible because of previous work by many many others - Thank You\n-- to find out more search \"Williams robotron\" on a search engine.  \n-- \n-- \n-- Keyboard players inputs :\n--\n--   F10 : Advance\n--   F9  : Auto up\n--   F7  : High score reset\n--   F5  : Add coin right\n--   F4  : Add coin centre\n--   F3  : Add coin left\n--   F2  : Start 2 players\n--   F1  : Start 1 player\n--   ESC : Slam  \n--   W move up\n--   S move down\n--   A move left\n--   D move right\n--   UP arrow Fire up\n--   Down arrow Fire Down\n--\t Left arrow Fir Left\n-- \t Right arrow Fire right\n--\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Robotron_MiSTer",
      "releases": [
        {
          "name": "Alien Arena.mra",
          "sha": "d68a48880a7a84f2c35c45f8f28d515708171ff9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Alien%20Arena.mra",
          "type": "MRA",
          "extra": {
            "name": "Alien Arena (Stargate upgrade)",
            "rbf": "robotron",
            "zips": [
              "alienar.zip|alienaru.zip"
            ]
          }
        },
        {
          "name": "Arcade-Robotron_20200301.rbf",
          "sha": "712a9d57f8e2765e2a57f8ff9e32c9a16fc3258a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Arcade-Robotron_20200301.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Robotron_20200304.rbf",
          "sha": "82450e71bb8f923fa76363a8cb4e2c8aca9f33fb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Arcade-Robotron_20200304.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Robotron_20200316.rbf",
          "sha": "24111155101daec34828575d23b6bf47ee6d8156",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Arcade-Robotron_20200316.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Robotron_20200408.rbf",
          "sha": "faafbc5465b4b37c8f2e6a0dc74b27132a99d6b2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Arcade-Robotron_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Robotron_20200418.rbf",
          "sha": "69cd4a89b7da8d745475e58d74cce9e389007916",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Arcade-Robotron_20200418.rbf",
          "type": "RBF"
        },
        {
          "name": "Bubbles.mra",
          "sha": "00a16e311e819b3c9780ee0960576cdd998bc126",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Bubbles.mra",
          "type": "MRA",
          "extra": {
            "name": "Bubbles",
            "rbf": "robotron",
            "zips": [
              "bubbles.zip"
            ]
          }
        },
        {
          "name": "Joust.mra",
          "sha": "ce30e62cc76b0ef64e80350cd8fb7effe776ae31",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Joust.mra",
          "type": "MRA",
          "extra": {
            "name": "Joust (White-Green label)",
            "rbf": "robotron",
            "zips": [
              "joust.zip"
            ]
          }
        },
        {
          "name": "Playball.mra",
          "sha": "31770ae90e8b9baeebb5dce00a5d5cca5f720ef2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Playball.mra",
          "type": "MRA",
          "extra": {
            "name": "playball",
            "rbf": "robotron",
            "zips": [
              "playball.zip"
            ]
          }
        },
        {
          "name": "Robotron 2084.mra",
          "sha": "ea7b0c231c3253a20986f47a28f0f8f192348a28",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Robotron%202084.mra",
          "type": "MRA",
          "extra": {
            "name": "Robotron 2084 (Solid Blue label)",
            "rbf": "robotron",
            "zips": [
              "robotron.zip"
            ]
          }
        },
        {
          "name": "Sinistar.mra",
          "sha": "6910b8f255db13ba7f08617cb121954eefe451fa",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Sinistar.mra",
          "type": "MRA",
          "extra": {
            "name": "Sinistar (revision 3)",
            "rbf": "robotron",
            "zips": [
              "sinistar.zip"
            ]
          }
        },
        {
          "name": "Splat.mra",
          "sha": "e076780546f0522cf76edb634caf51ed83d665d6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Splat.mra",
          "type": "MRA",
          "extra": {
            "name": "Splat!",
            "rbf": "robotron",
            "zips": [
              "splat.zip"
            ]
          }
        },
        {
          "name": "Stargate.mra",
          "sha": "cc55e3baa6a0ada0cbc30a980b3724f744d74363",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Robotron_MiSTer/master/releases/Stargate.mra",
          "type": "MRA",
          "extra": {
            "name": "Stargate",
            "rbf": "robotron",
            "zips": [
              "stargate.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-RushnAttack_MiSTer",
      "description": "Arcade: Rush'n Attack for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Rush'n Attack (Green Beret)  port to MiSTer by MiSTer-X\n-- 14 December 2019\n-- https://github.com/MrX-8B/MiSTer-Arcade-GreenBeret\n--\n---------------------------------------------------------------------------------\n-- FPGA Mr.GOEMON for XILINX Spartan-6\n------------------------------------------------\n-- Copyright (c) 2013 MiSTer-X\n---------------------------------------------------------------------------------\n-- T80/T80s - Version : 0247\n------------------------------\n-- Z80 compatible microprocessor core\n--\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- MRA files\n----------------------------------------------\n-- written by Bruno Silva (@eubrunosilvapt)\n-------------------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Trig1\n--   Ctrl        : Trig2\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Trig1\n--   S           : Trig2\n--\n-- Joystick support.\n-- \n--\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-RushnAttack_MiSTer",
      "releases": [
        {
          "name": "Arcade-RshnAtk_20200215.rbf",
          "sha": "8a912018a9f4a288daa2723344de4f42039b56c6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Arcade-RshnAtk_20200215.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-RshnAtk_20200217.rbf",
          "sha": "36d28f7939c7be838341e5a36d8bc153ff5284fe",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Arcade-RshnAtk_20200217.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-RshnAtk_20200222.rbf",
          "sha": "eb50361094c380b31f7c6c16617687688fdd292c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Arcade-RshnAtk_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-RshnAtk_20200408.rbf",
          "sha": "590ec0d0ebf6d0cf0c22e9bdbec91cd329f19740",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Arcade-RshnAtk_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-RshnAtk_20200416.rbf",
          "sha": "cd009b3b8b2f849e240c94bc0641e8cc02817ba7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Arcade-RshnAtk_20200416.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-RshnAtk_20200417.rbf",
          "sha": "e6c67bfb4872f20ef325738f09e5700b0e30020f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Arcade-RshnAtk_20200417.rbf",
          "type": "RBF"
        },
        {
          "name": "Green Beret.mra",
          "sha": "dfa7693eb5815a75726cbb7a2fc2ddfee08fab91",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Green%20Beret.mra",
          "type": "MRA",
          "extra": {
            "name": "Green Beret",
            "rbf": "rshnatk",
            "zips": [
              "gberet.zip"
            ]
          }
        },
        {
          "name": "Rush'n Attack (US).mra",
          "sha": "f813870b80f5524b1b4a16a3e12db830a063e72f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/Rush'n%20Attack%20(US).mra",
          "type": "MRA",
          "extra": {
            "name": "Rush'n Attack (US)",
            "rbf": "rshnatk",
            "zips": [
              "rushatck.zip",
              "gberet.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "c50969b011b6581dcfefd5d6fb3b69df0d8586fa",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-RushnAttack_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-Rygar_MiSTer",
      "description": "Rygar (1986) core for MiSTer",
      "readme": "# Rygar (1986)\n\n<img alt=\"Rygar\" src=\"https://github.com/nullobject/rygar-fpga/raw/master/doc/rygar-banner.jpg\" />\n\nRygar was originally built in 1986 by Tecmo, a Japanese video game company, and saw later releases on consoles like Nintendo Entertainment System, Sega Master System, Commodore 64, Atari Lynx, etc.\n\nI began this project by writing an [emulator](https://github.com/nullobject/rygar-emu), so I could focus on learning how the arcade game works, without having to worry about the FPGA side of things. I kept detailed project notes while working on both the emulator and FPGA core, which will be turned into a series of [blog posts](https://joshbassett.info).\n\n## Getting Started\n\nIn order to run this arcade core, you will need to provide the correct ROMs (they are not included for legal reasons).\n\nTo simplify the process, you only need to provide the `rygar.zip` file from the MAME ROMs.\n\n1. Download the [latest Rygar release](https://github.com/MiSTer-devel/Arcade-Rygar_MiSTer/releases/latest).\n2. Extract the MRA and RBF files from the archive.\n3. Place the extracted files and the ZIP file containing the MAME ROM files in the following locations:\n\n```\n_Arcade/rygar.mra\n_Arcade/cores/rygar.rbf\n_Arcade/mame/rygar.zip\n```\n\nFor more information on using MRA files with MiSTer, please refer to the [wiki](https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms).\n\n## Controls\n\nKeyboard inputs:\n\n| name     | key                   |\n| ---      | ---                   |\n| Coin     | 5                     |\n| Start    | 1                     |\n| Attack   | CTRL                  |\n| Jump     | ALT                   |\n| Movement | UP, DOWN, LEFT, RIGHT |\n\nJoystick inputs:\n\n| name     | button                |\n| ---      | ---                   |\n| Coin     | L                     |\n| Start    | R                     |\n| Attack   | A                     |\n| Jump     | B                     |\n| Movement | UP, DOWN, LEFT, RIGHT |\n\n## Development\n\nCompile the core:\n\n    $ make build\n\nProgram the DE10-Nano:\n\n    $ make program\n\n## Credits\n\nMade with :heart: by [Josh Bassett](https://twitter.com/nullobject), 2020.\n\nSpecial thanks to:\n\n* [Jose Tejada](https://twitter.com/topapate)\n* [ElectronAsh](https://twitter.com/AshEvans81)\n\n## Licence\n\nRygar is licensed under the MIT licence. See the LICENCE file for more details.\n",
      "archived": true,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Rygar_MiSTer",
      "releases": [
        {
          "name": "Arcade-Rygar_20200513.rbf",
          "sha": "98e4018b34a73c584b64c9aa7af7f65aff6ba0e8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Rygar_MiSTer/master/releases/Arcade-Rygar_20200513.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Rygar_20200514.rbf",
          "sha": "8ba1954f4011887c16259691d0ad05a3e8c0b35a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Rygar_MiSTer/master/releases/Arcade-Rygar_20200514.rbf",
          "type": "RBF"
        },
        {
          "name": "Rygar.mra",
          "sha": "b722cab2b3ad1e72b5f622b6ca692896ceb607bf",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Rygar_MiSTer/master/releases/Rygar.mra",
          "type": "MRA",
          "extra": {
            "name": "Rygar",
            "rbf": "rygar",
            "zips": [
              "rygar.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Scramble_MiSTer",
      "description": "Arcade: Scramble for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Scramble port to MiSTer by Sorgelig\n-- 29 September 2018\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Scramble hardware\n-- Copyright (c) MikeJ - Feb 2007\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   CTRL        : Fire\n--   SPACE       : Bomb\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Scramble_MiSTer",
      "releases": [
        {
          "name": "Amidar.mra",
          "sha": "4c2561793bc7e3f3eae01cc982aa19e897a1090b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Amidar.mra",
          "type": "MRA",
          "extra": {
            "name": "Amidar (Scramble hardware)",
            "rbf": "scramble",
            "zips": [
              "amidar.zip|amidars.zip"
            ]
          }
        },
        {
          "name": "Anteater.mra",
          "sha": "88a0d7b3d5133a46e7558c3a282f1f8b4c04a6dd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Anteater.mra",
          "type": "MRA",
          "extra": {
            "name": "Anteater",
            "rbf": "scramble",
            "zips": [
              "anteater.zip"
            ]
          }
        },
        {
          "name": "Arcade-Scramble_20200223.rbf",
          "sha": "7000301e5c9726369272c995e866549f2484812e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Arcade-Scramble_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Scramble_20200302.rbf",
          "sha": "02688606850de6a09a8533f9405ce3925b7cf039",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Arcade-Scramble_20200302.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Scramble_20200408.rbf",
          "sha": "f84ed405a949ccd83f811484a31afa0b1399ebd9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Arcade-Scramble_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Scramble_20200417.rbf",
          "sha": "7df37ca3c0d60a3ef3e814843fde1b0e0e372909",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Arcade-Scramble_20200417.rbf",
          "type": "RBF"
        },
        {
          "name": "Armored Car.mra",
          "sha": "886701c73d884721a90a89efee161a1d202770a5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Armored%20Car.mra",
          "type": "MRA",
          "extra": {
            "name": "Armored Car",
            "rbf": "scramble",
            "zips": [
              "armorcar.zip"
            ]
          }
        },
        {
          "name": "Battle of Atlantis.mra",
          "sha": "1299aceac0bb64fe80ebeabd91fce6fe885ae2e9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Battle%20of%20Atlantis.mra",
          "type": "MRA",
          "extra": {
            "name": "Battle of Atlantis (set 2)",
            "rbf": "scramble",
            "zips": [
              "atlantis.zip|atlantis2.zip"
            ]
          }
        },
        {
          "name": "Calipso.mra",
          "sha": "01c63a186486d7d27ef54a475f952d7e2208a910",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Calipso.mra",
          "type": "MRA",
          "extra": {
            "name": "Calipso",
            "rbf": "scramble",
            "zips": [
              "calipso.zip"
            ]
          }
        },
        {
          "name": "Dark Planet (no bkg).mra",
          "sha": "8ca5024980379a2560186da34213810cbcbb0681",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Dark%20Planet%20(no%20bkg).mra",
          "type": "MRA",
          "extra": {
            "name": "Dark Planet",
            "rbf": "scramble",
            "zips": [
              "darkplnt.zip"
            ]
          }
        },
        {
          "name": "Dark Planet.mra",
          "sha": "6c4a52564b530f2da072eac8517c7e245365daed",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Dark%20Planet.mra",
          "type": "MRA",
          "extra": {
            "name": "Dark Planet",
            "rbf": "scramble",
            "zips": [
              "darkplnt.zip"
            ]
          }
        },
        {
          "name": "Frogger.mra",
          "sha": "d6fbbb324d873e97eb9ef6ecfc14634d58cdff18",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Frogger.mra",
          "type": "MRA",
          "extra": {
            "name": "Frogger (Sega set 2)",
            "rbf": "scramble",
            "zips": [
              "frogger.zip|froggers2.zip"
            ]
          }
        },
        {
          "name": "Lost Tomb.mra",
          "sha": "15be1ace25100bfa5e37956f472962bfa76e28a6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Lost%20Tomb.mra",
          "type": "MRA",
          "extra": {
            "name": "Lost Tomb",
            "rbf": "scramble",
            "zips": [
              "losttomb.zip"
            ]
          }
        },
        {
          "name": "Mars.mra",
          "sha": "89ca9e98a7893c2b443b79a53556676bd22e1990",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Mars.mra",
          "type": "MRA",
          "extra": {
            "name": "Mars",
            "rbf": "scramble",
            "zips": [
              "mars.zip"
            ]
          }
        },
        {
          "name": "Mighty Monkey.mra",
          "sha": "70c03c2dd1ae05a2aba98a7bc506c8ccee511989",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Mighty%20Monkey.mra",
          "type": "MRA",
          "extra": {
            "name": "Mighty Monkey",
            "rbf": "scramble",
            "zips": [
              "mimonkey.zip"
            ]
          }
        },
        {
          "name": "Minefield.mra",
          "sha": "1ec42406ee60475d72f3a084f77574280211b934",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Minefield.mra",
          "type": "MRA",
          "extra": {
            "name": "Minefield",
            "rbf": "scramble",
            "zips": [
              "minefld.zip"
            ]
          }
        },
        {
          "name": "Moonwar.mra",
          "sha": "536382c024b1af4b8174bdeaeb9fe7a269175981",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Moonwar.mra",
          "type": "MRA",
          "extra": {
            "name": "Moonwar",
            "rbf": "scramble",
            "zips": [
              "moonwar.zip"
            ]
          }
        },
        {
          "name": "Rescue.mra",
          "sha": "02f2fa775ee640c3f4fd4b54b9ba7f5b98d6ed05",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Rescue.mra",
          "type": "MRA",
          "extra": {
            "name": "Rescue",
            "rbf": "scramble",
            "zips": [
              "rescue.zip"
            ]
          }
        },
        {
          "name": "Scramble.mra",
          "sha": "f22fa0f76d2b152216d96f333fe33bcc79ee9e22",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Scramble.mra",
          "type": "MRA",
          "extra": {
            "name": "Scramble (Stern Electronics set 1)",
            "rbf": "scramble",
            "zips": [
              "scramble.zip|scrambles.zip"
            ]
          }
        },
        {
          "name": "Speed Coin.mra",
          "sha": "56632ece3688d71ca5c6d9b6890d9045dbe8790b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Speed%20Coin.mra",
          "type": "MRA",
          "extra": {
            "name": "Speed Coin",
            "rbf": "scramble",
            "zips": [
              "spdcoin.zip"
            ]
          }
        },
        {
          "name": "Strategy X.mra",
          "sha": "6280af20ae576147f4d7c33fe8cc8e0747b58995",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Strategy%20X.mra",
          "type": "MRA",
          "extra": {
            "name": "Strategy X",
            "rbf": "scramble",
            "zips": [
              "stratgyx.zip"
            ]
          }
        },
        {
          "name": "Super Cobra.mra",
          "sha": "cbf53f0d7d2e91379ee68a9986145648a2733452",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Super%20Cobra.mra",
          "type": "MRA",
          "extra": {
            "name": "Super Cobra",
            "rbf": "scramble",
            "zips": [
              "scobra.zip"
            ]
          }
        },
        {
          "name": "Tazz-Mania.mra",
          "sha": "1d9aa53f1f93c5c5fcba0f0f950948d5367c8f6e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Tazz-Mania.mra",
          "type": "MRA",
          "extra": {
            "name": "Tazz-Mania",
            "rbf": "scramble",
            "zips": [
              "tazmania.zip"
            ]
          }
        },
        {
          "name": "The End (bkg).mra",
          "sha": "3deed4374e488582f15bb268113b47b9e9531eee",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/The%20End%20(bkg).mra",
          "type": "MRA",
          "extra": {
            "name": "The End",
            "rbf": "scramble",
            "zips": [
              "theend.zip"
            ]
          }
        },
        {
          "name": "The End.mra",
          "sha": "3946303eb76736d8a0c161b3dcd17d4cadd7b555",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/The%20End.mra",
          "type": "MRA",
          "extra": {
            "name": "The End",
            "rbf": "scramble",
            "zips": [
              "theend.zip"
            ]
          }
        },
        {
          "name": "Turtles.mra",
          "sha": "38416d35c6b38365ef14ba6b3f63ad42d0ef5270",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Scramble_MiSTer/master/releases/Turtles.mra",
          "type": "MRA",
          "extra": {
            "name": "Turtles",
            "rbf": "scramble",
            "zips": [
              "turtles.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-SilverLand_MiSTer",
      "description": "Silver Land Arcade for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- NOTE: THERE ARE KNOWN TRANSPARENCY PROBLEMS -- please fix it!\n--\n-- Arcade: Silver Land port to MiSTer \n-- based on Arcade: Crazy Climber port to MiSTer by Sorgelig\n-- 7 June 2018\n-- \n---------------------------------------------------------------------------------\n-- Crazy climber FPGA by Dar - (darfpga@aol.fr)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F1          : Add coin + Start 1 player\n--   F2          : Add coin + Start 2 players\n--   LEFT,RIGHT  : move boat\n--   CTRL        : ski\n--\n--   5,6 : Add coin\n--   1,2 : Start Player 1, Player 2\n--\n-- Joystick/Gamepad support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-SilverLand_MiSTer",
      "releases": [
        {
          "name": "Arcade-SilverLand_20200509.rbf",
          "sha": "06d374ce832b18b67428a248f7fbe50be5789554",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SilverLand_MiSTer/master/releases/Arcade-SilverLand_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Silver Land.mra",
          "sha": "d6f5b704ee8a5ab98acd9793e736548c04eac7b9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SilverLand_MiSTer/master/releases/Silver%20Land.mra",
          "type": "MRA",
          "extra": {
            "name": "Silver Land",
            "rbf": "silverland",
            "zips": [
              "rpatrol.zip|silvland.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-SnapJack_MiSTer",
      "description": "Arcade: Snap Jack for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Snap Jack port to MiSTer by Sorgelig\n-- 14 November 2017\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Lady Bug hardware\n-- Unknown Author on Papilio Plus board.\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2    : Coin + Start 2 players\n--   F1    : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-SnapJack_MiSTer",
      "releases": [
        {
          "name": "Arcade-SnapJack_20200509.rbf",
          "sha": "4adb73226a7022747ab9d09ad21c2adccc9da81c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SnapJack_MiSTer/master/releases/Arcade-SnapJack_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Snap Jack.mra",
          "sha": "c13834afc753590077a7a5f1b6e8da03e25afdf9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SnapJack_MiSTer/master/releases/Snap%20Jack.mra",
          "type": "MRA",
          "extra": {
            "name": "Snap Jack",
            "rbf": "snapjack",
            "zips": [
              "snapjack.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-SolomonsKey_MiSTer",
      "description": "Arcade: Solomon's Key for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Solomon's Key  port to MiSTer by MiSTer-X\n-- 17 November 2019\n--\n-- https://github.com/MrX-8B/MiSTer-Arcade-SolomonsKey\n-- \n---------------------------------------------------------------------------------\n-- FPGA Solomon's Key for Spartan-6\n------------------------------------------------\n-- Copyright (c) 2014 MiSTer-X\n---------------------------------------------------------------------------------\n-- T80/T80s - Version : 0242\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- YM2149 (AY-3-8910)\n-- Copyright (c) MikeJ - Jan 2005\n---------------------------------------------------------------------------------\n-- MRA files\n----------------------------------------------\n-- written by Bruno Silva (@eubrunosilvapt)\n-------------------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Stone\n--   CTRL        : Fire\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Stone\n--   S           : Player 2 Fire\n--\n-- Joystick support.\n--\n--\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-SolomonsKey_MiSTer",
      "releases": [
        {
          "name": "Arcade-SolomonsKey_20200415.rbf",
          "sha": "45b154db6cb7ab86108a117ee1db14d0cec12dba",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SolomonsKey_MiSTer/master/releases/Arcade-SolomonsKey_20200415.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-SolomonsKey_20200419.rbf",
          "sha": "be4527b69607455f1c2b1481d6e63e043b4d9fd5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SolomonsKey_MiSTer/master/releases/Arcade-SolomonsKey_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Solomon no Kagi (Japan).mra",
          "sha": "152c17abd1fc13ddb8f7243b455ede8e572d6716",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SolomonsKey_MiSTer/master/releases/Solomon%20no%20Kagi%20(Japan).mra",
          "type": "MRA",
          "extra": {
            "name": "Solomon no Kagi (Japan)",
            "rbf": "solomonskey",
            "zips": [
              "solomonj.zip",
              "solomon.zip"
            ]
          }
        },
        {
          "name": "Solomon's Key.mra",
          "sha": "ccd9a89b285619254891f5c0024726eb659a655b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SolomonsKey_MiSTer/master/releases/Solomon's%20Key.mra",
          "type": "MRA",
          "extra": {
            "name": "Solomon's Key (US)",
            "rbf": "solomonskey",
            "zips": [
              "solomon.zip"
            ]
          }
        },
        {
          "name": "rommap.txt",
          "sha": "000c2e9323b1a3a47613a11189e69db06cfaeac8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SolomonsKey_MiSTer/master/releases/rommap.txt",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "Arcade-Sprint1_MiSTer",
      "description": "FPGA MiSTer implementation of Sprint One arcade game released by Kee Games in 1978",
      "readme": "# Sprint1\n\nFPGA implementation by james10952001 of [Sprint One](https://github.com/james10952001/Sprint1 \"Sprint One\") arcade game released by Kee Games in 1978\nPort to MiSTer by Alan Steremberg\n\nThe original Sprint game had a steering wheel with a quadrature encoder. This version implements a converter from the digital joystick inputs.\n\nIn this version the gear number is displayed below the track. This is because on MiSTer there is no physical gearshifter control.\n\n\n# Keyboard inputs :\n```\n   F1          : Coin + Start 1P\n   F2          : Coin + Start 2P\n   LEFT,RIGHT arrows : Steering\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Players\n     D,G         : Player 2 Movements\n   \n\n Joystick support. (Converts the digital joystick to a simulated quadrature encoding)\n```\n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n```\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Sprint1_MiSTer",
      "releases": [
        {
          "name": "Arcade-Sprint1_20200228.rbf",
          "sha": "d6da4b2b33f449a5a6d346bc0ebea2a7298d0d46",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint1_MiSTer/master/releases/Arcade-Sprint1_20200228.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Sprint1_20200316.rbf",
          "sha": "d812953b75e0fd7487a4d8f271fdb66a1bba3f22",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint1_MiSTer/master/releases/Arcade-Sprint1_20200316.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Sprint1_20200408.rbf",
          "sha": "36b590c17a4f89876ef2293e18a30e0eb606c685",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint1_MiSTer/master/releases/Arcade-Sprint1_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Sprint1_20200419.rbf",
          "sha": "ac02e677f208e5d96ef1d23ac0f348504676c758",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint1_MiSTer/master/releases/Arcade-Sprint1_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Sprint 1.mra",
          "sha": "f8eabe6402971cd98d4c5e173f6ccb75ef143a32",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint1_MiSTer/master/releases/Sprint%201.mra",
          "type": "MRA",
          "extra": {
            "name": "Sprint 1",
            "rbf": "sprint1",
            "zips": [
              "sprint1.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Sprint2_MiSTer",
      "description": "FPGA implementation of Sprint 2 arcade game, released by Kee Games in 1976",
      "readme": "# Sprint2\n\nFPGA implementation by james10952001 of [Sprint Two](https://github.com/james10952001/Sprint2 \"Sprint Two\") arcade game released by Kee Games in 1976\n\n\nPort to MiSTer by Alan Steremberg\n\nThe original Sprint game had a steering wheel with a quadrature encoder. This version implements a converter from the digital joystick inputs.\n\nIn this version the gear number is displayed below the track. This is because on MiSTer there is no physical gearshifter control.\n\n# Keyboard inputs :\n```\n   F1          : Coin + Start 1P\n   F2          : Coin + Start 2P\n   LEFT,RIGHT arrows : Steering\n   \n\n Joystick support. (Converts the digital joystick to a simulated quadrature encoding)\n```\n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n```\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Sprint2_MiSTer",
      "releases": [
        {
          "name": "Arcade-Sprint2_20200228.rbf",
          "sha": "bc7f8058d2905845b97f1c779ad69dc616e5755b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint2_MiSTer/master/releases/Arcade-Sprint2_20200228.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Sprint2_20200408.rbf",
          "sha": "2f9bce10309b3bc16f04f03f9f7e36d3525d7a13",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint2_MiSTer/master/releases/Arcade-Sprint2_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Sprint2_20200419.rbf",
          "sha": "e79efcb369922cf37d6b6893486e71dd4a115f77",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint2_MiSTer/master/releases/Arcade-Sprint2_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Sprint 2.mra",
          "sha": "d3fec46350a4ac7374fcc75ce6cdc86bb4af2761",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Sprint2_MiSTer/master/releases/Sprint%202.mra",
          "type": "MRA",
          "extra": {
            "name": "Sprint 2 (set 1)",
            "rbf": "sprint2",
            "zips": [
              "sprint2.zip",
              "sprint1.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-SuperBreakout_MiSTer",
      "description": "FPGA implementation of Super Breakout arcade game released by Atari in 1978",
      "readme": "# SuperBreakout\nFPGA implementation by james10952001 of [Super Breakout](https://github.com/james10952001/SuperBreakout \"SuperBreakout\") arcade game released by Atari in 1978\n\nPort to MiSTer by Alan Steremberg\n\n# Keyboard inputs :\n```\n   F1          : Coin + Start 1P\n   F2          : Coin + Start 2P\n   LEFT,RIGHT arrows : Controls\n   space/ctrl  : Serve\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Players\n     D,G     : Player 2 Movements\n     A           : Player 2 Serve\n Joystick support. (two supported)\n```\n \n# ROMs\n```\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n```\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-SuperBreakout_MiSTer",
      "releases": [
        {
          "name": "Arcade-SuperBreakout_20200509.rbf",
          "sha": "1df8bec38cfcd9612a49fdb5c607f165b3816bac",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SuperBreakout_MiSTer/master/releases/Arcade-SuperBreakout_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Super Breakout.mra",
          "sha": "5cd6a7f539377536d8f5aa113a0d6a095db9c3d2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-SuperBreakout_MiSTer/master/releases/Super%20Breakout.mra",
          "type": "MRA",
          "extra": {
            "name": "Super Breakout (rev 04)",
            "rbf": "superbreakout",
            "zips": [
              "sbrkout.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Tecmo_MiSTer",
      "description": "MiSTer arcade core for Tecmo arcade classics: Rygar (1986), Gemini Wing (1987), and Silkworm (1988).",
      "readme": "# Tecmo\n\nTecmo was a Japanese video game company founded in 1967, who like many other game companies of the era, had their roots outside the amusement business. In Tecmo's case, they were originally a supplier of cleaning equipment.\n\nNevertheless, they went on to create some classic arcade games during the 80s and 90s. Many of which saw later releases on consoles like Nintendo Entertainment System, Sega Master System, Commodore 64, Atari Lynx, etc.\n\nThis core currently supports three games: Rygar (1986), Gemini Wing (1987), and Silkworm (1988).\n\n## Getting Started\n\nPlace the MRA, RBF, and the MAME ROM files in the following locations:\n\n```\n_Arcade/Rygar.mra\n_Arcade/Gemini Wing.mra\n_Arcade/Silkworm.mra\n_Arcade/cores/tecmo.rbf\n_Arcade/mame/rygar.zip\n_Arcade/mame/gemini.zip\n_Arcade/mame/silkworm.zip\n```\n\nFor more information on using MRA files with MiSTer, please refer to the [wiki](https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms).\n\n## Controls\n\nKeyboard inputs:\n\n| name     | key                   |\n| ---      | ---                   |\n| Coin 1   | 5                     |\n| Coin 2   | 6                     |\n| Start 1  | 1                     |\n| Start 2  | 1                     |\n| Button 1 | CTRL                  |\n| Button 2 | ALT                   |\n| Button 3 | SPACE                 |\n| Movement | UP, DOWN, LEFT, RIGHT |\n\nJoystick inputs:\n\n| name     | button                |\n| ---      | ---                   |\n| Coin     | L                     |\n| Start    | R                     |\n| Pause    | START                 |\n| Button 1 | A                     |\n| Button 2 | B                     |\n| Button 3 | X                     |\n| Movement | UP, DOWN, LEFT, RIGHT |\n\n## Credits\n\nMade with :heart: by [Josh Bassett](https://twitter.com/nullobject), 2020.\n\nI would also like to give a massive shout out to all my [Patreon](https://www.patreon.com/nullobject) supporters. Your support keeps me working on these games, and helps bring them to everybody.\n\nSpecial thanks to:\n\n<table>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/avatar.png\" width=\"100px;\" /></td>\n    <td>Alex Painemilla Carre\u00f1o</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/amineko-stone.jpeg\" width=\"100px;\" /></td>\n    <td>Amineko Stone</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/andrew-boudreau.jpg\" width=\"100px;\" /></td>\n    <td>Andrew Boudreau</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/avatar.png\" width=\"100px;\" /></td>\n    <td>Arjan de Lang</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/avatar.png\" width=\"100px;\" /></td>\n    <td>Benjamin Walker</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/christopher-gelatt.png\" width=\"100px;\" /></td>\n    <td>Christopher Gelatt</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/christopher-tuckwell.jpeg\" width=\"100px;\" /></td>\n    <td>Christopher Tuckwell</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/hard-rich.jpeg\" width=\"100px;\" /></td>\n    <td>Hard Rich</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/avatar.png\" width=\"100px;\" /></td>\n    <td>iker</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/lakeside.jpeg\" width=\"100px;\" /></td>\n    <td>Lakeside</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/avatar.png\" width=\"100px;\" /></td>\n    <td>Matt Postema</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/ordigdug.png\" width=\"100px;\" /></td>\n    <td>ordigdug</td>\n  </tr>\n  <tr>\n    <td><img src=\"https://github.com/MiSTer-devel/Arcade-Tecmo_MiSTer/raw/master/doc/scralings.png\" width=\"100px;\" /></td>\n    <td>Scralings</td>\n  </tr>\n</table>\n\nThanks to:\n\nAdrian Longland, Akai Futari, Allen Tipper, Amosfear, Andrew Francomb, Antonio Bellotta, Benjamin Leggett, Charles Sagett, Chris B, Darren Newman, David Filskov, David Jones, Devon Nelson, Filip Kindt, Funkycochise, George Stravopodis, Herbert Krammer, Humanoide70, Jim Wehrfritz, John Perry, John Stringer, Jordan Retterer, JPS (RetroFPGA), Juan Jose Velez Ramirez, Keith Kelly, Leslie Welch, Ludovic Germaneau, Mahendra, Manuel Antoni, Mark Fulton, Mark Paterson, Mat Azel, Matthew, Matthias Penkert-Hennig, Max L Schultz, Max Sch\u00fctz, Michael Fuerst, Michael Yount, Miguel Candelario, Mike Parks, Monokrom, MrX-8B, Naku aka Ben, Octavio Bernacer Sempere, olivier bernhard, Oscar Laguna Garcia, Per Sweden, Phillip McMahon, Porkchop Express, RetroDriven, Ross Jolet, Shane Lynch, Shaneus, SpearZ, Tony Peters, toolb0x, Victor Bly, V\u00edctor Gomariz Ladr\u00f3n de Guevara, Xzarian, Zichio\n\n...and the rest of my supporters :sparkling_heart:\n\n## Development\n\nCompile the core:\n\n    $ make build\n\nProgram the DE10-Nano:\n\n    $ make program\n\n## Licence\n\nThis project is licensed under the MIT licence. See the LICENCE file for more details.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Tecmo_MiSTer",
      "releases": [
        {
          "name": "Arcade-Tecmo_20200615.rbf",
          "sha": "a81ad7da1d4f6f3e5649da34577e2b9c7f674220",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Arcade-Tecmo_20200615.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Tecmo_20200616.rbf",
          "sha": "70c46b90fded1b8e1e5f9f977a9d35eef62ecf81",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Arcade-Tecmo_20200616.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Tecmo_20200620.rbf",
          "sha": "162f2d58686ceaa404eaab16c46cc549cb57bb9b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Arcade-Tecmo_20200620.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Tecmo_20200728.rbf",
          "sha": "deceb0e35ec80a726995203200d3e850f014e870",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Arcade-Tecmo_20200728.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Tecmo_20200810.rbf",
          "sha": "7561c434c0259d2270705e63e8b0d7fd7183ec8e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Arcade-Tecmo_20200810.rbf",
          "type": "RBF"
        },
        {
          "name": "Gemini Wing.mra",
          "sha": "fd7d63532da99e8e0f496311c79ae90860da5d3b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Gemini%20Wing.mra",
          "type": "MRA",
          "extra": {
            "name": "Gemini Wing",
            "rbf": "tecmo",
            "zips": [
              "gemini.zip"
            ]
          }
        },
        {
          "name": "Rygar.mra",
          "sha": "124f16a656afc4e137761054a8fef2e034abbc80",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Rygar.mra",
          "type": "MRA",
          "extra": {
            "name": "Rygar",
            "rbf": "tecmo",
            "zips": [
              "rygar.zip"
            ]
          }
        },
        {
          "name": "Silkworm.mra",
          "sha": "fc29310b08c6ac0f9a56606d7a4ed429989e5b27",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Tecmo_MiSTer/master/releases/Silkworm.mra",
          "type": "MRA",
          "extra": {
            "name": "Silkworm",
            "rbf": "tecmo",
            "zips": [
              "silkworm.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-TimePilot_MiSTer",
      "description": "Arcade: Time Pilot for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Time Pilot port to MiSTer by Sorgelig\n-- 06 November 2017\n-- \n---------------------------------------------------------------------------------\n-- Time pilot by Dar (darfpga@aol.fr) (29/10/2017)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd & io_ps2_keyboard\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- YM2149 (AY-3-8910)\n-- Copyright (c) MikeJ - Jan 2005\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE,CTRL  : Fire  \n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Fire\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-TimePilot_MiSTer",
      "releases": [
        {
          "name": "Arcade-TimePilot_20200509.rbf",
          "sha": "5fdd35bad9c0e90aadb0fcc4834e9a87ef0e5611",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-TimePilot_MiSTer/master/releases/Arcade-TimePilot_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Time Pilot.mra",
          "sha": "3c580ee19f725ff5a36a1ee31c3c9ffc7d02e985",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-TimePilot_MiSTer/master/releases/Time%20Pilot.mra",
          "type": "MRA",
          "extra": {
            "name": "Time Pilot",
            "rbf": "timepilot",
            "zips": [
              "timeplt.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-TraverseUSA_MiSTer",
      "description": "Traverse USA Arcade Core",
      "readme": "---------------------------------------------------------------------------------\r\n--\r\n-- Arcade: Traverse USA by Dar ported to MiSTer\r\n--\r\n---------------------------------------------------------------------------------\r\n--\r\n-- Support screen and controls rotation on HDMI output.\r\n-- Only controls are rotated on VGA output.\r\n--\r\n--\r\n-- Keyboard inputs :\r\n--\r\n--   F1          : Coin + Start 1 player\r\n--   F2          : Coin + Start 2 players\r\n--   F5          : Skip the level\r\n--   SPACE,CTRL  : Action\r\n--   LEFT,RIGHT arrows : Movements\r\n--   space       : gas\r\n--   ctrl        : brake\r\n--\r\n-- MAME/IPAC/JPAC Style Keyboard inputs:\r\n--   5           : Coin 1\r\n--   6           : Coin 2\r\n--   1           : Start 1 Player\r\n--   2           : Start 2 Players\r\n--   R,F,D,G     : Player 2 Movements\r\n--   A           :  Player 2 gas\r\n--   S           :  Player 2 brake\r\n-- Joystick support.\r\n--\r\n                                *** Attention ***\r\n\r\nROMs are not included. In order to use this arcade, you need to provide the\r\ncorrect ROMs.\r\n\r\nTo simplify the process .mra files are provided in the releases folder, that\r\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\r\ncorresponding file of the M.A.M.E. project.\r\n\r\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\r\ninformation on how to setup and use the environment.\r\n\r\nQuickreference for folders and file placement:\r\n\r\n/_Arcade/<game name>.mra\r\n/_Arcade/cores/<game rbf>.rbf\r\n/_Arcade/mame/<mame rom>.zip\r\n/_Arcade/hbmame/<hbmame rom>.zip\r\n\r\n\r\n---------------------------------------------------------------------------------\r\n--  ORIGINAL README:\r\n---------------------------------------------------------------------------------\r\n-- DE10_lite Top level for Traverse USA by Dar (darfpga@aol.fr) (16/03/2019)\r\n-- http://darfpga.blogspot.fr\r\n---------------------------------------------------------------------------------\r\n-- Educational use only\r\n-- Do not redistribute synthetized file with roms\r\n-- Do not redistribute roms whatever the form\r\n-- Use at your own risk\r\n---------------------------------------------------------------------------------\r\n-- Use traverse_usa_de10_lite.sdc to compile (Timequest constraints)\r\n-- /!\\\r\n-- Don't forget to set device configuration mode with memory initialization \r\n--  (Assignments/Device/Pin options/Configuration mode)\r\n---------------------------------------------------------------------------------\r\n--\r\n-- Main features :\r\n--  PS2 keyboard input @gpio pins 35/34 (beware voltage translation/protection) \r\n--  Audio pwm output   @gpio pins 1/3 (beware voltage translation/protection) \r\n--\r\n--  Video         : 15Khz only atm\r\n--  Cocktail mode : OK\r\n--  Sound         : OK\r\n-- \r\n-- For hardware schematic see my other project : NES.\r\n--\r\n-- Uses 1 pll for 36MHz and 3.58MHz generation from 50MHz\r\n--\r\n--\r\n-- Board key :\r\n--   0 : reset game\r\n--\r\n-- Keyboard players inputs :\r\n--\r\n--   F3 : Add coin\r\n--   F2 : Start 2 players\r\n--   F1 : Start 1 player\r\n--   SPACE       : Fire  \r\n--   RIGHT arrow : turn right\r\n--   LEFT  arrow : turn left\r\n--   UP    arrow : speed up \r\n--   DOWN  arrow : speed down\r\n--\r\n-- Other details : see traverse_usa.vhd\r\n-- For USB inputs and SGT5000 audio output see my other project: xevious_de10_lite\r\n---------------------------------------------------------------------------------\r\n---------------------------------------------------------------------------------\r\n-- Traverse USA by Dar (darfpga@aol.fr) (16/03/2019)\r\n-- http://darfpga.blogspot.fr\r\n---------------------------------------------------------------------------------\r\n-- gen_ram.vhd & io_ps2_keyboard\r\n-------------------------------- \r\n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\r\n-- http://www.syntiac.com/fpga64.html\r\n---------------------------------------------------------------------------------\r\n-- T80/T80se - Version : 0247\r\n-----------------------------\r\n-- Z80 compatible microprocessor core\r\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\r\n---------------------------------------------------------------------------------\r\n-- cpu68 - Version 9th Jan 2004 0.8\r\n-- 6800/01 compatible CPU core \r\n-- GNU public license - December 2002 : John E. Kent\r\n---------------------------------------------------------------------------------\r\n-- YM2149 (AY-3-8910)\r\n-- Copyright (c) MikeJ - Jan 2005\r\n---------------------------------------------------------------------------------\r\n-- Educational use only\r\n-- Do not redistribute synthetized file with roms\r\n-- Do not redistribute roms whatever the form\r\n-- Use at your own risk\r\n---------------------------------------------------------------------------------\r\n\r\n--  Features :\r\n--   Video        : TV 15KHz mode only (atm)\r\n--   Coctail mode : OK\r\n--   Sound        : OK\r\n\r\n--  Use with MAME roms from travusa.zip\r\n--\r\n--  Use make_travusa_proms.bat to build vhd file from binaries\r\n--  (CRC list included)\r\n\r\n--  Traverse USA (irem M52) Hardware caracteristics :\r\n--\r\n--  VIDEO : 1xZ80@3MHz CPU accessing its program rom, working ram,\r\n--    sprite data ram, I/O, sound board register and trigger.\r\n--\t\t  32Kx8bits program rom\r\n--\r\n--    One char tile map 64x32 with H scrolling (32x32 visible)\r\n--      8Kx24bits graphics rom 3bits/pixel\r\n--      8colors per tile / 16 color sets\r\n--      rbg palette 128 colors 8bits : 2red 3green 3blue\r\n--\r\n--    72 sprites / line, 16x16 with flip H/V\r\n--    (schematics seems too allow only 24 sprites / line with bank switch\r\n--     at mid screen. This doesn't allow showing all needed sprite)\r\n--\r\n--      8Kx24bits graphics rom 3bits/pixel\r\n--      8colors per sprite / 32 color sets among 16 colors;\r\n--      rbg palette 16 colors 8bits : 2red 3green 3blue\r\n--\r\n--    Working ram : 4Kx8bits\r\n--    Sprites data ram : 256x8bits\r\n--    Sprites line buffer rams : 1 scan line delay flip/flop 2x256x4bits\r\n--\r\n--  SOUND : 1x6803@3.58MHz CPU accessing its program rom, working ram, 2x-AY3-8910, 1xMSM5205\r\n--\t\t  4Kx8bits program rom\r\n--      128x8bits working ram\r\n--\r\n--      1xAY-3-8910\r\n--\t\tI/O to MSM5205 and command/trigger from video board.\r\n--\t\t3 sound channels\r\n--\r\n--      1xAY-3-8910\r\n--\t\t3 sound channels\r\n--\r\n---------------------------------------------------------------------------------\r\n--  Schematics remarks :\r\n--\r\n--\tFrame is 384 x 282 (H x V) which is too much lines for standard TV set (262.5 lines)\r\n--\tThis create a display artefact near end of frame since already entering composite \r\n--\tsync egalisation pulses. Line number cannot be reduced since CPU need enough fly back\r\n--\ttime to update every sprites position. (Reducing line count will result in missing sprites)\r\n--\tMay be this can be achieved by increasing CPU clock speed (web site and MAME report 4Mhz)\r\n-- \tMy  M52-A schematic clearly shows 18.432/6.\r\n--\r\n--\t=> I give more CPU time to access sprite ram data by allowing CPU access as soon as video\r\n--\tscanner V is outside the sprite zone i.e. outside the scroling part of screen (which\r\n--\tdepends on the flip screen state).\r\n--\t\t\r\n--\tMoreover M52-B schematic doesn't show to allow seeking more than 24 sprites data per\r\n--\tline from :\r\n--\t\t- C820 to C87F for half upper screen (vertical)\r\n--\t\t- C8A0 to C8FF for half lower screen (vertical)\r\n--\r\n--\tBut, at beginning of the game, during starting count downto, 5 cars are diplayed +\r\n--\tmoto + count down numbers. At least some sprite cars data comes not only from \r\n--\tC820-C87F but also from C920 to C97F. Which involves at least 2 sprite data regions \r\n--\tfor the same half part of the screen (see cars numbered 0 and 3).\r\n--\r\n--\t=> I modify the sprite data address scanner to allow 3 regions to be scanned at each line\r\n--\t(C820-C87F, C8A0-C8FF and C920-C97F). My first design was with a 12MHz master clock to\r\n--\tallow 1 read and 1 write access to sprite line buffer ram at each pixel (6Mhz). This\r\n--\tpermit only one sprite data region to be scanned at each line. The master clock was \r\n--\tincreased from 12Mhz to\t36Mhz and desing modified to allow 3 sprite data regions to be\r\n--\tscanned at each line.\r\n--\r\n---------------------------------------------------------------------------------\r\n\r\n+----------------------------------------------------------------------------------+\r\n; Fitter Summary                                                                   ;\r\n+------------------------------------+---------------------------------------------+\r\n; Fitter Status                      ; Successful - Sat Mar 16 11:45:10 2019       ;\r\n; Quartus Prime Version              ; 18.1.0 Build 625 09/12/2018 SJ Lite Edition ;\r\n; Revision Name                      ; traverse_usa_de10_lite                      ;\r\n; Top-level Entity Name              ; traverse_usa_de10_lite                      ;\r\n; Family                             ; MAX 10                                      ;\r\n; Device                             ; 10M50DAF484C6GES                            ;\r\n; Timing Models                      ; Preliminary                                 ;\r\n; Total logic elements               ; 5,181 / 49,760 ( 10 % )                     ;\r\n;     Total combinational functions  ; 4,944 / 49,760 ( 10 % )                     ;\r\n;     Dedicated logic registers      ; 1,390 / 49,760 ( 3 % )                      ;\r\n; Total registers                    ; 1390                                        ;\r\n; Total pins                         ; 105 / 360 ( 29 % )                          ;\r\n; Total virtual pins                 ; 0                                           ;\r\n; Total memory bits                  ; 766,976 / 1,677,312 ( 46 % )                ;\r\n; Embedded Multiplier 9-bit elements ; 0 / 288 ( 0 % )                             ;\r\n; Total PLLs                         ; 1 / 4 ( 25 % )                              ;\r\n; UFM blocks                         ; 0 / 1 ( 0 % )                               ;\r\n; ADC blocks                         ; 0 / 2 ( 0 % )                               ;\r\n+------------------------------------+---------------------------------------------+\r\n\r\n---------------\r\nVHDL File list \r\n---------------\r\n\r\nmax10_pll_36p86M_3p58M.vhd         Pll 36.86MHz and 3.58MHz from 50MHz altera mf\r\n\r\nrtl_dar/traverse_usa_de10_lite.vhd  Top level for de10_lite board\r\nrtl_dar/traverse_usa.vhd            Main video board logic\r\nrtl_dar/moon_patrol_sound_board.vhd Main sound board logic\r\n\r\nrtl_mikej/YM2149_linmix.vhd        Copyright (c) MikeJ - Jan 2005\r\nrtl6_jkent/cpu68.vhd               GNU public license - December 2002 : John E. Kent\r\n\r\nrtl_T80/T80se.vhdT80               Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\r\nrtl_T80/T80_Reg.vhd\r\nrtl_T80/T80_Pack.vhd\r\nrtl_T80/T80_MCode.vhd\r\nrtl_T80/T80_ALU.vhd\r\nrtl_T80/T80.vhd\r\n\r\nrtl_dar/kbd_joystick.vhd           Keyboard key to player/coin input\r\nrtl_dar/io_ps2_keyboard.vhd        Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\r\nrtl_dar/gen_ram.vhd                Generic RAM (Peter Wendrich + DAR Modification)\r\nrtl_dar/decodeur_7_seg.vhd         7 segments display decoder\r\n\r\nrtl_dar/proms/travusa_cpu.vhd          PROMS\r\nrtl_dar/proms/travusa_sound.vhd\r\nrtl_dar/proms/travusa_spr_rgb_lut.vhd\r\nrtl_dar/proms/travusa_spr_palette.vhd\r\nrtl_dar/proms/travusa_chr_palette.vhd\r\nrtl_dar/proms/travusa_spr_bit3.vhd\r\nrtl_dar/proms/travusa_spr_bit2.vhd\r\nrtl_dar/proms/travusa_spr_bit1.vhd\r\nrtl_dar/proms/travusa_chr_bit3.vhd\r\nrtl_dar/proms/travusa_chr_bit2.vhd\r\nrtl_dar/proms/travusa_chr_bit1.vhd\r\n\r\n----------------------\r\nQuartus project files\r\n----------------------\r\nde10_lite/traverse_usa_de10_lite.sdc   Timequest constraints file\r\nde10_lite/traverse_usa_de10_lite.qsf   de10_lite settings (files,pins...) \r\nde10_lite/traverse_usa_de10_lite.qpf   de10_lite project\r\n\r\n-----------------------------\r\nRequired ROMs (Not included)\r\n-----------------------------\r\nYou need the following 14 ROMs binary files from travusa.zip (MAME)\r\n\r\nzr1-0.m3     CRC(be066c0a) \r\nzr1-5.l3     CRC(145d6b34) \r\nzr1-6a.k3    CRC(e1b51383) \r\nzr1-7.j3     CRC(85cd1a51)\r\nmr10.1a      CRC(a02ad8a0)\r\nzippyrac.001 CRC(aa8994dd)\r\nmr8.3c       CRC(3a046dd1)\r\nmr9.3a       CRC(1cc3d3f4)\r\nzr1-8.n3     CRC(3e2c7a6b)\r\nzr1-9.l3     CRC(13be6a14)\r\nzr1-10.k3    CRC(6fcc9fdb)\r\nmmi6349.ij   CRC(c9724350)\r\ntbp18s.2     CRC(a1130007)\r\ntbp24s10.3   CRC(76062638)\r\n\r\n------\r\nTools \r\n------\r\nYou need to build vhdl files from the binary file :\r\n - Unzip the roms file in the tools/travusa_unzip directory\r\n - Double click (execute) the script tools/make_travusa_proms.bat to get the following files\r\n\r\ntravusa_cpu.vhd\r\ntravusa_sound.vhd\r\ntravusa_spr_rgb_lut.vhd\r\ntravusa_spr_palette.vhd\r\ntravusa_chr_palette.vhd\r\ntravusa_spr_bit3.vhd\r\ntravusa_spr_bit2.vhd\r\ntravusa_spr_bit1.vhd\r\ntravusa_chr_bit3.vhd\r\ntravusa_chr_bit2.vhd\r\ntravusa_chr_bit1.vhd\r\n\r\n*DO NOT REDISTRIBUTE THESE FILES*\r\n\r\nVHDL files are needed to compile and include roms into the project \r\n\r\nThe script make_travusa_proms.bat uses make_vhdl_prom executables delivered both in linux and windows version. The script itself is delivered only in windows version (.bat) but should be easily ported to linux.\r\n\r\nSource code of make_vhdl_prom.c is also delivered.\r\n\r\n---------------------------------\r\nCompiling for de10_lite\r\n---------------------------------\r\nYou can build the project with ROM image embeded in the sof file.\r\n*DO NOT REDISTRIBUTE THESE FILES*\r\n\r\n3 steps\r\n\r\n - put the VHDL ROM files (.vhd) into the rtl_dar/proms directory\r\n - build travusa_de10_lite\r\n - program travusa_de10_lite.sof\r\n\r\n------------------------\r\n------------------------\r\nEnd of file\r\n------------------------\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-TraverseUSA_MiSTer",
      "releases": [
        {
          "name": "Arcade-TraverseUSA_20200509.rbf",
          "sha": "11b6669e463cb4021fd6d08b3ad0413127352d7e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-TraverseUSA_MiSTer/master/releases/Arcade-TraverseUSA_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Traverse USA - Zippy Race.mra",
          "sha": "a9ed60a0137702c4ef8dfd853eb7052087a143d1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-TraverseUSA_MiSTer/master/releases/Traverse%20USA%20-%20Zippy%20Race.mra",
          "type": "MRA",
          "extra": {
            "name": "Traverse USA - Zippy Race",
            "rbf": "traverseusa",
            "zips": [
              "travrusa.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Ultratank_MiSTer",
      "description": "Ultratank core for MiSTer ",
      "readme": "# Ultratnk\n\nFPGA implementation by james10952001 of [Ultratank](https://github.com/james10952001/UltraTank) arcade game released by Kee Games in 1976\n\nPort to MiSTer by Aitor Pelaez (NeuroRulez)\nUses the Top level .sv of sprint2 created by Alan Steremberg, i'm learning the MiSTer framework.\n\nThe original Ultratank has 2 levers and one button for player to control. This version implemente one Joystick for player.\nThe original Ultratank was B&W, but has three signal of colors form the image generation (rgb?) who never used.\nI generate the colors from that tree signals mixing it in rgb form. You can select it in OSD.\n\nThere are 3 modes to change the gameplay in the OSD:\n\nVisible or invisible tanks (Only make visible when fire)\n\nRebouncing fire or Remote control Fire\n\nBarriers or open field.\n\n# Keyboard inputs :\n```\n\t5  Insert Coin\n\t1  Start Player 1\n\t2  Start Player 2\n\t\n Joystick support. \n```\n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n```\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Ultratank_MiSTer",
      "releases": [
        {
          "name": "Arcade-Ultratank_20200223.rbf",
          "sha": "73dcd0a58026cddff43d119f268ed47678b55d67",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Ultratank_MiSTer/master/releases/Arcade-Ultratank_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Ultratank_20200408.rbf",
          "sha": "0afef3966ac2dd8f22b512d270b4a62d783d69fb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Ultratank_MiSTer/master/releases/Arcade-Ultratank_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Ultratank_20200419.rbf",
          "sha": "75613b51c796190d329dc2cfce8b5abfa25d82a7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Ultratank_MiSTer/master/releases/Arcade-Ultratank_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Ultra Tank.mra",
          "sha": "ac540b0147a762efd6da3494cc1bdc51f18bb242",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Ultratank_MiSTer/master/releases/Ultra%20Tank.mra",
          "type": "MRA",
          "extra": {
            "name": "Ultra Tank",
            "rbf": "ultratank",
            "zips": [
              "ultratnk.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Xevious_MiSTer",
      "description": "Arcade: Xevious for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Xevious port to MiSTer by Sorgelig\n-- 23 October 2017\n-- \n---------------------------------------------------------------------------------\n-- Xevious by Dar (darfpga@aol.fr) (01 May 2017)\n-- http://darfpga.blogspot.fr\n---------------------------------------------------------------------------------\n-- gen_ram.vhd\n-------------------------------- \n-- Copyright 2005-2008 by Peter Wendrich (pwsoft@syntiac.com)\n-- http://www.syntiac.com/fpga64.html\n---------------------------------------------------------------------------------\n-- T80/T80se - Version : 0247\n-----------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F3          : Add coin\n--   F2          : Start 2 players\n--   F1          : Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Fire  \n--   CTRL        : Bomb\n--\n-- Joystick support.\n-- \n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\nTo generate the ROM using Windows:\n1) Copy the zip into \"releases\" directory\n2) Execute bat file - it will show the name of zip file containing required files.\n3) Put required zip into the same directory and execute the bat again.\n4) If everything will go without errors or warnings, then you will get the a.*.rom file.\n5) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using Linux/MacOS:\n1) Copy the zip into \"releases\" directory\n2) Execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n\nTo generate the ROM using MiSTer:\n1) scp \"releases\" directory along with the zip file onto MiSTer:/media/fat/\n2) Using OSD execute build_rom.sh\n3) Copy generated a.*.rom into root of SD card along with the Arcade-*.rbf file\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Xevious_MiSTer",
      "releases": [
        {
          "name": "Arcade-Xevious_20200219.rbf",
          "sha": "30e702fe74842fdd0d5786b05d55449d0f7e282f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Xevious_MiSTer/master/releases/Arcade-Xevious_20200219.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Xevious_20200222.rbf",
          "sha": "6d6ea1d647c216db91a38b00625b3493d6cb5f9b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Xevious_MiSTer/master/releases/Arcade-Xevious_20200222.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Xevious_20200223.rbf",
          "sha": "39434985364a5c796179752b142c66b3fa888ddd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Xevious_MiSTer/master/releases/Arcade-Xevious_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Xevious_20200408.rbf",
          "sha": "1d43896c029d5dd2570f42d63274afae78155328",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Xevious_MiSTer/master/releases/Arcade-Xevious_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Xevious_20200414.rbf",
          "sha": "437061acb10a73d4c95880695c39b4f0a10602e4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Xevious_MiSTer/master/releases/Arcade-Xevious_20200414.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Xevious_20200419.rbf",
          "sha": "f7d877fe0cd3ad5bd88816e91d44349bfb5d55f3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Xevious_MiSTer/master/releases/Arcade-Xevious_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Xevious.mra",
          "sha": "668943efea992aa06615a83cc55bbde3a1d40b00",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Xevious_MiSTer/master/releases/Xevious.mra",
          "type": "MRA",
          "extra": {
            "name": null,
            "rbf": "Xevious",
            "zips": [
              "xevious.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-Zaxxon_MiSTer",
      "description": "VHDL Zaxxon",
      "readme": "# Sega/Gremlin Zaxxon port for MiSTer\n\n# Keyboard inputs :\n```\n   ESC         : Coin 1\n   F1          : Start 1P\n   F2          : Start 2P \n   UP,DOWN,LEFT,RIGHT arrows : Player 1\n   LCtrl : Fire A\n\n\n   MAME/IPAC/JPAC Style Keyboard inputs:\n     5           : Coin 1\n     6           : Coin 2\n     1           : Start 1 Player\n     2           : Start 2 Player\n     R,F,D,G     : Player 2\n     A           : Fire2 A\n\t\n Joystick support. \n```\n# Games\n \n# ROMs\n```\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\nPut rom on your SD card. Example directory : _Arcade/mame/\n\n```\n\nLaunch game using the appropriate .MRA\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-Zaxxon_MiSTer",
      "releases": [
        {
          "name": "Arcade-Zaxxon_20200506.rbf",
          "sha": "d76609c36f3ae2d77cb38b92e9b6ec96ba4e02a9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Zaxxon_MiSTer/master/releases/Arcade-Zaxxon_20200506.rbf",
          "type": "RBF"
        },
        {
          "name": "zaxxon.mra",
          "sha": "503c7d38147f279836c4fcb4c036fade263eb3de",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-Zaxxon_MiSTer/master/releases/zaxxon.mra",
          "type": "MRA",
          "extra": {
            "name": "Zaxxon",
            "rbf": "zaxxon",
            "zips": [
              "zaxxon.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Arcade-ZigZag_MiSTer",
      "description": "Arcade ZigZag for MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: ZigZag for MiSTer by Sorgelig\n-- 19 December 2018\n-- \n---------------------------------------------------------------------------------\n-- A simulation model of Galaxian hardware\n-- Copyright(c) 2004 Katsumi Degawa\n---------------------------------------------------------------------------------\n-- \n-- Support screen and controls rotation on HDMI output.\n-- Only controls are rotated on VGA output.\n-- \n-- \n-- Keyboard inputs :\n--\n--   F2         : Coin + Start 2 players\n--   F1         : Coin + Start 1 player\n--   SPACE,CTRL : Fire\n--   UP,DOWN,LEFT,RIGHT : Movements\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--\n--\n-- Joystick support.\n-- \n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROMs are not included. In order to use this arcade, you need to provide the\ncorrect ROMs.\n\nTo simplify the process .mra files are provided in the releases folder, that\nspecifies the required ROMs with checksums. The ROMs .zip filename refers to the\ncorresponding file of the M.A.M.E. project.\n\nPlease refer to https://github.com/MiSTer-devel/Main_MiSTer/wiki/Arcade-Roms for\ninformation on how to setup and use the environment.\n\nQuickreference for folders and file placement:\n\n/_Arcade/<game name>.mra\n/_Arcade/cores/<game rbf>.rbf\n/_Arcade/mame/<mame rom>.zip\n/_Arcade/hbmame/<hbmame rom>.zip\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arcade-ZigZag_MiSTer",
      "releases": [
        {
          "name": "Arcade-ZigZag_20200509.rbf",
          "sha": "dbb9755e38fb31cb2b0de96ab934b2ca402e6ddf",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ZigZag_MiSTer/master/releases/Arcade-ZigZag_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-ZigZag_20201009.rbf",
          "sha": "dbb9755e38fb31cb2b0de96ab934b2ca402e6ddf",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ZigZag_MiSTer/master/releases/Arcade-ZigZag_20201009.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-ZigZag_20201010.rbf",
          "sha": "dbb9755e38fb31cb2b0de96ab934b2ca402e6ddf",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ZigZag_MiSTer/master/releases/Arcade-ZigZag_20201010.rbf",
          "type": "RBF"
        },
        {
          "name": "Zig Zag.mra",
          "sha": "4239ed2641641acdf584887db958a66a507969f4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arcade-ZigZag_MiSTer/master/releases/Zig%20Zag.mra",
          "type": "MRA",
          "extra": {
            "name": "Zig Zag (Dig Dug conversion on Galaxian hardware, bootleg set 1)",
            "rbf": "zigzag",
            "zips": [
              "zigzagb.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "Archie_MiSTer",
      "description": "Acorn Archimedes for MiSTer",
      "readme": "# Acorn Archimedes for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\r\n\r\n### This is the port of [Archie](https://github.com/mist-devel/mist-board/tree/master/cores/archie) core from MiST by Stephen Leary\r\n\r\n**CURRENTLY THIS CORE IS IN BETA STATUS**\r\n\r\n1. Basic internals are implemented.\r\n1. Basic Floppy disk support\r\n1. Sound support added but may not work in all situations.\r\n1. The core emulates a 4Mb A3000 type machine with an ARM2a with caches disabled for now (has an A3010 style joystick interface).\r\n1. Core runs at ~91% of an ARM2 @ 8Mhz when using VGA Modes.\r\n1. Some games now run. Expect issues.\r\n\r\n## Installation\r\n\r\nCopy the [*.rbf](https://github.com/MiSTer-devel/Archie_MiSTer/tree/master/releases) into a root folder of the SD card.\r\nCopy a version of a RiscOS ROM into the \"Archie\" folder, renaming it to `riscos.rom`.\r\n\r\n### Floppy disk images\r\n\r\nThe current version supports two floppy drives. Floppy disk images ADF format and of exactly 819200 bytes in size are currently required. This is the most common format for the Acorn Archimedes.\r\n\r\nImages named `floppy0.adf` and `floppy1.adf` (from Archie folder) are auto-inserted into the floppy disk drives on startup. Other images can be selected via the on-screen-display (OSD) which can be opened using the **WIN+F12** key combo.\r\n\r\n\r\n## OSD Menu\r\n\r\nIf the ROM is recognized the core should boot into Risc OS.\r\nPress **Win+F12** to open the OSD menu.\r\n\r\n* Floppy 0: Choose the floppy disk images to use for floppy 0\r\n* Floppy 1: Choose the floppy disk images to use for floppy 1\r\n* OS ROM: Choose the RISCOS rom to use\r\n* Save config: Save current config for next boot\r\n\r\nYou can move to other pages of settings by pressing the right arrow key.\r\n\r\n## Notes\r\n\r\n* CPU module (amber23) has no reset signal, so the only way to reset the core is to reload it. MiSTer will help to reload the core if **USER** button is pressed (or reset combo pressed on keyboard) and core file is named as **\"Archie.rbf\"**. Otherwise you can reload the core manually from menu (**Win+Alt+F12**).\r\n\r\n\r\n# License\r\n\r\nThis core uses the Amber CPU core from OpenCores which is LGPL.\r\nThe core itself is dual licensed LGPL/BSD.\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Archie_MiSTer",
      "releases": [
        {
          "name": "Archie_20200229.rbf",
          "sha": "3cd2a81a5b13fead9946ba4f2093e01d1065c80b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Archie_MiSTer/master/releases/Archie_20200229.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20200408.rbf",
          "sha": "913f0cc3c8f39aae3daf5ac091d80a499199b6fe",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Archie_MiSTer/master/releases/Archie_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20200420.rbf",
          "sha": "b3a182932b4f59b32f4e1359c912a5955b914738",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Archie_MiSTer/master/releases/Archie_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20200509.rbf",
          "sha": "7e63f17e9ca3592d64b3b77eb98efc8ed8c3199b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Archie_MiSTer/master/releases/Archie_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Archie_20200510.rbf",
          "sha": "7e63f17e9ca3592d64b3b77eb98efc8ed8c3199b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Archie_MiSTer/master/releases/Archie_20200510.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Arduboy_MiSTer",
      "description": "Arduboy core for MiSTer, based on Iulian Gheorghiu's atmega core.",
      "readme": "# Arduboy_MiSTer\n\nArduboy core for MiSTer, ported by Dan O'Shea and based on Iulian Gheorghiu's atmega core:\n\nhttps://github.com/MorgothCreator/atmega-xmega-soft-core\n\nA collection of .bin files converted and tested so far can be found here (you can hit the green 'Clone or download' button, and then 'Download ZIP' to get them all at once):\n\nhttps://github.com/uXeBoy/ArduboyCollection\n\nArduboy .hex files first need to be converted to .bin using hex2bin (and be sure to use the command line option `-l 8000` to pad the files out to 32K):\n\nhttps://sourceforge.net/projects/hex2bin/\n\nTODO: work on more complete sound support, look at making EEPROM non-volatile, improve stability (some games will randomly reset, or not run at all), pull requests / improvements welcome!\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Arduboy_MiSTer",
      "releases": [
        {
          "name": "Arduboy_20200510.rbf",
          "sha": "8975cbb3b1e64bd71d1744d0819a88a7a4602b33",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arduboy_MiSTer/master/releases/Arduboy_20200510.rbf",
          "type": "RBF"
        },
        {
          "name": "Arduboy_20200513.rbf",
          "sha": "7e4bab354fe9b6e2466bfea2994141d93c5b6637",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arduboy_MiSTer/master/releases/Arduboy_20200513.rbf",
          "type": "RBF"
        },
        {
          "name": "Arduboy_20200517.rbf",
          "sha": "9ab642555977b332ce6d1c6474e8f0a1fbc3908e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Arduboy_MiSTer/master/releases/Arduboy_20200517.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Astrocade_MiSTer",
      "description": "Bally Astrocade for MiSTer",
      "readme": "# Bally Astrocade for [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\n### This is an FPGA implementation of the Bally Astrocade based on a project by MikeJ.\n\n## Features\n * Supports full keypad.\n * Supports paddle control as analog stick.\n\n## Installation\nCopy the Astrocade_\\*.rbf file to the root of the SD card. Create an **Astrocade** folder on the root of the card, and place Astrocade roms (\\*.BIN) inside this folder. Search the web for a copy of the Bally Astrocade BIOS and rename it **boot.rom** and then place it in the **Astrocade** folder. Use the keyboard to select the game if prompted.\n\n## Astrocade Controls\nThe Astrocade had a very unusual controller. It was a gun-grip style handle with a joystick on the top, which had an integrated pot switch serving as a paddle control. This translates poorly to modern controllers. MiSTer only offers analog data for the first two axes of the controller, which is most often the left analog stick. For games which require paddle controls, directional movement, and the trigger button used together, I suggest mapping the controller such that the right analog stick is dpad motion, one of the shoulder buttons is the trigger button, and the left analog stick is the paddle.\n\n## Cart Expansions\nNo cart expansions are implemented at this time.\n\n## Known Issues\nThe video timings of the Astrocade seem to create problems with the first and last lines of each field. This seems to work okay on actual CRTs, but scandoublers like OSSC may be confused by it.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Astrocade_MiSTer",
      "releases": [
        {
          "name": "Astrocade_20200510.rbf",
          "sha": "ce196bcfc357bc1f4af0477161d9f3c109191954",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Astrocade_MiSTer/master/releases/Astrocade_20200510.rbf",
          "type": "RBF"
        },
        {
          "name": "Astrocade_20200513.rbf",
          "sha": "370893e7edc79981c6baabc170d3ffe2de5b6f5a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Astrocade_MiSTer/master/releases/Astrocade_20200513.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Atari2600_MiSTer",
      "description": "Atari 2600 for MiSTer",
      "readme": "# Atari 2600 for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\n### This is the port of [A2601 by  Retromaster](http://retromaster.wordpress.com/a2601)\n\n### Installation\n* Copy the *.rbf file to the root of the system SD card.\n* Place some Atari 2600 ROMs into Atari2600 folder\n\n## Usage notes\n\n### Paddle\nIt's recommended to use mr.Spinner for paddles.\n\nSupported options for paddle:\n* \"Paddle Btn\" is pressed - mr.Spinner (or known controllers with integrated paddle/spinner) is used .\n* \"Stick Btn\" is pressed - Analog Stick X/Y is used (maximum angle will choose X or Y).\n* Mouse button L/R is pressed - mouse controlls the P1 paddle (L - X move, R - Y move).\n\n\n### Supported mappers\n* Auto detected: F8, FA, F6, F4, FA, 32\n* Manual set through file extension(ex: my_game.E0) : E0, FE, 3F, P2, CV, UA, E7, F0\n* SuperChip (128b RAM). 's' can be added to extension to automatically enable SuperChip (i.e. my_game.00s).\n* Any supported mapper can be forced through file extension.\n\n\n## Download precompiled binaries\nGo to [releases](https://github.com/MiSTer-devel/Atari2600_MiSTer/tree/master/releases) folder.\n\n\n## Original readme\nA2601 An FPGA-based clone of the Atari 2600 video game console (Release 0.1.0)\n\nThis archive contains source code for VHDL implementation and Python script utilities for the A2601 video game console project.\n\nVHDL source code provided includes implementation of the 6502(7) CPU, the TIA, the 6532 RIOT, additional audio/video/joypad circuitry and bankswitching schemes plus additional RAM used by some game cartridges. Test benches are supplied for all main components (although they may be slightly out of date).\n\nThe 6502 CPU core has been developed from scratch for this project. It contains hand-crafted finite state machine and controls that implement all documented 6502 opcodes. It synthesizes quickly and has good performance in the simulator. \n\nThe TIA implementation digitally synthesizes NTSC composite video signal via a lookup table that contains a sequence of values that signifies a sine wave at correct phase for each one of the 16 chrominance values selectable in the TIA. \n\nYou should be able to synthesize the A2601 in Xilinx ISE without any major problems. No project files are included, but it is best to create these yourself, anyway. Two top level entities are provided: One reads cartridge ROM data from on-board flash memory, the other stores the ROM data in the FPGA built-in SRAM. It is also possible to run A2601 sources in a VHDL simulator. Some helper utilities and a test bench are provided for this purpose in the A2601/util directory.\n\nFor more information, visit the project website at <http://retromaster.wordpress.com/a2601>.\n\nAll source code and other content found in this archive is subject to GNU General Public License Version 3. See the included LICENSE.TXT file for details.\n\nCopyright 2006, 2007, 2010 Retromaster.\n\n\n# Appendix: Mappers\n\n| Title | Bankswitch Type (Extension) | TV Format | MD5 |\n| ----- | :-------------------------: | :-------: | --- |\n| 2 Pak Special - Challenge, Surfing | F6 | PAL | fd7464edaa8cc264b97ba0d13e7f0678 |\n| 2 Pak Special - Hoppy, Alien Force | F6 | PAL | 5b9c2e0012fbfd29efd3306359bbfc4a |\n| 2 Pak Special - Star Warrior, Frogger | F6 | PAL | 4d2cef8f19cafeec72d142e34a1bbc03 |\n| 32 in 1 Game Cartridge | 32 | PAL | 291bcdb05f2b37cdf9452d2bf08e0321 |\n| 3-D Tic-Tac-Toe | | NTSC | 0db4f4150fecf77e4ce72ca4d04c052f |\n| 3-D Tic-Tac-Toe | | NTSC | f3213a8a702b0646d2eaf9ee0722b51c |\n| 3-D Tic-Tac-Toe | | PAL | 7b5207e68ee85b16998bea861987c690 |\n| Misterious Thief, A | | NTSC | e13818a5c0cb2f84dd84368070e9f099 |\n| A-Team, The | F8 | NTSC | c00734a2233ef683d9b6e622ac97a5c8 |\n| Acid Drop | F6 | PAL | 17ee23e5da931be82f733917adcb6386 |\n| Action Force | | PAL | d573089534ca596e64efef474be7b6bc |\n| Adventure | | NTSC | 157bddb7192754a45372be196797f284 |\n| Adventures of TRON | | NTSC | ca4f8c5b4d6fb9d608bb96bc7ebd26c7 |\n| Adventures on GX-12 | | PAL | 06cfd57f0559f38b9293adae9128ff88 |\n| Air Raid | | PAL | 35be55426c1fec32dfb503b4f0651572 |\n| Air Raiders | | NTSC | a9cb638cd2cb2e8e0643d7a67db4281c |\n| Air-Sea Battle | | NTSC | 16cb43492987d2f32b423817cdaaf7c4 |\n| Air-Sea Battle | | NTSC | 1d1d2603ec139867c1d1f5ddf83093f1 |\n| Air-Sea Battle | | PAL | 8aad33da907bed78b76b87fceaa838c1 |\n| Airlock | | NTSC | 4d77f291dca1518d7d8e47838695f54b |\n| Go Go Home Monster | | PAL | 103f1756d9dc0dd2b16b53ad0f0f1859 |\n| Alien | | NTSC | f1a0a23e6464d954e3a9579c4ccd01c8 |\n| Alligator People | | NTSC | e1a51690792838c5c687da80cd764d78 |\n| Alpha Beam with Ernie | F8 | NTSC | 9e01f7f95cb8596765e03b9a36e8e33c |\n| Amidar | | NTSC | acb7750b4d0c4bd34969802a7deb2990 |\n| Angeln I | | PAL | 6672de8f82c4f7b8f7f1ef8b6b4f614d |\n| Apples and Dolls | | NTSC | e73838c43040bcbc83e4204a3e72eef4 |\n| Aquaventure | F8 | NTSC | 038e1e79c3d4410defde4bfe0b99cc32 |\n| Armor Ambush | | NTSC | a7b584937911d60c120677fe0d47f36f |\n| Artillery Duel | F8 | NTSC | c77c35a6fc3c0f12bf9e8bae48cba54b |\n| Assault | | NTSC | de78b3a064d374390ac0710f95edde92 |\n| Asterix | F8 | PAL | c5c7cc66febf2d4e743b4459de7ed868 |\n| Asteroids | F8 | NTSC | ccbd36746ed4525821a8083b0d6d2c2c |\n| Asteroids | F8 | NTSC | b227175699e372b8fe10ce243ad6dda5 |\n| Astroblast | | NTSC | 75169c08b56e4e6c36681e599c4d8cc5 |\n| Astrowar | | NTSC | 8f53a3b925f0fd961d9b8c4d46ee6755 |\n| Astroblast | | NTSC | 75169c08b56e4e6c36681e599c4d8cc5 |\n| Astrowar | | NTSC | 8f53a3b925f0fd961d9b8c4d46ee6755 |\n| Atari 2600 Invaders | | NTSC | a4aa7630e4c0ad7ebb9837d2d81de801 |\n| Atari Video Cube | | NTSC | 3f540a30fdee0b20aed7288e4a5ea528 |\n| Atlantis | | NTSC | cb8afcbc4a779b588b0428ea7af211d5 |\n| Atlantis II | | NTSC | 826481f6fc53ea47c9f272f7050eedf7 |\n| Autorennen | | PAL | b4f87ce75f7329c18301a2505fe59cd3 |\n| Bachelorette Party | | NTSC | 274d17ccd825ef9c728d68394b4569d2 |\n| Bachelor Party | | NTSC | 5b124850de9eea66781a50b2e9837000 |\n| backfire | | NTSC | ea08d519122e6af06117fdded62c525d |\n| Backgammon | | NTSC | 8556b42aa05f94bc29ff39c39b11bff4 |\n| Bank Heist | | NTSC | 00ce0bdd43aed84a983bef38fe7f5ee3 |\n| Barnstorming | | NTSC | f8240e62d8c0a64a61e19388414e3104 |\n| Z-Tack | | PAL | d6dc9b4508da407e2437bfa4de53d1b2 |\n| Basic Programming | | NTSC | 9f48eeb47836cf145a15771775f0767a |\n| Basketball | | PAL | 1228c01cd3c4b9c477540c5adb306d2a |\n| Basketball | | NTSC | e13c7627b2e136b9c449d9e8925b4547 |\n| Battlezone | F8 | NTSC | 41f252a66c6301f1e8ab3612c19bc5d4 |\n| Beamrider | F8 | NTSC | 79ab4123a83dc11d468fb2108ea09e2e |\n| Beany Bopper | | NTSC | d0b9df57bfea66378c0418ec68cfe37f |\n| Beat 'Em & Eat 'Em | | NTSC | 59e96de9628e8373d1c685f5e57dcf10 |\n| Berenstain Bears | F8 | NTSC | ee6665683ebdb539e89ba620981cb0f6 |\n| Bermuda Triangle | | NTSC | b8ed78afdb1e6cfe44ef6e3428789d5f |\n| Bermuda | | NTSC | 073d7aff37b7601431e4f742c36c0dc1 |\n| Berzerk | | NTSC | 136f75c4dd02c29283752b7e5799f978 |\n| Berzerk | F6 | NTSC | be41463cd918daef107d249f8cde3409 |\n| Ungeheuer der Tiefe | | PAL | 1278f74ca1dfaa9122df3eca3c5bcaad |\n| Big Bird's Egg Catch | F8 | NTSC | 1802cc46b879b229272501998c5de04f |\n| Bionic Breakthrough | F8 | NTSC | f0541d2f7cda5ec7bab6d62b6128b823 |\n| Blackjack | | NTSC | 0a981c03204ac2b278ba392674682560 |\n| Blackjack | | NTSC | b2761efb8a11fc59b00a3b9d78022ad6 |\n| Blackjack | | PAL | ff7627207e8aa03730c35c735a82c26c |\n| Bloody Human Freeway | | NTSC | 1086ff69f82b68d6776634f336fb4857 |\n| Blueprint | F8 | NTSC | 33d68c3cd74e5bc4cf0df3716c5848bc |\n| BMX Air Master | F6 | NTSC | 968efc79d500dce52a906870a97358ab |\n| Bobby Is Going Home | | PAL | 3cbdf71bb9fd261fbc433717f547d738 |\n| Bogey Blaster | | NTSC | c59633dbebd926c150fb6d30b0576405 |\n| Boggle | | NTSC | a5855d73d304d83ef07dde03e379619f |\n| Boing! | | NTSC | 0e08cd2c5bcf11c6a7e5a009a7715b6a |\n| Boing! | | NTSC | 14c2548712099c220964d7f044c59fd9 |\n| Boom Bang | | NTSC | a2aae759e4e76f85c8afec3b86529317 |\n| Bowling | | NTSC | c9b7afad3bfd922e006a6bfc1d4f3fe7 |\n| Bowling | | PAL | 4a1a0509bfc1015273a542dfe2040958 |\n| Bowling | | PAL | f69bb58b815a6bdca548fa4d5e0d5a75 |\n| Bowling | | NTSC | a28d872fc50fa6b64eb35981d0f4bb8d |\n| Boxing | | NTSC | c3ef5c4653212088eda54dc91d787870 |\n| Boxing | | NTSC | 277cca62014fceebb46c549bac25a2e3 |\n| Boxing | | PAL | 2c45c3eb819a797237820a1816c532eb |\n| Brain Games | | NTSC | 1cca2197d95c5a41f2add49a13738055 |\n| Brain Games | | NTSC | cb9626517b440f099c0b6b27ca65142c |\n| Wall-Defender | | PAL | 372bddf113d088bc572f94e98d8249f5 |\n| Breakout | | NTSC | f34f08e5eb96e500e851a80be3277a56 |\n| Breakout | | NTSC | 9a25b3cfe2bbb847b66a97282200cca2 |\n| Frisco | | NTSC | e80a4026d29777c3c7993fbfaee8920f |\n| Bridge | | NTSC | cfd6a8b23d12b0462baf6a05ef347cd8 |\n| Buck Rogers - Planet of Zoom | F8 | NTSC | 1cf59fc7b11cdbcefe931e41641772f6 |\n| Bugs Bunny | F8 | NTSC | fa4404fabc094e3a31fcd7b559cdd029 |\n| Bugs | | NTSC | 68597264c8e57ada93be3a5be4565096 |\n| Bump 'n' Jump | E7 | NTSC | 76f53abbbf39a0063f24036d6ee0968a |\n| BurgerTime | E7 | NTSC | 0443cfa9872cdb49069186413275fa21 |\n| Burning Desire | | NTSC | 19d6956ff17a959c48fcd8f4706a848d |\n| Cakewalk | | NTSC | 7f6533386644c7d6358f871666c86e79 |\n| California Games | F6 | NTSC | 9ab72d3fd2cc1a0c9adb504502579037 |\n| Canyon Bomber | | NTSC | 3051b6071cb26377cd428af155e1bfc4 |\n| Carnival | | NTSC | 028024fb8e5e5f18ea586652f9799c96 |\n| Casino | | NTSC | b816296311019ab69a21cb9e9e235d12 |\n| Cat Trax | | NTSC | 76f66ce3b83d7a104a899b4b3354a2f2 |\n| Cathouse Blues | | NTSC | 9e192601829f5f5c2d3b51f8ae25dbe5 |\n| Cat Trax | | NTSC | 76f66ce3b83d7a104a899b4b3354a2f2 |\n| Centipede | F8 | NTSC | 91c2098e88a6b13f977af8c003e0bca5 |\n| Challenge | F8 | PAL | 9905f9f4706223dadee84f6867ede8e3 |\n| Challenge of.... Nexar, The | | NTSC | 5d799bfa9e1e7b6224877162accada0d |\n| Chase the Chuckwagon | | NTSC | 3e33ac10dcf2dff014bc1decf8a9aea4 |\n| Checkers | | PAL | bce93984b920e9b56cf24064f740fe78 |\n| Checkers | | NTSC | 3f5a43602f960ede330cd2f43a25139e |\n| China Syndrome | | NTSC | 749fec9918160921576f850b2375b516 |\n| Chopper Command | | NTSC | 85a4133f6dcf4180e36e70ad0fca0921 |\n| Kung Fu Superkicks | F8 | NTSC | 3f58f972276d1e4e0e09582521ed7a5b |\n| Kung Fu Superkicks | F8 | NTSC | 3f58f972276d1e4e0e09582521ed7a5b |\n| Chase the Chuckwagon | | NTSC | 3e33ac10dcf2dff014bc1decf8a9aea4 |\n| Circus Atari | | NTSC | a7b96a8150600b3e800a4689c3ec60a2 |\n| Circus Atari | | NTSC | a29df35557f31dfea2e2ae4609c6ebb7 |\n| climber5_NTSC | | NTSC | 13a11a95c9a9fb0465e419e4e2dbd50a |\n| Walker | | PAL | 7ff53f6922708119e7bf478d7d618c86 |\n| Coco Nuts | | NTSC | 1e587ca91518a47753a28217cd4fd586 |\n| Codebreaker | | NTSC | 5846b1d34c296bf7afc2fa05bbc16e98 |\n| Codebreaker | | NTSC | 83f50fa0fbae545e4b88bb53b788c341 |\n| Pepsi Invaders | | NTSC | 212d0b200ed8b45d8795ad899734d7d7 |\n| Go Go Home | | NTSC | 4093382187f8387e6d011883e8ea519b |\n| Color Bar Generator | | NTSC | 76a9bf05a6de8418a3ebc7fc254b71b4 |\n| Colors Demo | | NTSC | 3f9431cc8c5e2f220b2ac14bbc8231f4 |\n| Combat | | PAL | 0ef64cdbecccb7049752a3de0b7ade14 |\n| Combat | | NTSC | be35d8b37bbc03848a5f020662a99909 |\n| Combat Two | F8 | NTSC | b0c9cf89a6d4e612524f4fd48b5bb562 |\n| Commando Raid | | NTSC | f457674cef449cfd85f21db2b4f631a7 |\n| Commando | F6 | NTSC | 5d2cc33ca798783dee435eb29debf6d6 |\n| Hunt & Score - Memory Match | | NTSC | 102672bbd7e25cd79f4384dd7214c32b |\n| Vulture Attack | | NTSC | 1f21666b8f78b65051b7a609f1d48608 |\n| Vulture Attack | | NTSC | 1f21666b8f78b65051b7a609f1d48608 |\n| Confrontation | | NTSC | f965cc981cbb0822f955641f8d84e774 |\n| Congo Bongo | F8 | NTSC | 00b7b4cbec81570642283e7fc1ef17af |\n| Congo Bongo | F8 | NTSC | 00b7b4cbec81570642283e7fc1ef17af |\n| Conquest of Mars | F6 | NTSC | 50dd164c77c4df579843baf838327469 |\n| Cookie Monster Munch | F8 | NTSC | 57c5b351d4de021785cf8ed8191a195c |\n| Corrida da Matematica | | NTSC | 01e5c81258860dd82f77339d58bc5f5c |\n| Cosmic Ark | | NTSC | 98ef1593624b409b9fb83a1c272a0aa7 |\n| Cosmic Commuter | | NTSC | 133b56de011d562cbab665968bde352b |\n| Cosmic Corridor | | NTSC | f367e58667a30e7482175809e3cec4d4 |\n| Cosmic Creeps | | NTSC | 3c853d864a1d5534ed0d4b325347f131 |\n| Ant Party | | PAL | afe4eefc7d885c277fc0649507fbcd84 |\n| Cosmic Swarm | | NTSC | 9dec0be14d899e1aac4337acef5ab94a |\n| Cosmic Swarm | | NTSC | e5f17b3e62a21d0df1ca9aee1aa8c7c5 |\n| Crack'ed | F6S | NTSC | fe67087f9c22655ce519616fc6c6ef4d |\n| Crackpots | | NTSC | a184846d8904396830951217b47d13d9 |\n| Crash Dive | | NTSC | fb88c400d602fe759ae74ef1716ee84e |\n| Crazy Climber | F8 | NTSC | 55ef7b65066428367844342ed59f956c |\n| crazyballoon-ntsc | | NTSC | 0f1e13666dccc0783b1c4fc714d05ec6 |\n| Crazy Valet | | NTSC | 4a7eee19c2dfb6aeb4d9d0a01d37e127 |\n| Mysterious Thief, A | | NTSC | 48f18d69799a5f5451a5f0d17876acef |\n| Cross Force | | NTSC | c17bdc7d14a36e10837d039f43ee5fa3 |\n| Crossbow | F6 | NTSC | 8cd26dcf249456fe4aeb8db42d49df74 |\n| Radar | | NTSC | 74f623833429d35341b7a84bc09793c0 |\n| Radar | | NTSC | 74f623833429d35341b7a84bc09793c0 |\n| Crypts of Chaos | | NTSC | 384f5fbf57b5e92ed708935ebf8a8610 |\n| Crystal Castles | F6S | NTSC | 1c6eb740d3c485766cade566abab8208 |\n| Cubicolor | | NTSC | 6fa0ac6943e33637d8e77df14962fbfc |\n| Cubo Magico | | NTSC | 64ca518905311d2d9aeb56273f6caa04 |\n| Custer's Revenge | | NTSC | 58513bae774360b96866a07ca0e8fd8e |\n| Dancing Plate | | PAL | 929e8a84ed50601d9af8c49b0425c7ea |\n| Dark Chambers | F6S | NTSC | 106855474c69d08c8ffa308d47337269 |\n| Dark Cavern | | NTSC | a422194290c64ef9d444da9d6a207807 |\n| Dark Mage | F8 | NTSC | 6333ef5b5cbb77acd47f558c8b7a95d3 |\n| Deadly Duck | | NTSC | e4c00beb17fdc5881757855f2838c816 |\n| Death Trap | | NTSC | 4e15ddfd48bca4f0bf999240c47b49f5 |\n| Decathlon | FE | NTSC | ac7c2260378975614192ca2bc3d20e0b |\n| Defender 2 | F6S | NTSC | d1fc4cf675c9b49fb7deb792f2f3a7a5 |\n| Defender II | F8S | NTSC | 3a771876e4b61d42e3a3892ad885d889 |\n| Defender | | NTSC | 0f643c34e40e3f1daafd9c524d3ffe64 |\n| Demolition Herby | | NTSC | d09935802d6760ae58253685ff649268 |\n| Demon Attack | | NTSC | bcb2967b6a9254bcccaf906468a22241 |\n| Demons to Diamonds | | NTSC | f91fb8da3223b79f1c9a07b77ebfa0b2 |\n| Desert Falcon | F6S | NTSC | fd4f5536fd80f35c64d365df85873418 |\n| Star Wars - Death Star Battle | E0 | NTSC | 5336f86f6b982cc925532f2e80aa1e17 |\n| Dice Puzzle | | NTSC | 9222b25a0875022b412e8da37e7f6887 |\n| Dig Dug | F6 | NTSC | 6dda84fb8e442ecf34241ac0d1d91d69 |\n| Dishaster | | NTSC | 939ce554f5c0e74cc6e4e62810ec2111 |\n| Dodge 'Em | | NTSC | 83bdc819980db99bf89a7f2ed6a2de59 |\n| Dolphin | | NTSC | ca09fa7406b7d2aea10d969b6fc90195 |\n| Donald Duck's Speedboat | F8 | NTSC | 937736d899337036de818391a87271e0 |\n| Donkey Kong Jr | F8 | NTSC | 5a6febb9554483d8c71c86a84a0aa74e |\n| Donkey Kong | | NTSC | 36b20c427975760cb9cf4a47e41369e4 |\n| Double Dragon | F6 | PAL | 47464694e9cce07fdbfd096605bf39d4 |\n| Double Dunk | F6 | NTSC | 368d88a6c071caba60b4f778615aae94 |\n| Dragon Defender | | PAL | 6a882fb1413912d2ce5cf5fa62cf3875 |\n| Dragon Treasure | | NTSC | 41810dd94bd0de1110bedc5092bef5b0 |\n| Dragster | | NTSC | 77057d9d14b99e465ea9e29783af0ae3 |\n| Dragster | | NTSC | 63a6eda1da30446569ac76211d0f861c |\n| Dragon Defender | | PAL | 6a882fb1413912d2ce5cf5fa62cf3875 |\n| Tom Boy | | PAL | de61a0b171e909a5a4cfcf81d146dbcb |\n| Treasure Island | | PAL | 1bb91bae919ddbd655fa25c54ea6f532 |\n| Dukes of Hazzard | F6 | NTSC | 51de328e79d919d7234cf19c1cd77fbc |\n| Dukes of Hazzard | | NTSC | 34ca2fcbc8ba4a0b544acd94991cfb50 |\n| Dumbo's Flying Circus | F8 | NTSC | 1f773a94d919b2a3c647172bbb97f6b4 |\n| Dune | F8 | NTSC | 469473ff6fed8cc8d65f3c334f963aab |\n| E.T. - The Extra-Terrestrial | F8 | NTSC | 615a3bf251a38eb6638cdc7ffbde5480 |\n| Earth Dies Screaming, The | | NTSC | 033e21521e0bf4e54e8816873943406d |\n| Eggomania | | NTSC | 42b2c3b4545f1499a083cfbc4a3b7640 |\n| Elevator Action | F8S | NTSC | 71f8bacfbdca019113f3f0801849057e |\n| Eli's Ladder | | NTSC | b6812eaf87127f043e78f91f2028f9f4 |\n| Elk Attack | F8 | NTSC | 7eafc9827e8d5b1336905939e097aae7 |\n| Encounter at L-5 | | NTSC | dbc8829ef6f12db8f463e30f60af209f |\n| Enduro | | NTSC | 94b92a882f6dbaa6993a46e2dcc58402 |\n| Entity, The | | NTSC | 9f5096a6f1a5049df87798eb59707583 |\n| Entombed | | NTSC | 6b683be69f92958abe0e2a9945157ad5 |\n| Espial | 3F | PAL | f7a138eed69665b5cd1bfa796a550b01 |\n| Euchre | | NTSC | 6205855cc848d1f6c4551391b9bfa279 |\n| Euchre | | PAL | 199985cae1c0123ab1aef921daace8be |\n| Star Wars - Ewok Adventure | E0 | NTSC | c246e05b52f68ab2e9aee40f278cd158 |\n| Star Wars - Ewok Adventure | E0 | PAL | 6dfad2dd2c7c16ac0fa257b6ce0be2f0 |\n| Exocet | | NTSC | 6362396c8344eec3e86731a700b13abf |\n| Fighter Pilot | F6 | PAL | 2ac3a08cfbf1942ba169c3e9e6c47e09 |\n| falldown_ntsc | F8 | NTSC | 76181e047c0507b2779b4bcbf032c9d5 |\n| Fantastic Voyage | | NTSC | b80d50ecee73919a507498d0a4d922ae |\n| Farmyard Fun | | NTSC | f7e07080ed8396b68f2e5788a5c245e2 |\n| Fast Eddie | | NTSC | 9de0d45731f90a0a922ab09228510393 |\n| Fast Food | | NTSC | 665b8f8ead0eef220ed53886fbd61ec9 |\n| Fatal Run | F4S | PAL | 074ec425ec20579e64a7ded592155d48 |\n| Fathom | F8 | NTSC | 0b55399cf640a2a00ba72dd155a0c140 |\n| Fighter Pilot | F6 | PAL | 2ac3a08cfbf1942ba169c3e9e6c47e09 |\n| Final Approach | | NTSC | 211fbbdbbca1102dc5b43dc8157c09b3 |\n| Fire Birds | | PAL | 01e60a109a6a67c70d3c0528381d0187 |\n| Fire Fighter | | NTSC | d09f1830fb316515b90694c45728d702 |\n| Fire Fly | | NTSC | 20dca534b997bf607d658e77fbb3c0ee |\n| Spinning Fireball | | NTSC | d3171407c3a8bb401a3a62eb578f48fb |\n| Fishing Derby | F6 | NTSC | 3c82e808fe0e6a006dc0c4e714d36209 |\n| Fishing Derby | | PAL | 7628d3cadeee0fd2e41e68b3b8fbe229 |\n| Fishing | | PAL | 2517827950fee41a3b9de60275c8aa6a |\n| Flag Capture | | PAL | f5445b52999e229e3789c39e7ee99947 |\n| Flag Capture | | NTSC | 30512e0e83903fc05541d2f6a6a62654 |\n| FlapPing | | NTSC | 163ff70346c5f4ce4048453d3a2381db |\n| AKA Space Adventure | | NTSC | 8786c1e56ef221d946c64f6b65b697e9 |\n| AKA Space Adventure | | NTSC | 8786c1e56ef221d946c64f6b65b697e9 |\n| Football | | NTSC | e549f1178e038fa88dc6d657dc441146 |\n| Football | | NTSC | d86deb100c6abed1588aa84b2f7b3a98 |\n| NFL Football | | PAL | 7608abdfd9b26f4a0ecec18b232bea54 |\n| Fussball | | PAL | cd568d6acb2f14477ebf7e59fb382292 |\n| Forest | | PAL | 213e5e82ecb42af237cfed8612c128ac |\n| Lord of the Rings | | NTSC | e4b12deaafd1dbf5ac31afe4b8e9c233 |\n| Frankenstein's Monster | | NTSC | 15dd21c2608e0d7d9f54c0d3f08cca1f |\n| Freeway | | NTSC | 8e0ab801b1705a740b476b7f588c6d16 |\n| Freeway | | NTSC | 851cc1f3c64eaedd10361ea26345acea |\n| Freeway Chicken | | PAL | 914a8feaf6d0a1bbed9eb61d33817679 |\n| Freeway Rabbit | | PAL | 481d20ec22e7a63e818d5ef9679d548b |\n| Frogs and Flies | | NTSC | dcc2956c7a39fdbf1e861fc5c595da0d |\n| Frogger II | E0 | NTSC | 27c6a2ca16ad7d814626ceea62fa8fb4 |\n| Frogger | | NTSC | 081e2c114c9c20b61acf25fc95c71bf4 |\n| Frog Pond | F8 | NTSC | 5f73e7175474c1c22fb8030c3158e9b3 |\n| Front Line | F8 | NTSC | e556e07cc06c803f2955986f53ef63ed |\n| Frostbite | | NTSC | 4ca73eb959299471788f0b685c3ba0b5 |\n| Fun with Numbers | | PAL | d816fea559b47f9a672604df06f9d2e3 |\n| Fun with Numbers | | NTSC | 819aeeb9a2e11deb54e6de334f843894 |\n| G.I. Joe - Cobra Strike | | NTSC | c1fdd44efda916414be3527a47752c75 |\n| River Raid | | NTSC | 01b09872dcd9556427761f0ed64aa42a |\n| Galaxian | F8 | NTSC | 211774f4c5739042618be8ff67351177 |\n| Hunt & Score - Memory Match | | NTSC | 102672bbd7e25cd79f4384dd7214c32b |\n| Gangster Alley | | NTSC | 20edcc3aa6c189259fa7e2f044a99c49 |\n| Garfield | F6 | NTSC | dc13df8420ec69841a7c51e41b9fbba5 |\n| Gas Hog | | NTSC | 728152f5ae6fdd0d3a9b88709bee6c7a |\n| Gauntlet | | NTSC | e64a8008812327853877a37befeb6465 |\n| Ghost Manor | | NTSC | 0eecb5f58f55de9db4eedb3a0f6b74a8 |\n| Ghost Manor | F8 | NTSC | 2bee7f226d506c217163bad4ab1768c0 |\n| Ghostbusters II | F6 | PAL | c2b5c50ccb59816867036d7cf730bf75 |\n| Ghostbusters | F8 | NTSC | e314b42761cd13c03def744b4afc7b1b |\n| Ghost Manor | F8 | NTSC | 2bee7f226d506c217163bad4ab1768c0 |\n| Gigolo | | NTSC | 1c8c42d1aee5010b30e7f1992d69216e |\n| Glacier Patrol | | NTSC | 5e0c37f534ab5ccc4661768e2ddf0162 |\n| Glib | | NTSC | 2d9e5d8d083b6367eda880e80dfdfaeb |\n| GoFish_NTSC | F8 | NTSC | 787a2faebadc670a887a0e2483b8f034 |\n| Golf | | NTSC | 2e663eaa0d6b723b645e643750b942fd |\n| Golf | | NTSC | f542b5d0193a3959b54f3c4c803ba242 |\n| Golf | | PAL | 95351b46fa9c45471d852d28b9b4e00b |\n| Golf | | NTSC | 2e663eaa0d6b723b645e643750b942fd |\n| Gopher | | NTSC | c16c79aad6272baffb8aae9a7fff0864 |\n| Gorf | | NTSC | 81b3bf17cf01039d311b4cd738ae608e |\n| Grand Prix | F6 | NTSC | de4436eaa41e5d7b7609512632b90078 |\n| Gravitar | F8 | NTSC | 8ac18076d01a6b63acf6e2cab4968940 |\n| Asteroid Fire | | PAL | 18f299edb5ba709a64c80c8c9cec24f2 |\n| Gremlins | F8 | NTSC | 01cb3e8dfab7203a9c62ba3b94b4e59f |\n| Grover's Music Maker | F8 | NTSC | 4ac9f40ddfcf194bd8732a75b3f2f214 |\n| Guardian | | NTSC | 7ab2f190d4e59e8742e76a6e870b567e |\n| Gunfight 2600 | | NTSC | f750b5d613796963acecab1690f554ae |\n| Gyruss | E0 | NTSC | b311ab95e85bc0162308390728a7361d |\n| H.E.R.O. | F8 | NTSC | fca4a5be1251927027f2c24774a02160 |\n| Halloween | | NTSC | 30516cfbaa1bc3b5335ee53ad811f17a |\n| Hangman | | NTSC | f16c709df0a6c52f47ff52b9d95b7d8d |\n| Harbor Escape | | NTSC | b9232c1de494875efe1858fc8390616d |\n| Haunted House | | NTSC | f0a6e99f5875891246c3dbecbf2d2cea |\n| Hole Hunter | | NTSC | 3d48b8b586a09bdbf49f1a016bf4d29a |\n| Holey Moley | F8 | NTSC | c52d9bbdc5530e1ef8e8ba7be692b01e |\n| Home Run | | NTSC | 0bfabf1e98bdb180643f35f2165995d0 |\n| Home Run | | NTSC | 9f901509f0474bf9760e6ebd80e629cd |\n| Homerun | | PAL | ca7aaebd861a9ef47967d31c5a6c4555 |\n| Human Cannonball | | PAL | ad42e3ca3144e2159e26be123471bffc |\n| Human Cannonball | | NTSC | 7972e5101fa548b952d852db24ad6060 |\n| Human Cannonball | | NTSC | ffe51989ba6da2c6ae5a12d277862e16 |\n| I Want My Mommy | | NTSC | f6a282374441012b01714e19699fc62a |\n| IQ 180 | | NTSC | 4b9581c3100a1ef05eac1535d25385aa |\n| Ice Hockey | | NTSC | a4c08c4994eb9d24fb78be1793e82e26 |\n| Ikari Warriors | F6 | PAL | 9813b9e4b8a6fd919c86a40c6bda8c93 |\n| Imagic Selector ROM | | NTSC | c4bc8c2e130d76346ebf8eb544991b46 |\n| Immies & Aggies | | NTSC | 9b21d8fc78cc4308990d99a4d906ec52 |\n| Pac-Kong | | PAL | d223bc6f13358642f02ddacfaf4a90c9 |\n| Indy 500 | | NTSC | 08188785e2b8300983529946dbeff4d2 |\n| Infiltrate | | NTSC | afe88aae81d99e0947c0cfb687b16251 |\n| International Soccer | | NTSC | b4030c38a720dd84b84178b6ce1fc749 |\n| INV+ | | NTSC | 9ea8ed9dec03082973244a080941e58a |\n| Invaders by Erik Mooney | | NTSC | 4868a81e1b6031ed66ecd60547e6ec85 |\n| IQ 180 | | NTSC | 4b9581c3100a1ef05eac1535d25385aa |\n| Ixion | F8 | NTSC | 2f0546c4d238551c7d64d884b618100c |\n| James Bond 007 | E0 | NTSC | e51030251e440cffaab1ac63438b44ae |\n| Jammed | | NTSC | 04dfb4acac1d0909e4c360fd2ac04480 |\n| Jaw Breaker | | NTSC | 58a82e1da64a692fd727c25faef2ecc9 |\n| Star Wars - Jedi Arena | | NTSC | c9f6e521a49a2d15dac56b6ddb3fb4c7 |\n| Journey Escape | | NTSC | 718ae62c70af4e5fd8e932fee216948a |\n| Joust | F8 | NTSC | 3276c777cbe97cdd2b4a63ffc16b7151 |\n| JoustPong | | NTSC | ec40d4b995a795650cf5979726da67df |\n| Jr. Pac-Man | F6S | NTSC | 36c29ceee2c151b23a1ad7aa04bd529d |\n| Jungle Fever | | NTSC | 2cccc079c15e9af94246f867ffc7e9bf |\n| Jungle Hunt | F8 | NTSC | 2bb9f4686f7e08c5fcc69ec1a1c66fe7 |\n| Kaboom! | | NTSC | 5428cdfada281c569c74c7308c7f2c26 |\n| Kaboom! | | NTSC | af6ab88d3d7c7417db2b3b3c70b0da0a |\n| Kamikaze Saucers | | NTSC | 7b43c32e3d4ff5932f39afcb4c551627 |\n| Kangaroo | F8 | NTSC | 4326edb70ff20d0ee5ba58fa5cb09d60 |\n| Karate | | NTSC | cedbd67d1ff321c996051eec843f8716 |\n| Keystone Kapers | | NTSC | be929419902e21bd7830a7a7d746195d |\n| King Kong | | PAL | 0b1056f1091cfdc5eb0e2301f47ac6c3 |\n| Klax | F6S | PAL | eed9eaf1a0b6a2b9bc4c8032cb43e3fb |\n| Knight on the Town | | NTSC | 7fcd1766de75c614a3ccc31b25dd5b7a |\n| Kool-Aid Man | | NTSC | 534e23210dd1993c828d944c6ac4d9fb |\n| Krull | F8 | NTSC | 4baada22435320d185c95b7dd2bcdb24 |\n| Kung-Fu Master | F8 | NTSC | 5b92a93b23523ff16e2789b820e2a4c5 |\n| Kung Fu | | PAL | 6805734a0b7bcc8925d9305b071bf147 |\n| labyrinth | AR | NTSC | 925dda3c61b81eeb7bd8467b6e99dedc |\n| Lady in Wading | | NTSC | 95a89d1bf767d7cc9d0d5093d579ba61 |\n| Laser Blast | | NTSC | 931b91a8ea2d39fe4dca1a23832b591a |\n| Laser Blast | | NTSC | d5e27051512c1e7445a9bf91501bda09 |\n| Laser Blast | | PAL | 0d1b3abf681a2fc9a6aa31a9b0e8b445 |\n| Laser Gates | | NTSC | 1fa58679d4a39052bd9db059e8cda4ad |\n| Laser Gates | | NTSC | 1fa58679d4a39052bd9db059e8cda4ad |\n| Laser Volley | | NTSC | 48287a9323a0ae6ab15e671ac2a87598 |\n| Lochjaw | | NTSC | 86128001e69ab049937f265911ce7e8a |\n| Lock 'n' Chase | | NTSC | 71464c54da46adae9447926fdbfc1abe |\n| London Blitz | | NTSC | b4e2fd27d3180f0f4eb1065afc0d7fc9 |\n| Looping | F8 | NTSC | 5babe0cad3ec99d76b0aa1d36a695d2f |\n| Lord of the Rings | E0 | NTSC | e24d7d879281ffec0641e9c3f52e505a |\n| Lost Luggage | | NTSC | 7c00e7a205d3fda98eb20da7c9c50a55 |\n| M.A.D. | | NTSC | 393e41ca8bdd35b52bf6256a968a9b89 |\n| M.A.S.H | | NTSC | 835759ff95c2cdc2324d7c1e7c5fa237 |\n| MagiCard | CV | NTSC | cddabfd68363a76cd30bee4e8094c646 |\n| Malagai | | NTSC | ccb5fa954fb76f09caae9a8c66462190 |\n| Mangia' | | NTSC | 54a1c1255ed45eb8f71414dadb1cf669 |\n| Marauder | | NTSC | 13895ef15610af0d0f89d588f376b3fe |\n| Marine Wars | | NTSC | b00e8217633e870bf39d948662a52aac |\n| Marineflieger | | PAL | 1b8d35d93697450ea26ebf7ff17bd4d1 |\n| Mario Bros. | F8 | NTSC | e908611d99890733be31733a979c62d8 |\n| Master Builder | | NTSC | ae4be3a36b285c1a1dff202157e2155d |\n| Masters of the Universe | E7 | NTSC | 3b76242691730b2dd22ec0ceab351bc6 |\n| Math Gran Prix | | NTSC | 470878b9917ea0348d64b5750af149aa |\n| Maze Craze | | PAL | f825c538481f9a7a46d1e9bc06200aaf |\n| McDonald's | | NTSC | 35b43b54e83403bb3d71f519739a9549 |\n| mc_ntsc_7_26_3 | F4 | NTSC | 09a03e0c85e667695bcd6c6394e47e5f |\n| mc_pal_4_28_3 | F4 | PAL | dcd5057de94c86ff81db76cb4a146439 |\n| Mega Force | | NTSC | daeb54957875c50198a7e616f9cc8144 |\n| MegaMania | | NTSC | 318a9d6dda791268df92d72679914ac3 |\n| Meltdown | | NTSC | 96e798995af6ed9d8601166d4350f276 |\n| War 2000 | | PAL | 6522717cfd75d1dba252cbde76992090 |\n| Midnight Magic | F6 | NTSC | f1554569321dc933c87981cf5c239c43 |\n| Millipede | F6S | NTSC | 3c57748c8286cf9e821ecd064f21aaa9 |\n| Mind Maze | F8 | NTSC | 0e224ea74310da4e7e2103400eb1b4bf |\n| Miner 2049er | 3F | NTSC | fa0570561aa80896f0ead05c46351389 |\n| Mines of Minos | | NTSC | 4543b7691914dfd69c3755a5287a95e1 |\n| Minesweeper | | PAL | ac5f78bae0638cf3f2a0c8d07eb4df69 |\n| Miniaturer Golf | | PAL | 73521c6b9fed6a243d9b7b161a0fb793 |\n| Miniature Golf | | NTSC | df62a658496ac98a3aa4a6ee5719c251 |\n| Miniature Golf | | NTSC | 384db97670817103dd8c0bbdef132445 |\n| Miner 2049er Volume II | 3F | PAL | 468f2dec984f3d4114ea84f05edf82b6 |\n| Miniature Golf | | NTSC | df62a658496ac98a3aa4a6ee5719c251 |\n| Missile Command | | NTSC | 3a2e2d0c6892aa14544083dfb7762782 |\n| Missile Control | | PAL | cb24210dc86d92df97b38cf2a51782da |\n| Mission 3000 A.D. | | PAL | 6efe876168e2d45d4719b6a61355e5fe |\n| Miss Piggy's Wedding | F8 | NTSC | 4181087389a79c7f59611fb51c263137 |\n| Mogul Maniac | | NTSC | 7af40c1485ce9f29b1a7b069a2eb04a7 |\n| Mondo Pong V2 | | NTSC | 1f60e48ad98b659a05ce0c1a8e999ad9 |\n| Monster Cise | F8 | NTSC | 6913c90002636c1487538d4004f7cac2 |\n| Montezuma's Revenge | E0 | NTSC | 3347a6dd59049b15a38394aa2dafa585 |\n| Moon Patrol | F8 | NTSC | 515046e3061b7b18aa3a551c3ae12673 |\n| Moonsweeper | F8 | NTSC | 203abb713c00b0884206dcc656caa48f |\n| Moto Laser | | NTSC | eb503cc64c3560cd78b7051188b7ba56 |\n| Motocross | F8 | NTSC | 5641c0ff707630d2dd829b26a9f2e98f |\n| Motocross Racer | F8 | NTSC | de0173ed6be9de6fd049803811e5f1a8 |\n| Motocross | | PAL | f5a2f6efa33a3e5541bc680e9dc31d5b |\n| MotoRodeo | F6 | PAL | b1e2d5dc1353af6d56cd2fe7cfe75254 |\n| Mouse Trap | | NTSC | 5678ebaa09ca3b699516dba4671643ed |\n| Mr. Do!'s Castle | E0 | NTSC | b7a7e34e304e4b7bc565ec01ba33ea27 |\n| Mr. Do! | F8 | NTSC | 0164f26f6b38a34208cd4a2d0212afc3 |\n| Mr. Postman | | NTSC | f0daaa966199ef2b49403e9a29d12c50 |\n| Ms. Pac-Man | F8 | NTSC | 87e79cd41ce136fd4f72cc6e2c161bee |\n| Mountain King | FA | NTSC | 7e51a58de2c0db7d33715f518893b0db |\n| Multi-Sprite Demo 2 | AR | NTSC | 42ae81ae8ac51e5c238639f9f77d91ae |\n| Music Machine, The | | NTSC | 65b106eba3e45f3dab72ea907f39f8b4 |\n| My Golf | F8 | PAL | dfad86dd85a11c80259f3ddb6151f48f |\n| Name This Game | | NTSC | 36306070f0c90a72461551a7a4f3a209 |\n| Challenge of.... Nexar, The | | NTSC | 5d799bfa9e1e7b6224877162accada0d |\n| Stunt Man | | NTSC | ed0ab909cf7b30aff6fc28c3a4660b8e |\n| Night Driver | | NTSC | f48022230bb774a7f22184b48a3385af |\n| Night Stalker | | PAL | 2783006ee6519f15cbc96adae031c9a9 |\n| Stunt Man | | NTSC | ed0ab909cf7b30aff6fc28c3a4660b8e |\n| No Escape! | | NTSC | b6d52a0cf53ad4216feb04147301f87d |\n| Nuts | | NTSC | de7a64108074098ba333cc0c70eef18a |\n| Obelix | F8 | PAL | 669840b0411bfbab5c05b786947d55d4 |\n| Ocean City | | NTSC | 4cabc895ea546022c2ecaa5129036634 |\n| Name This Game | | NTSC | 36306070f0c90a72461551a7a4f3a209 |\n| Off Your Rocker | | NTSC | b6166f15720fdf192932f1f76df5b65d |\n| Off the Wall | F6S | NTSC | 98f63949e656ff309cefa672146dc1b8 |\n| Oink! | | NTSC | c9c25fc536de9a7cdc5b9a916c459110 |\n| Okie Dokie | | NTSC | cca33ae30a58f39e3fc5d80f94dc0362 |\n| Omega Race | FA | NTSC | 9947f1ebabb56fd075a96c6d37351efa |\n| Open Sesame | | PAL | 28d5df3ed036ed63d33a31d0d8b85c47 |\n| Oscar's Trash Race | F8 | NTSC | fa1b060fd8e0bca0c2a097dcffce93d3 |\n| Reversi | | PAL | 6468d744be9984f2a39ca9285443a2b2 |\n| Out of Control | | NTSC | f97dee1aa2629911f30f225ca31789d4 |\n| Star Ship | | NTSC | e363e467f605537f3777ad33e74e113a |\n| Outlaw | | PAL | 2e3728f3086dc3e71047ffd6b2d9f015 |\n| Outlaw | | NTSC | f060826626aac9e0d8cda0282f4b7fc3 |\n| Oystron | | NTSC | 91f0a708eeb93c133e9672ad2c8e0429 |\n| Pac Kong | | NTSC | 936ef1d6f8a57b9ff575dc195ee36b80 |\n| Ms. Pac-Man | F8 | NTSC | aeb104f1e7b166bc0cbaca0a968fde51 |\n| Pac-Man | | NTSC | 6e372f076fb9586aff416144f5cfe1cb |\n| Pac-Space | | NTSC | c569e57dca93d3bee115a49923057fd7 |\n| Panda Chase | | PAL | f8582bc6ca7046adb8e18164e8cecdbc |\n| Parachute | | PAL | 714e13c08508ee9a7785ceac908ae831 |\n| Peek-A-Boo | | NTSC | e40a818dac4dd851f3b4aafbe2f1e0c1 |\n| Pele's Soccer | | PAL | 7a09299f473105ae1ef3ad6f9f2cd807 |\n| Pele's Soccer | | NTSC | ace319dc4f76548659876741a6690d57 |\n| Pele's Soccer | | NTSC | ace319dc4f76548659876741a6690d57 |\n| Pengo | F8 | NTSC | 04014d563b094e79ac8974366f616308 |\n| Pete Rose Baseball | F6 | NTSC | 09388bf390cd9a86dc0849697b96c7dc |\n| Phantom Tank | | PAL | 6b1fc959e28bd71aed7b89014574bdc2 |\n| Phantom Tank | | PAL | 6b1fc959e28bd71aed7b89014574bdc2 |\n| Pharaoh's Curse | | NTSC | 62f74a2736841191135514422b20382d |\n| Philly Flasher | | NTSC | ca54de69f7cdf4d7996e86f347129892 |\n| Phoenix | F8 | NTSC | 7e52a95074a66640fcfde124fffd491a |\n| Pick 'n' Pile | F6 | PAL | da79aad11572c80a96e261e4ac6392d0 |\n| Pick Up | | NTSC | 1d4e0a034ad1275bc4d75165ae236105 |\n| Picnic | | NTSC | 17c0a63f9a680e7a61beba81692d9297 |\n| Piece o' Cake | | NTSC | d3423d7600879174c038f53e5ebbf9d3 |\n| Pigs in Space | F8 | NTSC | 8e4fa8c6ad8d8dce0db8c991c166cdaa |\n| Pitfall II | P2 | NTSC | 6d842c96d5a01967be9680080dd5be54 |\n| Pitfall! | | NTSC | aad91be0bf78d33d29758876d999848a |\n| Pitfall! | | NTSC | e42b937c30c617241ca9e01e4510c3f6 |\n| Pitfall! | | NTSC | 3e90cf23106f2e08b2781e41299de556 |\n| Pizza Chef | | NTSC | 82efe7984783e23a7c55266a5125c68e |\n| Planet Patrol | | NTSC | 043f165f384fbea3ea89393597951512 |\n| Planet of the Apes | | NTSC | 9efb4e1a15a6cdd286e4bcd7cd94b7b8 |\n| Plaque Attack | | NTSC | da4e3396aa2db3bd667f83a1cb9e4a36 |\n| Pleiades | UA | NTSC | 8bbfd951c89cc09c148bfabdefa08bec |\n| Poker Squares | | NTSC | 8c136e97c0a4af66da4a249561ed17db |\n| Polaris | 3F | PAL | 203049f4d8290bb4521cc4402415e737 |\n| Pole Position | F8 | NTSC | 5f39353f7c6925779b0169a87ff86f1e |\n| Polo | | NTSC | ee28424af389a7f3672182009472500c |\n| Pompeii | | NTSC | a83b070b485cf1fb4d5a48da153fdf1a |\n| Pooyan | | NTSC | 4799a40b6e889370b7ee55c17ba65141 |\n| Popeye | E0 | NTSC | c7f13ef38f61ee2367ada94fdcc6d206 |\n| Porky's | F8 | NTSC | f93d7fee92717e161e6763a88a293ffa |\n| John K Harvey's Equalizer | | NTSC | 30997031b668e37168d4d0e299ccc46f |\n| Pressure Cooker | F8 | NTSC | 97d079315c09796ff6d95a06e4b70171 |\n| Private Eye | F8 | NTSC | ef3a4f64b6494ba770862768caf04b86 |\n| Maze Craze | | PAL | 8108ad2679bd055afec0a35a1dca46a4 |\n| Pyramid War | | PAL | 37fd7fa52d358f66984948999f1213c5 |\n| Q-bert's Qubes | E0 | NTSC | 517592e6e0c71731019c0cebc2ce044f |\n| Q-bert | | NTSC | 484b0076816a104875e00467d431c2d2 |\n| Qb | | NTSC | ac53b83e1b57a601eeae9d3ce1b4a458 |\n| Qb | | PAL | 9281eccd7f6ef4b3ebdcfd2204c9763a |\n| Qb | | NTSC | 34e37eaffc0d34e05e40ed883f848b40 |\n| Quadrun | F8 | NTSC | 392d34c0498075dd58df0ce7cd491ea2 |\n| Quest for Quintana Roo | F8 | NTSC | a0675883f9b09a3595ddd66a6f5d3498 |\n| Quick Step! | | NTSC | 7eba20c2291a982214cc7cbe8d0b47cd |\n| Rabbit Transit | F8 | NTSC | 2e5b184da8a27c4d362b5a81f0b4a68f |\n| Racquetball | | NTSC | a20d931a8fddcd6f6116ed21ff5c4832 |\n| Radar Lock | F6S | NTSC | baf4ce885aa281fd31711da9b9795485 |\n| Raft Rider | | NTSC | 92a1a605b7ad56d863a56373a866761b |\n| Raiders of the Lost Ark | F8 | NTSC | f724d3dd2471ed4cf5f191dbb724b69f |\n| Rainbow Invaders | | NTSC | cb96b0cf90ab7777a2f6f05e8ad3f694 |\n| Ram It | | NTSC | 7096a198531d3f16a99d518ac0d7519a |\n| Rampage! | F6 | NTSC | 5e1b4629426f4992cf3b2905a696e1a7 |\n| Reactor | | NTSC | 9f8fad4badcd7be61bbd2bcaeef3c58f |\n| RealSports Baseball | F8 | NTSC | eb634650c3912132092b7aee540bbce3 |\n| RealSports Boxing | F6 | NTSC | 3177cc5c04c1a4080a927dfa4099482b |\n| RealSports Football | F8 | NTSC | 7ad257833190bc60277c1ca475057051 |\n| RealSports Soccer | F8 | NTSC | 08f853e8e01e711919e734d85349220d |\n| RealSports Tennis | F8 | PAL | c7eab66576696e11e3c11ffff92e13cc |\n| RealSports Volleyball | | NTSC | aed0b7bd64cc384f85fdea33e28daf3b |\n| Rescue Bira Bira | | NTSC | 8a9d874a38608964f33ec0c35cab618d |\n| Rescue Terra I | | NTSC | 60a61da9b2f43dd7e13a5093ec41a53d |\n| Resgate Espacial | F8 | NTSC | 42249ec8043a9a0203dde0b5bb46d8c4 |\n| Revenge of the Beefsteak Tomatoes | | NTSC | 4f64d6d0694d9b7a1ed7b0cb0b83e759 |\n| Revenge of the Apes | F8 | NTSC | 0b01909ba84512fdaf224d3c3fd0cf8d |\n| Riddle of the Sphinx | | NTSC | a995b6cbdb1f0433abc74050808590e6 |\n| River Patrol | 3F | NTSC | 31512cdfadfd82bfb6f196e3b0fd83cd |\n| River Raid | F6 | NTSC | 291cc37604bc899e8e065c30153fc4b9 |\n| Persian Gulf War | | NTSC | 6ce2110ac5dd89ab398d9452891752ab |\n| River Raid II | F6 | NTSC | ab56f1b2542a05bebc4fbccfc4803a38 |\n| Road Runner | F6 | NTSC | 2bd00beefdb424fa39931a75e890695d |\n| Robin Hood | F8 | NTSC | 72a46e0c21f825518b7261c267ab886e |\n| Robin Hood | F8 | NTSC | 72a46e0c21f825518b7261c267ab886e |\n| Space Robot | | PAL | 1bef389e3dd2d4ca4f2f60d42c932509 |\n| Robot Tank | FE | NTSC | 4f618c2429138e0280969193ed6c107e |\n| Roc 'n Rope | F8 | NTSC | 65bd29e8ab1b847309775b0de6b2e4fe |\n| Room of Doom | | NTSC | 67931b0d37dc99af250dd06f1c095e8d |\n| Rubik's Cube 3-D | | NTSC | 40b1832177c63ebf81e6c5b61aaffd3a |\n| Rush Hour | | NTSC | f3cd0f886201d1376f3abab2df53b1b9 |\n| Saboteur | F8 | NTSC | 1ec57bbd27bdbd08b60c391c4895c1cf |\n| Secret Agent | | NTSC | 605fd59bfef88901c8c4794193a4cbad |\n| Save Our Ship | | NTSC | ed1a784875538c7871d035b7a98c2433 |\n| Save Mary! | F6S | NTSC | 4d502d6fb5b992ee0591569144128f99 |\n| Save the Whales | | NTSC | e377c3af4f54a51b85efe37d4b7029e6 |\n| SCSIcide | | NTSC | 523f5cbb992f121e2d100f0f9965e33f |\n| SCSIcide | | NTSC | 523f5cbb992f121e2d100f0f9965e33f |\n| scsi200_NTSC | | NTSC | 137373599e9b7bf2cf162a102eb5927f |\n| Scuba Diver | | NTSC | 19e761e53e5ec8e9f2fceea62715ca06 |\n| Sea Hawk | | NTSC | 3fd53bfeee39064c945a769f17815a7f |\n| Sea Hunt | | NTSC | 5dccf215fdb9bbf5d4a6d0139e5e8bcb |\n| Sea Monster | | PAL | 68489e60268a5e6e052bad9c62681635 |\n| seantsc | | NTSC | dde55d9868911407fe8b3fefef396f00 |\n| Seaquest | | NTSC | 240bfbac5163af4df5ae713985386f92 |\n| Secret Quest | F6S | NTSC | fc24a94d4371c69bc58f5245ada43c44 |\n| Circus Atari | | NTSC | efffafc17b7cb01b9ca35324aa767364 |\n| Sentinel | F6 | NTSC | 8da51e0c4b6b46f7619425119c7d018e |\n| Shark Attack | | NTSC | 54f7efa6428f14b9f610ad0ca757e26c |\n| Shooting Arcade | F6S | NTSC | 15c11ab6e4502b2010b18366133fc322 |\n| Shootin' Gallery | | NTSC | b5a1a189601a785bdb2f02a424080412 |\n| Shuttle Orbiter | | NTSC | 25b6dc012cdba63704ea9535c6987beb |\n| Sinistar | F8 | NTSC | ea38fcfc06ad87a0aed1a3d1588744e4 |\n| Sir Lancelot | F8 | NTSC | 7ead257e8b5a44cac538f5f54c7a0023 |\n| Skate Boardin' | F8 | NTSC | f847fb8dba6c6d66d13724dbe5d95c4d |\n| Skeet Shoot | | NTSC | 39c78d682516d79130b379fa9deb8d1c |\n| Skeet Shoot | | NTSC | 5f2b4c155949f01c06507fb32369d42a |\n| Skeleton | | PAL | 8e887d1ba5f3a71ae8a0ea16a4af9fc9 |\n| Skeleton | | NTSC | 28a4cd87fb9de4ee91693a38611cb53c |\n| Skeleton+ | | NTSC | eafe8b40313a65792e88ff9f2fe2655c |\n| Skeleton+ | | PAL | 63c7395d412a3cd095ccdd9b5711f387 |\n| Ski Hunt | | PAL | 8654d7f0fb351960016e06646f639b02 |\n| Ski Run | | PAL | f10e3f45fb01416c87e5835ab270b53a |\n| Skiing | | NTSC | b76fbadc8ffb1f83e2ca08b6fb4d6c9f |\n| Skiing | | NTSC | 60bbd425cb7214ddb9f9a31948e91ecb |\n| Skiing | | PAL | 367411b78119299234772c08df10e134 |\n| Sky Diver | | PAL | 3f75a5da3e40d486b21dfc1c8517adc0 |\n| Sky Diver | | NTSC | 46c021a3e9e2fd00919ca3dd1a6b76d8 |\n| Sky Jinks | | NTSC | 8bd8f65377023bdb7c5fcf46ddda5d31 |\n| Sky Patrol | F8 | NTSC | 4c9307de724c36fd487af6c99ca078f2 |\n| Sky Skipper | | NTSC | 3b91c347d8e6427edbe942a7a405290d |\n| Slot Machine | | PAL | 75ea128ba96ac6db8edf54b071027c4e |\n| Slot Machine | | NTSC | f90b5da189f24d7e1a2117d8c8abc952 |\n| Slot Racers | | PAL | d1d704a7146e95709b57b6d4cac3f788 |\n| Slot Racers | | NTSC | aed82052f7589df05a3f417bb4e45f0c |\n| Slot Racers | | NTSC | 5f708ca39627697e859d1c53f8d8d7d2 |\n| Smurfs Save the Day | F8 | NTSC | a204cd4fb1944c86e800120706512a64 |\n| Smurf - Rescue in Gargamel's Castle | F8 | NTSC | 3d1e83afdb4265fa2fb84819c9cfd39c |\n| Squirrel | | NTSC | 68878250e106eb6c7754bc2519d780a0 |\n| Sneak 'n Peek | | NTSC | 9c6faa4ff7f2ae549bbcb14f582b70e4 |\n| Snoopy and the Red Baron | F8 | NTSC | 57939b326df86b74ca6404f64f89fce9 |\n| Snow White and the Seven Dwarfs | F8 | NTSC | 75ee371ccfc4f43e7d9b8f24e1266b55 |\n| Synthcart | F8 | NTSC | 2c2aea31b01c6126c1a43e10cacbfd58 |\n| International Soccer | | PAL | ce904c0ae58d36d085cd506989116b0b |\n| Solar Fox | F8 | NTSC | 947317a89af38a49c4864d6bdd6a91fb |\n| Solar Storm | | NTSC | 97842fe847e8eb71263d6f92f7e122bd |\n| Solaris | F6 | NTSC | e72eb8d4410152bdcb69e7fba327b420 |\n| SolarPlexus | | NTSC | b5be87b87fd38c61b1628e8e2d469cb5 |\n| Sorcerer's Apprentice | F8 | NTSC | 5f7ae9a7f8d79a3b37e8fc841f65643a |\n| Sorcerer | | NTSC | d2c4f8a4a98a905a9deef3ba7380ed64 |\n| Space Instigators | F8 | NTSC | b2a6f31636b699aeda900f07152bab6e |\n| Space Attack | | NTSC | 17badbb3f54d1fc01ee68726882f26a6 |\n| Space Canyon | | NTSC | 559317712f989f097ea464517f1a8318 |\n| Space Cavern | | NTSC | df6a28a89600affe36d94394ef597214 |\n| Space Invaders | | NTSC | e10bf1af6bf3b4a253c5bef6577fe923 |\n| Space Invaders | | NTSC | 72ffbef6504b75e69ee1045af9075f66 |\n| UFO | | PAL | 6bb09bc915a7411fe160d0b2e4d66047 |\n| Space Jockey | | NTSC | d1a9478b99d6a55e13a9fd4262da7cd4 |\n| Space Jockey | | NTSC | 6f2aaffaaf53d23a28bf6677b86ac0e3 |\n| Space Raid | | PAL | 1a624e236526c4c8f31175e9c89b2a22 |\n| Space Robot | | NTSC | 3dfb7c1803f937fadc652a3e95ff7dc6 |\n| Space Shuttle | F8 | NTSC | 5894c9c0c1e7e29f3ab86c6d3f673361 |\n| Space Tunnel | | PAL | 8917f7c1ac5eb05b82331cf01c495af2 |\n| Space Tunnel | | NTSC | df2745d585238780101df812d00b49f4 |\n| Space War | | PAL | b702641d698c60bcdc922dbd8c9dd49c |\n| Space War | | NTSC | 7e9da5cb84d5bc869854938fe3e85ffa |\n| Space War | | NTSC | a7ef44ccb5b9000caf02df3e6da71a92 |\n| AKA Space Adventure | | NTSC | 8786c1e56ef221d946c64f6b65b697e9 |\n| Spacechase | | NTSC | ec5c861b487a5075876ab01155e74c6c |\n| SpaceMaster X-7 | | NTSC | 45040679d72b101189c298a864a5b5ba |\n| Spider Fighter | F6 | NTSC | ba3a17efd26db8b4f09c0cf7afdf84d1 |\n| Spider Fighter | | NTSC | 24d018c4a6de7e5bd19a36f2b879b335 |\n| Spider-Man | | NTSC | 199eb0b8dce1408f3f7d46411b715ca9 |\n| Spiderdroid | | NTSC | 8454ed9787c9d8211748ccddb673e920 |\n| Spider Maze | | NTSC | 21299c8c3ac1d54f8289d88702a738fd |\n| Spike's Peak | F8 | NTSC | a4e885726af9d97b12bb5a36792eab63 |\n| Spitfire Attack | | NTSC | cef2287d5fd80216b2200fb2ef1adfa8 |\n| Springer | 3F | NTSC | 4cd796b5911ed3f1062e805a3df33d98 |\n| Sprint Master | F6S | NTSC | 5a8afe5422abbfb0a342fb15afd7415f |\n| Spy Hunter | F8 | NTSC | 3105967f7222cc36a5ac6e5f6e89a0b4 |\n| Squeeze Box | | NTSC | ba257438f8a78862a9e014d831143690 |\n| Squoosh | | NTSC | 22abbdcb094d014388d529352abe9b4b |\n| Sssnake | | NTSC | 21a96301bb0df27fde2e7eefa49e0397 |\n| Stampede | | NTSC | 21d7334e406c2407e69dbddd7cec3583 |\n| Stampede | | NTSC | e66e5af5dea661d58420088368e4ef0d |\n| Stampede | | PAL | c9196e28367e46f8a55e04c27743148f |\n| Star Fox | | NTSC | f526d0c519f5001adb1fc7948bfbb3ce |\n| Star Raiders | F8 | NTSC | cbd981a23c592fb9ab979223bb368cd5 |\n| Star Ship | | NTSC | e363e467f605537f3777ad33e74e113a |\n| Star Ship | | NTSC | 7b938c7ddf18e8362949b62c7eaa660a |\n| Star Strike | | NTSC | 79e5338dbfa6b64008bb0d72a3179d3c |\n| Star Trek - Strategic Operations Simulator | F8 | NTSC | 03c3f7ba4585e349dd12bfa7b34b7729 |\n| Star Voyager | | NTSC | 813985a940aa739cc28df19e0edd4722 |\n| Star Wars - Death Star Battle | E0 | NTSC | 5336f86f6b982cc925532f2e80aa1e17 |\n| Star Wars - The Empire Strikes Back | | NTSC | 3c8e57a246742fa5d59e517134c0b4e6 |\n| Star Wars - Jedi Arena | | NTSC | c9f6e521a49a2d15dac56b6ddb3fb4c7 |\n| Star Wars - The Arcade Game | E0 | NTSC | 6339d28c9a7f92054e70029eb0375837 |\n| Star Wars - The Empire Strikes Back | | NTSC | 3c8e57a246742fa5d59e517134c0b4e6 |\n| Stargate | F6S | NTSC | 57fa2d09c9e361de7bd2aa3a9575a760 |\n| Stargunner | | NTSC | a3c1c70024d7aabb41381adbfb6d3b25 |\n| StarMaster | | NTSC | d69559f9c9dc6ef528d841bf9d91b275 |\n| Communist Mutants from Space | AR | NTSC | 2c8835aed7f52a0da9ade5226ee5aa75 |\n| Dragonstomper | AR | NTSC | 90ccf4f30a5ad8c801090b388ddd5613 |\n| Escape from the Mindmaster | AR | NTSC | 81f4f0285f651399a12ff2e2f35bab77 |\n| Fireball | AR | NTSC | 386ff28ac5e254ba1b1bac6916bcc93a |\n| Official Frogger, The | AR | NTSC | c73ae5ba5a0a3f3ac77f0a9e14770e73 |\n| Killer Satellites | AR | NTSC | 9c27ef3bd01c611cdb80182a59463a82 |\n| Party Mix | AR | NTSC | 012b8e6ef3b5fd5aabc94075c527709d |\n| Phaser Patrol | AR | NTSC | 7dcbfd2acc013e817f011309c7504daa |\n| Rabbit Transit | AR | NTSC | fb4ca865abc02d66e39651bd9ade140a |\n| Suicide Mission | AR | NTSC | e4c666ca0c36928b95b13d33474dbb44 |\n| Survival Island | AR | NTSC | 045035f995272eb2deb8820111745a07 |\n| Sweat! - The Decathlon Game | AR | NTSC | e51c23389e43ab328ccfb05be7d451da |\n| Sword of Saros | AR | NTSC | 528400fad9a77fd5ad7fc5fdc2b7d69d |\n| Star Trek - Strategic Operations Simulator | F8 | NTSC | 03c3f7ba4585e349dd12bfa7b34b7729 |\n| Star Voyager | | NTSC | 813985a940aa739cc28df19e0edd4722 |\n| Steeplechase | | NTSC | 656dc247db2871766dffd978c71da80c |\n| Steeplechase | | NTSC | a174cece06b3abc0aec3516913cdf9cc |\n| Stell-A-Sketch | AR | NTSC | 47aef18509051bab493589cb2619170b |\n| Stellar Track | | NTSC | 0b8d3002d8f744a753ba434a4d39249a |\n| Stunt Man | | NTSC | ed0ab909cf7b30aff6fc28c3a4660b8e |\n| Strategy X | | NTSC | 9333172e3c4992ecf548d3ac1f2553eb |\n| Strat-O-Gems Deluxe | F4 | PAL | 807a8ff6216b00d52aba2dfea5d8d860 |\n| Strawberry Shortcake - Musical Match-Ups | | NTSC | e10d2c785aadb42c06390fae0d92f282 |\n| Street Racer | | NTSC | 6ff4156d10b357f61f09820d03c0f852 |\n| Stronghold | | NTSC | 7b3cf0256e1fa0fdc538caf3d5d86337 |\n| Stunt Cycle | | NTSC | c3bbc673acf2701b5275e85d9372facf |\n| Sub-Scan | | NTSC | 5af9cd346266a1f2515e1fbc86f5186a |\n| Submarine Commander | | NTSC | f3f5f72bfdd67f3d0e45d097e11b8091 |\n| Subterranea | F8 | NTSC | 93c52141d3c4e1b5574d072f1afde6cd |\n| Summer Games | F6 | NTSC | 45027dde2be5bdd0cab522b80632717d |\n| Super Baseball | F6 | NTSC | 7adbcf78399b19596671edbffc3d34aa |\n| Super Box | F6 | NTSC | 1c85c0fc480bbd69dc301591b6ecb422 |\n| Super Breakout | | NTSC | 0ad9a358e361256b94f3fb4f2fa5a3b1 |\n| Super Challenge Baseball | | NTSC | 9d37a1be4a6e898026414b8fee2fc826 |\n| Super Challenge Football | | NTSC | e275cbe7d4e11e62c3bfcfb38fca3d49 |\n| Super Cobra | E0 | NTSC | c29f8db680990cb45ef7fef6ab57a2c2 |\n| Super-Ferrari | | NTSC | 724613effaf7743cbcd695fab469c2a8 |\n| Super Futebol | F8 | NTSC | 2447e17a4e18e6b609de498fe4ab52ba |\n| Superman | | NTSC | a9531c763077464307086ec9a1fd057d |\n| Superman | | NTSC | 5de8803a59c36725888346fdc6e7429d |\n| Surf's Up | F8 | NTSC | aec9b885d0e8b24e871925630884095c |\n| Surfer's Paradise | | PAL | c20f15282a1aa8724d70c117e5c9709e |\n| Surround | | PAL | a60598ad7ee9c5ccad42d5b0df1570a1 |\n| Surround | | NTSC | 31d08cb465965f80d3541a57ec82c625 |\n| Survival Run | | NTSC | 85e564dae5687e431955056fbda10978 |\n| Star Wars - The Arcade Game | E0 | NTSC | 6339d28c9a7f92054e70029eb0375837 |\n| SWOOPS! | | PAL | 5d8f1ab95362acdf3426d572a6301bf2 |\n| SWOOPS! | | NTSC | 278f14887d601b5e5b620f1870bc09f6 |\n| SwordQuest - EarthWorld | F8 | NTSC | 05ebd183ea854c0a1b56c218246fbbae |\n| SwordQuest - FireWorld | F8 | NTSC | f9d51a4e5f8b48f68770c89ffd495ed1 |\n| SwordQuest - WaterWorld | F8 | NTSC | bc5389839857612cfabeb810ba7effdc |\n| T.F. Space Invaders | | NTSC | 294762000e853b4319f9991c1ced5dfc |\n| Tac-Scan | | NTSC | d45ebf130ed9070ea8ebd56176e48a38 |\n| Tanks But No Tanks | | NTSC | fa6fe97a10efb9e74c0b5a816e6e1958 |\n| Tapeworm | | NTSC | de3d0e37729d85afcb25a8d052a6e236 |\n| Tapper | F8 | NTSC | c0d2434348de72fa6edcc6d8e40f28d7 |\n| Targ | | NTSC | 2d6741cda3000230f6bbdd5e31941c01 |\n| Task Force | | NTSC | 0c35806ff0019a270a7acae68de89d28 |\n| Tax Avoiders | F8 | NTSC | a1ead9c181d67859aa93c44e40f1709c |\n| Taz | F8 | NTSC | 4702d8d9b48a332724af198aeac9e469 |\n| Teddy Apple | | PAL | 8c2fa33048f055f38358d51eefe417db |\n| Telepathy | F8 | NTSC | 3d7aad37c55692814211c8b590a0334c |\n| Tempest | F8 | NTSC | c830f6ae7ee58bcc2a6712fb33e92d55 |\n| Tennis | | NTSC | 42cdd6a9e42a3639e190722b8ea3fc51 |\n| Tennis | | NTSC | aca09ffea77174b148b96b205109db4d |\n| Tennis | | PAL | 16e04823887c547dc24bc70dff693df4 |\n| Wavy Line Test 2 | | NTSC | 5c73693a89b06e5a09f1721a13176f95 |\n| Test Cart | | NTSC | f0631c6675033428238408885d7e4fde |\n| Tetris 2600 | | NTSC | b0e1ee07fbc73493eac5651a52f90f00 |\n| Texas Chainsaw Massacre, The | | NTSC | 5eeb81292992e057b290a5cd196f155d |\n| This Planet Sucks | | NTSC | a98b649912b6ca19eaf5c2d2faf38562 |\n| Threshold | | NTSC | e63a87c231ee9a506f9599aa4ef7dfb9 |\n| Thrust v1.26 | F6 | NTSC | 7ded20e88b17c8149b4de0d55c795d37 |\n| Thrust | F6 | NTSC | de7bca4e569ad9d3fd08ff1395e53d2d |\n| Thrust | F6 | NTSC | de7bca4e569ad9d3fd08ff1395e53d2d |\n| Thunderground | | NTSC | cf507910d6e74568a68ac949537bccf9 |\n| Time Machine | | PAL | 7576dd46c2f8d8ab159d97e3a3f2052f |\n| Time Pilot | F8 | NTSC | 4e99ebd65a967cabf350db54405d577c |\n| Time Race | | PAL | 5db9e5bf663cad6bf159bc395f6ead53 |\n| X'Mission | | PAL | 332f01fd18e99c6584f61aa45ee7791e |\n| Title Match Pro Wrestling | F8 | NTSC | 12123b534bdee79ed7563b9ad74f1cbd |\n| Tom Boy | | NTSC | ece908d77ab944f7bac84322b9973549 |\n| Tomarc the Barbarian | F8 | NTSC | 8bc0d2052b4f259e7a50a7c771b45241 |\n| Tooth Protectors | E0 | NTSC | fa2be8125c3c60ab83e1c0fe56922fcb |\n| Towering Inferno | | NTSC | 0aa208060d7c140f20571e3341f5a3f8 |\n| This Planet Sucks | | NTSC | a98b649912b6ca19eaf5c2d2faf38562 |\n| Track and Field | F6 | NTSC | 6ae4dc6d7351dacd1012749ca82f9a56 |\n| Racing Car | | NTSC | 4df9d7352a56a458abb7961bf10aba4e |\n| Treasure Below | | NTSC | 81414174f1816d5c1e583af427ac89fc |\n| Space Treat | | NTSC | 6c9a32ad83bcfde3774536e52be1cce7 |\n| treat_ntsc | | NTSC | 9e135f5dce61e3435314f5cddb33752f |\n| Trick Shot | | NTSC | 24df052902aa9de21c2b2525eb84a255 |\n| TRON - Deadly Discs | | NTSC | fb27afe896e7c928089307b32e5642ee |\n| Vogel Flieh | | NTSC | e17699a54c90f3a56ae4820f779f72c4 |\n| Tunnel Runner | FA | NTSC | b2737034f974535f5c0c6431ab8caf73 |\n| Turmoil | | NTSC | 7a5463545dfb2dcfdafa6074b2f2c15e |\n| Tutankham | E0 | NTSC | 085322bae40d904f53bdcc56df0593fc |\n| Time Warp | | NTSC | 619de46281eb2e0adbb98255732483b4 |\n| Universal Chaos | | NTSC | 81a010abdba1a640f7adf7f84e13d307 |\n| Unknown 20th Century Fox Game | F8 | NTSC | 5f950a2d1eb331a1276819520705df94 |\n| Unknown Activision Game #1 | | NTSC | ee681f566aad6c07c61bbbfc66d74a27 |\n| Unknown Activision Game #2 | | NTSC | 700a786471c8a91ec09e2f8e47f14a04 |\n| Up 'n Down | F8 | NTSC | a499d720e7ee35c62424de882a3351b6 |\n| Vanguard | F8 | NTSC | c6556e082aac04260596b4045bc122de |\n| Vault Assault | | NTSC | 787ebc2609a31eb5c57c4a18837d1aee |\n| Venetian Blinds Demo | | NTSC | d08fccfbebaa531c4a4fa7359393a0a9 |\n| Venture | | NTSC | 3e899eba0ca8cd2972da1ae5479b4f0d |\n| Mission Survive | | PAL | cf9069f92a43f719974ee712c50cd932 |\n| Video Checkers | | NTSC | 539d26b6e9df0da8e7465f0f5ad863b7 |\n| Video Chess | | NTSC | f0b7db930ca0e548c41a97160b9f6275 |\n| Video Cube | | NTSC | ed1492d4cafd7ebf064f0c933249f5b0 |\n| Video Jogger | | NTSC | 4191b671bcd8237fc8e297b4947f2990 |\n| Video Olympics | | NTSC | 60e0ea3cbe0913d39803477945e9e5ec |\n| Video Olympics | | NTSC | c00b65d1bae0aef6a1b5652c9c2156a1 |\n| Video Pinball | | NTSC | 107cc025334211e6d29da0b6be46aec7 |\n| Video Reflex | | NTSC | ee659ae50e9df886ac4f8d7ad10d046a |\n| Video Time Machine | | NTSC | 93acd5020ae8eb5673601e2edecbc158 |\n| Video Pinball | | NTSC | 107cc025334211e6d29da0b6be46aec7 |\n| Vulture Attack | | NTSC | 1f21666b8f78b65051b7a609f1d48608 |\n| Wabbit | | NTSC | 6041f400b45511aa3a69fab4b8fc8f41 |\n| Walker | | NTSC | d175258b2973b917a05b46df4e1cf15d |\n| Wall Ball | | NTSC | d3456b4cf1bd1a7b8fb907af1a80ee15 |\n| Wall Break | | NTSC | c16fbfdbfdf5590cc8179e4b0f5f5aeb |\n| Warlords | | NTSC | cbe5a166550a8129a5e6d374901dffad |\n| Warplock | | NTSC | 679e910b27406c6a2072f9569ae35fc8 |\n| Warring Worms | | NTSC | 7e7c4c59d55494e66eef5e04ec1c6157 |\n| Weltraumtunnel | | PAL | bce4c291d0007f16997faa5c4db0a6b8 |\n| Wing War | F8 | PAL | 9d2938eb2b17bb73e9a79bbc06053506 |\n| Wings | FA | NTSC | 8e48ea6ea53709b98e6f4bd8aa018908 |\n| Winter Games | F6 | NTSC | 83fafd7bd12e3335166c6314b3bde528 |\n| Wizard of Wor | | NTSC | 7e8aa18bc9502eb57daaf5e7c1e94da7 |\n| Wizard | | NTSC | 7b24bfe1b61864e758ada1fe9adaa098 |\n| Word Zapper | | NTSC | ec3beb6d8b5689e867bafb5d5f507491 |\n| Words-Attack | | PAL | 2facd460a6828e0e476d3ac4b8c5f4f7 |\n| World End | | PAL | 130c5742cd6cbe4877704d733d5b08ca |\n| Worm War I | | NTSC | 87f020daa98d0132e98e43db7d8fea7e |\n| X-Doom V.26 | | NTSC | 0d35618b6d76ddd46d2626e9e3e40db5 |\n| X-Man | | NTSC | 5961d259115e99c30b64fe7058256bcf |\n| Xenophobe | F6 | NTSC | eaf744185d5e8def899950ba7c6e7bb5 |\n| Xevious | F8 | NTSC | c6688781f4ab844852f4e3352772289b |\n| Yahtzee | | NTSC | d090836f0a4ea8db9ac7abb7d6adf61e |\n| Yars' Revenge | | NTSC | c5930d0e8cdae3e037349bfa08e871be |\n| Base Attack | | NTSC | c469151655e333793472777052013f4f |\n| Zaxxon | F8 | NTSC | eea0da9b987d661264cce69a7c13c3bd |\n| Pumuckl I | | PAL | fb833ed50c865a9a505a125fc9d79a7e |\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Atari2600_MiSTer",
      "releases": [
        {
          "name": "Atari2600_20200225.rbf",
          "sha": "66882c63ff5332b3b6b612d561b1e8da70aab452",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200225.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200227.rbf",
          "sha": "7cd03941a714f185a05d375fe59870c95d0e1a54",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200227.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200331.rbf",
          "sha": "9e71ad0f9c5047db92a3a52957d345687fd53a79",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200331.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200406.rbf",
          "sha": "acd7c97c5262ee3127ac624186c99023d03165b0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200406.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200408.rbf",
          "sha": "17a2e68b22dd887ce535476d1d0ea187324b430a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200421.rbf",
          "sha": "3bced814caaec5c5ff3e0b63933ff8da256836ef",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200511.rbf",
          "sha": "2401b92d501303117bdff5aa5a871db34ca92c4a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200511.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200818.rbf",
          "sha": "dcd469a7df11a6d115e0e718c21a0a32892a45c3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200818.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari2600_20200819.rbf",
          "sha": "9206176cfcb23e1946be478305c2fd80d14b7d5d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari2600_MiSTer/master/releases/Atari2600_20200819.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Atari800_MiSTer",
      "description": "Atari 800XL/65XE/130XE for MiSTer",
      "readme": "# Atari 800/800XL/65XE/130XE and Atari 5200 for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\n### This is the port of [Atari 800XL core by Mark Watson](http://www.64kib.com/redmine/projects/eclairexl)\n\n### Installation\n* Copy the *.rbf file to the root of the system SD card.\n* Copy the files to Atari800/Atari5200 folder\n\n## Usage notes\n\n### System ROM\nYou can supply other A800 OS ROM as Atari800/boot.rom. \nAlternative Basic ROM can be placed to Atari800/boot1.rom. \n\nIntegrated 800XL ROM includes SIO turbo patch (fast disk loading).\n\nTurbo ROM has hot keys to control the turbo mode:\n* SHIFT+CONTROL+N    Disable highspeed SIO (normal speed)\n* SHIFT+CONTROL+H    Enable highspeed SIO \n  \nAdditionally, you can control the speed of turbo loading in OSD menu.\n\n### Disks\nA800: After mounting the disk, press F10 to boot.\nSome games don't like the Basic ROM. Keep F8(Option) pressed while pressing F10 to skip the Basic.\nCurrently disks are read-only.\n\n### Differences from original version\n* Joystick/Paddle mode switched by joystick. Press **Paddle1/2** to switch to paddle mode (analog X/Y). Press **Fire** to switch to joystick mode (digital X/Y).\n* Use ` key as a **Brake** on reduced keyboards.\n* Cursor keys are mapped to Atari cursor keys.\n* PAL/NTSC mode switch in settings menu (A800)\n* Video aspect ratio switch in settings menu\n* Some optimizations and tweaks in file selector and settings menu navigation.\n* Standard OSD menu for cartridge/disk selection.\n* Mouse emulates analog joystick(Atari 5200) and paddles(Atari 800).\n* Fire 2 and Fire 3 on joystick.\n\n### Disable Basic ROM by Joystick.\nFire 2 on joystick acts as an OPTION key while reboot. It's valid only 2 seconds after reboot. After that Fire 2 doesn't affect the OPTION key.\n\n### More info\nSee more info in original [instructions](https://github.com/MiSTer-devel/Atari800_MiSTer/tree/master/instructions.txt)\nand original [manual](https://github.com/MiSTer-devel/Atari800_MiSTer/tree/master/manual.pdf).\n\n## Download precompiled binaries\nGo to [releases](https://github.com/MiSTer-devel/Atari800_MiSTer/tree/master/releases) folder.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Atari800_MiSTer",
      "releases": [
        {
          "name": "Atari5200_20200225.rbf",
          "sha": "69bae9a3f7a8767c778b5a3d666ddf8727eb1615",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari5200_20200225.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari5200_20200227.rbf",
          "sha": "2e9169f386227e1a09e513f05429d4a2f37c7fa5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari5200_20200227.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari5200_20200411.rbf",
          "sha": "02c26f49ca1979bda69e5b50d4877a11ea68ff1f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari5200_20200411.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari5200_20200420.rbf",
          "sha": "7b67bf7c85e3312cb3329c7dd31535c231f06318",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari5200_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari5200_20200509.rbf",
          "sha": "815402d7e77c1cca2262c67150caae14c83ec648",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari5200_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari5200_20200527.rbf",
          "sha": "62d176c717c1c826b73468ae97bea86c92f169ea",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari5200_20200527.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari800_20200225.rbf",
          "sha": "9e8e80b551f70cb89d612aacc8aa4db08b131e60",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari800_20200225.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari800_20200411.rbf",
          "sha": "92722b9754496d1745850cdf40727dbf2c13a215",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari800_20200411.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari800_20200420.rbf",
          "sha": "dbf5995f7bf8307cb1120db82b9ea4d6aa367478",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari800_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari800_20200509.rbf",
          "sha": "8c35fd1e83924148a63e8e418b1b6147b4ba9d14",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari800_20200509.rbf",
          "type": "RBF"
        },
        {
          "name": "Atari800_20200527.rbf",
          "sha": "6489c343befd3afddb6e3c526820b757c903313c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Atari800_MiSTer/master/releases/Atari800_20200527.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "AtariST_MiSTer",
      "description": "Atari ST/STe for MiSTer",
      "readme": "# Atari ST/STe for MiSTer (port of MiSTery)\n\nThanks to Gyorgy Szombathelyi for MiSTery core\n\nFollowing is original ReadMe from MiST.\n-------------------------------------------------------------------------------------------\n\n# MiSTery - An Atari ST/STe core for the MiST board\n\n## Features:\n\n- Cycle accurate STe GLUE+MMU combo (re-created from the [original schematics](https://www.chzsoft.de/asic-web/))\n- Cycle accurate [FX68K CPU core](https://github.com/ijor/fx68k)\n- Cycle accurate Blitter offered by Jorge Cwik\n- Mostly cycle accurate shifter based on [schematics made from reverse engineering](http://www.atari-forum.com/viewtopic.php?t=29658)\n- MegaSTe 16 MHz CPU mode\n- RAM size up to 14MB\n- Support for all TOS versions\n- 2 Floppy disc drives\n- ACSI hard disc support\n- Viking compatible hi-res monochrome card support\n- [Real IKBD](https://github.com/harbaum/ikbd) with HD63701 MCU\n- Real MIDI input/output using MiST's UART pins\n- Serial/parallel port redirect to USB\n- Gauntlet type 4 joystick interface support\n- STe controller port support\n- Optional scandoubled/YPbPr video output\n\n## Usage:\n\nPut the core.rbf and the TOS as tos.img to the SD-Card. TOS/hard disc/floppy images are selectable in the OSD (F12).\nWith F11, you can toggle between normal and STe joystick ports.\n\n## Current issues/limitations:\n\n- Some MFP imperfections\n- Some bugs in ST mode\n- No RAM cache for Mega STe\n- Missing Ethernec support\n- No RTC\n- Only fake LMC1992\n- PAL clock only (32.084 MHz)\n- Since Jagpads have 21 buttons, not all are mapped to MiST controllers when using STe game ports\n- No STe paddle handling (but it has 0 software support)\n\n## Thanks to:\n\n- Till Harbaum for the MiST board, original MiST core, new IKBD code\n- Jorge Cwik for the FX68K CPU core, FX ST Blitter code and shifter decap\n- Christian Zietz for recovering the schematics of the GSTMCU\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/AtariST_MiSTer",
      "releases": [
        {
          "name": "AtariST_20200425.rbf",
          "sha": "a109b401e0ee9e2e89f448563e4be613e50e18de",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AtariST_MiSTer/master/releases/AtariST_20200425.rbf",
          "type": "RBF"
        },
        {
          "name": "AtariST_20200429.rbf",
          "sha": "4f430a4f7b5f074a42747f7311dcea643284668e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AtariST_MiSTer/master/releases/AtariST_20200429.rbf",
          "type": "RBF"
        },
        {
          "name": "AtariST_20200503.rbf",
          "sha": "ff404d84bcd86b55ec9f016e9cc51b3dba631832",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AtariST_MiSTer/master/releases/AtariST_20200503.rbf",
          "type": "RBF"
        },
        {
          "name": "AtariST_20200505.rbf",
          "sha": "6421d8ba0e17aca8add2124548fa91f6b63ba3f4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AtariST_MiSTer/master/releases/AtariST_20200505.rbf",
          "type": "RBF"
        },
        {
          "name": "AtariST_20200508.rbf",
          "sha": "99bb8e54b97e3d37164eb70e945041a5438313cd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AtariST_MiSTer/master/releases/AtariST_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "AtariST_20200622.rbf",
          "sha": "ce64ed00cb7fdd45544597be27e43294624a315c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AtariST_MiSTer/master/releases/AtariST_20200622.rbf",
          "type": "RBF"
        },
        {
          "name": "AtariST_20200818.rbf",
          "sha": "d863aabd5b2fb9691acf8963c3d5a42031fba7e2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AtariST_MiSTer/master/releases/AtariST_20200818.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "AY-3-8500-MiSTer",
      "description": "Port of AY-3-8500 to MiSTer",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Dedicated Console: AY-3-8500 \"Pong-on-a-chip\"\n-- Creation and port to MiSTer by Cole Johnson\n-- 24 December 2019\n-- \n---------------------------------------------------------------------------------\n-- \n-- \n-- Keyboard inputs:\n--\n--   R       : Reset\n--   W/S     : Player 1 up/down\n--   UP/DOWN : Player 1 up/down\n--   SPACE   : Serve Ball\n--   V       : Toggle Manual Serve\n--   C       : Toggle Paddle Size\n--   X       : Toggle Ball Speed\n--   Z       : Toggle Ball Angle\n--\n-- Game Select Buttons:\n--\n--   1 : Tennis\n--   2 : Soccer\n--   3 : Handicap\n--   4 : Squash\n--   5 : Practice\n--   6 : Rifle 1\n--   7 : Rifle 2\n--\n-- Joystick support not yet implemented.\n-- \n-- \n---------------------------------------------------------------------------------\n--\n--\n-- Color Palletes:\n--\n--   Mono: Solid black/white, most systems did this\n--   Greyscale: Achieved using external resistors in real systems\n--   RGB1: Arbitrary pallete used during development\n--   RGB2: Based on video of an actual console (forgot which one)\n--   Field: Approximation of a grass-colored field\n--   Ice: Approximation of an ice rink\n--   Christmas: Mono with red/green paddles\n--   Marksman: Based on footage of the Coleco Telstar Marksman\n--   Las Vegas: Based on footage of Tele-spiel Las Vegas\n--\n--\n---------------------------------------------------------------------------------\n--\n--\n-- Changelog:\n-- 2019/12/24 Initial release\n--\n--\n---------------------------------------------------------------------------------\n--\n--\n-- Developed by Cole Johnson\n--   Blog: https://nerdstuffbycole.blogspot.com/\n--   Twitter: https://twitter.com/ColeJ71909899\n--   Github: https://github.com/TheProgrammerIncarnate\n--   Gitlab: https://gitlab.com/TheProgrammerIncarnate\n--\n-- Thanks to:\n-- Sean Riddle for die photos\n-- Alan S. and @MisterAddons for donating some MiSTer hardware\n--\n-- Patreon supporters: Suverman, Erika, Ewen McNeill, Dylan Lipsitz, Ewen McNeill,\n-- Alan Steremberg, and JM Blandin\n--                       ^Two letters to live by\n---------------------------------------------------------------------------------\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/AY-3-8500-MiSTer",
      "releases": [
        {
          "name": "AY-3-8500_20200510.rbf",
          "sha": "245ea72e15aee328734facbda4db10ef397cf278",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AY-3-8500-MiSTer/master/releases/AY-3-8500_20200510.rbf",
          "type": "RBF"
        },
        {
          "name": "AY-3-8500_20200513.rbf",
          "sha": "d1da8e2356fb6e521be00df127147dfa9c385523",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/AY-3-8500-MiSTer/master/releases/AY-3-8500_20200513.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "BBCMicro_MiSTer",
      "description": "BBC Micro B and Master 128K for MiSTer",
      "readme": "# BBC Micro B/Master 128K for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\nThis is the port of [BeebFpga](https://github.com/hoglet67/BeebFpga) by David Banks, Mike Sterling.\n\n\n### Features and enhancements:\n- Models B and Master 128K.\n- Respective CPU per model for best compatibility: 6502 for B, 65C02 for Master 128K.\n- Co-Processor module with 65C02.\n- Support Secondary SD card as well as images on Primary SD card.\n- Scandoubler with HQ2x for all modes.\n- Support analog joysticks.\n- Emulate joystick with mouse.\n- Real Time Clock support with actual time.\n\n### Installation:\nCopy the *.rbf file to the root of the SD card. Copy *.vhd to BBCMicro folder.\n\n### Supported formats:\nCurrently only **BEEB.MMB** format is supported. This is a container of multiple disks/apps with integrated Menu system.\n\nCore supports secondary SD card which should be formatted in FAT16/FAT32. BEEB.MMB file should be placed first on the card.\n\nAlternatively core supports *.VHD images on primary SD card - in this case secondary SD card is not required.\n\n**VHD** image is just renamed BEEB.MMB file.\n\n### Notes:\n* BREAK key combo is **CTRL+F11**\n* If autostart is disabled, then **SHIFT+CTRL+F11** performs reset+autostart. \n* If autostart is enabled, then **SHIFT+CTRL+F11** performs reset without autostart.\n* Perform reset to apply the Model.\n* You can place **boot.vhd** into BBCMicro folder to autoload it at start.\n\n---\nSorgelig\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/BBCMicro_MiSTer",
      "releases": [
        {
          "name": "BBCMicro_20200512.rbf",
          "sha": "29b4e2ad8909cc5eec1b2eb6ba3ee6852f1da272",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/BBCMicro_MiSTer/master/releases/BBCMicro_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "BBCMicro_20200517.rbf",
          "sha": "cfe20e83f8f4e37c81ac7f6003807e4c1fe59a75",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/BBCMicro_MiSTer/master/releases/BBCMicro_20200517.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "C16_MiSTer",
      "description": "Commodore C16 and Plus/4 for MiSTer",
      "readme": "Commodore 264 (C16 and Plus/4) for MISTer\r\nMiSTer port by Sorgelig\r\n\r\nPort has follwing changes/enhancements:\r\n\r\n- Choice between C16(64KB) and Plus/4\r\n- Cartridge support (*.BIN) for Plus/4 model\r\n- Disk with write support (*.D64)\r\n- Partly/fully Loadable system ROM for C1541,Kernal,Basic,Function.\r\n- Scandoubler with HQ2x and Scanlines\r\n- Joystick with swap function\r\n- Reset procedure has been improved and should be stable now.\r\n\r\nROM can be loaded from SD card. Put boot.rom into C16 folder.\r\nContent of boot.rom: C1541 + kernal + basic + func_low + func_high\r\nEach part is 16KB.\r\nYou can load only part of whole ROM, for example only C1541+kernal (JiffyDOS).\r\n\r\n\r\nOriginal ReadMe (has outdated and non-related info):\r\n-------------------------------------------------------------------------------\r\nFPGATED v1.0\r\nCopyright 2013-2016 Istvan Hegedus\r\n\r\nFPGATED is a cycle exact FPGA core for the MOS 7360/8360 TED chip written in verilog language.\r\nMOS 7360/8360 is complex chip providing graphic, sound, bus and memory control for the Commodore 264\r\nseries 8 bit computers, namely the Commodore Plus4, Commodore 16 and Commodore 116.\r\n\r\nIn addition to the TED core modul FPGATED contains a simple C16 implementation using TED core and Gadget Factory's \r\nPapilio One 500k platform with a customized IO wing called Papilio TEDWing. The 6502 CPU core of C16 is created by \r\nPeter Wendrich in vhdl and is taken from the FPGA64 project with the permission of the author.\r\n\r\nFor more technical details and building Papilio TEDWing module visit https://hackaday.io/project/11460-fpgated\r\n\r\nFiles\r\n\r\nbasic_rom.v\t\tC16/Plus4 Basic rom module\r\nc16.v\t\t\tThis is the TOP module of FPGATED implementing a C16 computer\r\nc16_testbench.v\t\tC16 testbench for simulation\r\nc16_keymatrix.v\t\tC16/Plus4 keyboard matrix emulation module\r\ncolors_to_rgb.v\t\tTED color code conversion module to 12bit RGB values\r\ncpu65xx_e.vhd\t\t6502 core vhdl header\r\ncpu65xx_fast.vhd\t6502 core vhdl code\r\ndram.v\t\t\tDRAM module for internal FPGA SRAM memory implementation\r\nkernal_rom.v\t\tC16/Plus4 Kernal rom module\r\nmos6529.v\t\tMOS 6529 IO chip emulation module\r\nmos8501.v\t\tMOS 8501 CPU shell for 6502 core\r\npalclockgen.v\t\tXilinx DCM module for PAL system clock signal\r\nps2receiver.v\t\tPS2 keyboard receiver module\r\nram.v\t\t\tSimulated RAM for testbench\r\nted.v\t\t\tMOS 7360/8360 FPGA core\r\n\r\nbasic.hex\t\tC16/Plus4 BASIC rom hexadecimal dump\r\nDiag264_NTSC.hex\tDiag264 NTSC kernal hexadecimal dump\r\nDiag264_PAL.hex\t\tDiag264 PAL kernal hexadecimal dump\r\nkernal_NTSC.hex\t\tC16/Plus4 NTSC Kernal rom hexadecimal dump\r\nkernal_PAL.hex\t\tC16/PLus4 PAL Kernal rom hexadecimal dump\r\n\r\nTEDwing.ucf\t\tXilinx ucf file for Papilio TEDwing\r\nbin2hex.pl\t\tPerl script for creating hex dump of binary rom image files\r\n  \r\nc16_PAL.bit\t\tA compiled PAL FPGATED core for Papilio platform using FPGATED wing\r\n\r\n\r\nInstallation instructions are for Xilinx FPGA platforms but the source files with the exception of palclockgen.v\r\nand Xilinx ucf files can be used for other vendor's FPGAs. \r\nSome modules are using Xilinx specific (* RAM_STYLE=\"BLOCK\" *) directive for forcing the synthesis tool to \r\nuse FPGA internal block ram for certain arrays. In case of other vendor's FPGAs see vendor specific documentation\r\nfor generating block ram.\r\n\r\nBuilding FPGATED on the Papilio Platform requires a suitable wing. One can use the Arcade megawing but it lacks\r\nexternal memory and IEC bus for peripherial connections. Thus I recommend to build TEDwing designed by me. Look for\r\neagle PCB and schematic files in FPGATED source package.\r\nAlthough FPGATED can be synthetised to a Papilio One board using Spartan3E chip, I recommend to go for Papilio Pro\r\nplatform which has external 8Mbyte SDRAM and a Spartan 6 LX9 FPGA which has more internal sram. In both cases there\r\nare plenty of free resources on the FPGA for FPGATED (if you use external 64k ram).\r\n\r\nInstallation instructions:\r\n\r\n1. Create a new project in Xilinx ISE Webpack and choose the proper FPGA family for the implementation.\r\n2. Choose to use HDL verilog and vhdl for the design.\r\n3. Add all *.v files to the project\r\n4. Using ISE DCM wizard create a clock generator for FPGATED. \r\n   Use CLKFX output of DCM and specify 28.37515MHz PAL or 28.63636MHz for NTSC system\r\n   This will be the main FPGA clock connected to the clk signal of all modules\r\n   Modify C16.v to use proper DCM instantiation (out of scope of this document)\r\n5. Open kernal_rom.v and uncomment the proper Kernal file (Kernal_NTSC.hex or Kernal_PAL.hex) to use.\r\n   You can even use a custom rom or JiffyDos if you own it (JiffyDos is working fine, I have tested).\r\n   Diag264 roms are included for testing purposes.\r\n6. If you don't use TEDwing modify or replace TEDwing.ucf file for proper pinout setup\r\n7. Video output of FPGATED is a PAL/NTSC RGBS signal so you will need a VGA->scart custom cable to\r\n   hook it up to a monitor or television. The cable is identical to minimig scart cables (see internet for wiring diagram)\r\n\r\nEnjoy FPGATED.\r\n\r\nSee https://hackaday.io/project/11460-fpgated for detailed installation instructions.\r\n\r\nTED module signals:\r\n\r\n input wire clk\t\t\tmain FPGA clock must be 4*dot clk so 28.375152MHz for PAL and 28.63636 for NTSC \r\n input wire [15:0] addr_in\t16 bits address bus in\r\n output wire [15:0] addr_out\t16 bits address bus out\r\n input wire [7:0] data_in\t8 bits data bus in\r\n output wire [7:0] data_out\t8 bits data bus out\r\n input wire rw\t\t\tRW signal to TED, low during write, high during read (real TED pulls it high during reads)\r\n output wire cpuclk\t\tthis is a CPU clock out for external real CPU\r\n output wire [6:0] color\t7 bits color code using TED's color palette values\r\n output wire csync\t\tcomposite sync signal for PAL/NTSC displays\r\n output wire irq\t\tactive low IRQ signal to CPU\r\n output wire ba\t\t\tBA (or with other name RDY) signal to 8501 CPU \r\n output reg mux\t\t\tMUX signal, identical to original\r\n output reg ras\t\t\tRAS signal, identical to original\r\n output reg cas\t\t\tCAS signal, identical to original\r\n output reg cs0\t\t\tCS0 signal, identical to original\r\n output reg cs1\t\t\tCS1 signal, identical to original\r\n output reg aec\t\t\tAEC signal, identical to original\r\n output wire snd\t\tSound output. PWM modulated sound, needs a low pass filter outside the FPGA\r\n input wire [7:0] k\t\tKeyport in, same as in original TED\r\n output wire cpuenable\t\ta short enable signal used for synchronous FPGA 6502 CPU clocking\r\n\r\n\r\nStill to do:\r\n\r\nFPGATED is not ready yet. I just released it in this state because I did not want to keep it in a secret longer before someone else\r\ncreates it. I have plans to continue.\r\n\r\n- write a plus4 shell using Papilio Pro platform\r\n- Jostick emulation on keyboard (as TEDwing doesn't have joystick ports) \r\n- scandoubler for VGA displays\r\n- fix internal video shift mechanism for proper FLI emulation\r\n- Chorma/Luma signal generation\r\n- Try it in a real C16 or Plus4!\r\n\r\nContact: hegedusis@t-online.hu\r\n\r\nSpecial Thanks to Levente Harsfalvi for the technical information on TED sound generators and for some other important hints!\r\nThanks to Laszlo Jozsef for the color conversion table and the Spartan6 board that I have never had time to build...\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/C16_MiSTer",
      "releases": [
        {
          "name": "C16_20200512.rbf",
          "sha": "493d1fa538b52be14d1c8c7a7166dee29772bd9f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C16_MiSTer/master/releases/C16_20200512.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "C64_MiSTer",
      "description": null,
      "readme": "# C64 for [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\nBased on FPGA64 by Peter Wendrich with heavy later modifications by different people.\n\n## Features\n- C64 and C64GS modes.\n- Disk read/write support (*.D64)\n- Amost all cartrige formats (*.CRT)\n- Direct file injection (*.PRG)\n- Dual SID with several degree of mixing 6581/8580 from stereo to mono.\n- Similar to 6581 and 8580 SID filters.\n- OPL2 sound expander.\n- 4 joysticks mode.\n- UART connection to Internet.\n- Loadable Kernal/C1541 ROMs.\n- Special reduced border mode for 16:9 display.\n\n## Installation\nCopy the *.rbf to the root of the SD card. Copy disks/carts to C64 folder.\n\n## Usage\n\n### Keyboard\n* F2,F4,F6,F8,Left/Up keys automatically activate Shift key.\n* F9 - pound key.\n* F10 - plus key.\n* F11 - restore key. Also special key in AR/FC carts.\n* Alt - C= key.\n\n![keyboard-mapping](https://github.com/mister-devel/C64_MiSTer/blob/master/keymap.gif)\n\n### Loadable ROM\nAlternative ROM can be placed in C64 folder with the name boot.rom.\nFormat is simple concatenation of BASIC + Kernal.rom + C1541.rom\n\nTo create the ROM in DOS or Windows, gather your files in one place and use the following command from the DOS prompt. \nThe easiest place to acquire the ROM files is from the VICE distribution. BASIC and KERNAL are in the C64 directory,\nand dos1541 is in the Drives directory.\n\n`COPY BASIC + KERNAL + dos1541 BOOT.ROM /B`\n\nTo use JiffyDOS or another alternative kernel, replace the filenames with the name of your ROM or BIN file.  (Note, you muse use the 1541-II ROM. The ROM for the original 1541 only covers half the drive ROM and does not work with emulators.)\n\n`COPY /B BASIC.bin +JiffyDOS_C64.bin +JiffyDOS_1541-II.bin BOOT.ROM`\n\nTo confirm you have the correct image, the BOOT.ROM created must be exactly 32768 bytes long. \n\n### Autoload the cartridge\nPlace the desired cartridge with the name boot3.rom in C64 folder to autoload it on start.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/C64_MiSTer",
      "releases": [
        {
          "name": "C64_20200226.rbf",
          "sha": "316f7c02174204a5d46aa33e9e34d9af21b9b756",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200226.rbf",
          "type": "RBF"
        },
        {
          "name": "C64_20200403.rbf",
          "sha": "2d2470dcc5d7a7c7e4833e23736feb5a80ff7ffb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200403.rbf",
          "type": "RBF"
        },
        {
          "name": "C64_20200404.rbf",
          "sha": "ea0d6ecd9f0d937ef9482f7f4aee922d696bfcde",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200404.rbf",
          "type": "RBF"
        },
        {
          "name": "C64_20200408.rbf",
          "sha": "9e149a7c169744bd79a63bb260d707802f8bd504",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "C64_20200411.rbf",
          "sha": "1db1358c1b5c08739d461bc205c6827d2ca64ba8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200411.rbf",
          "type": "RBF"
        },
        {
          "name": "C64_20200419.rbf",
          "sha": "566ad1bf890e47bdfc0bf8b4828a86d431e99787",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "C64_20200420.rbf",
          "sha": "51686a8f8a891c80e3513cfa1b5608b39e5c2103",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "C64_20200430.rbf",
          "sha": "91e89edcd2a7e41a0e8b2fd7327ef96a578ff161",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/C64_MiSTer/master/releases/C64_20200430.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "ColecoVision_MiSTer",
      "description": "ColecoVision for MiSTer",
      "readme": "---------------------------------------------------------------------------------\r\n--\r\n-- ColecoVision port to MiSTer by Sorgelig\r\n-- 05 November 2017\r\n--\r\n---------------------------------------------------------------------------------\r\n--\r\n-- Original core https://github.com/wsoltys/mist-cores/tree/master/fpga_colecovision\r\n--\r\n---------------------------------------------------------------------------------\r\n--\r\n--   Put *.col/*.bin files into Coleco folder\r\n--\r\n--   Joystick support.\r\n--\r\n---------------------------------------------------------------------------------\r\n ",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/ColecoVision_MiSTer",
      "releases": [
        {
          "name": "ColecoVision_20200227.rbf",
          "sha": "90c16490a3e8722129daeace46a926212cc96716",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ColecoVision_MiSTer/master/releases/ColecoVision_20200227.rbf",
          "type": "RBF"
        },
        {
          "name": "ColecoVision_20200409.rbf",
          "sha": "157dac64a1df6d14ebb0733d55dfc0007d54b90c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ColecoVision_MiSTer/master/releases/ColecoVision_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "ColecoVision_20200421.rbf",
          "sha": "960b953866d58f8e4943ecf60ef7ead7327495e8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ColecoVision_MiSTer/master/releases/ColecoVision_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "ColecoVision_20200510.rbf",
          "sha": "b48da7990024ec1efc162c1276577d7396687ca6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ColecoVision_MiSTer/master/releases/ColecoVision_20200510.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "FlappyBird_MiSTer",
      "description": "Flappy Bird written entirely in discreet logic for MiSTer",
      "readme": "# Flappy Bird\n\nPorted from original project [here](https://github.com/themaxaboy/Flappy-Bird-Verilog/).\n\nThis core is written entirely in discreet logic, apparently. Not reccomended as a reference example.\n\n## Instructions\n- Press Flap\n- When you die, press reset.",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/FlappyBird_MiSTer",
      "releases": [
        {
          "name": "FlappyBird_20200510.rbf",
          "sha": "26bc2487e24a1d6ccd585be65155a0b46e636645",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/FlappyBird_MiSTer/master/releases/FlappyBird_20200510.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Gameboy_MiSTer",
      "description": "Gameboy for MiSTer",
      "readme": "# Gameboy for MiSTer\r\n\r\nThis is port of [Gameboy for MiST](https://github.com/mist-devel/mist-board/tree/master/cores/gameboy)\r\n\r\n* Place RBF file into root of SD card.\r\n* Place *.gb files into Gameboy folder.\r\n\r\n## Open Source Bootstrap roms\r\nThis now includes the open source boot ROMs from [https://github.com/LIJI32/SameBoy/](https://github.com/LIJI32/SameBoy/) (for maximum GBC compatibility/authenticity you can still place the Gameboy color bios/bootrom into the Gameboy folder and rename it to boot1.rom)\r\n\r\n## Palettes\r\nCore supports custom palettes (*.gbp) which should be placed into Gameboy folder. Some examples are available in palettes folder.\r\n\r\n## Autoload\r\nTo autoload custom palette at startup rename it to boot0.rom\r\nTo autoload favorite game at startup rename it to boot2.rom\r\n\r\n## Video output\r\nThe Gameboy can disable video output at any time which causes problems with vsync_adjust=2 or analog video during screen transitions. Enable the Stabilize video option to fix this at the cost of some latency.\r\n\r\n\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Gameboy_MiSTer",
      "releases": [
        {
          "name": "Gameboy_20200227.rbf",
          "sha": "c7644310439e65ffe8f8ad4f4be17789b5d5d587",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200227.rbf",
          "type": "RBF"
        },
        {
          "name": "Gameboy_20200331.rbf",
          "sha": "c2aa704811f9332112311703937fdcd16d7c60f7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200331.rbf",
          "type": "RBF"
        },
        {
          "name": "Gameboy_20200408.rbf",
          "sha": "87e2a6392449ebeae1d9c572d6bbb2d013d8d63c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Gameboy_20200421.rbf",
          "sha": "729466f1e3ddca1785fbcc06618653d602c961ff",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "Gameboy_20200510.rbf",
          "sha": "2e1a2b2e74004b2cc99726bf71ca99ae11ec73ab",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200510.rbf",
          "type": "RBF"
        },
        {
          "name": "Gameboy_20200622.rbf",
          "sha": "c06781cc85fd51fec3f11a4c8914a6c8a035f349",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200622.rbf",
          "type": "RBF"
        },
        {
          "name": "Gameboy_20200701.rbf",
          "sha": "5167fd914340fcb5db8009082b79482b8a6d1f08",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200701.rbf",
          "type": "RBF"
        },
        {
          "name": "Gameboy_20200819.rbf",
          "sha": "0c584256d4df065d287223e2b9a0a6533e8427a4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Gameboy_MiSTer/master/releases/Gameboy_20200819.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "GBA_MiSTer",
      "description": "GBA for MiSTer",
      "readme": "# GBA_MiSTer\nGBA for MiSTer\n\n# HW Requirements/Features\nThe games can run from a naked DE10-Nano with the build-in DDR-RAM.\nHowever, using SDRAM is highly recommended, as some games may slowdown or loose sync when using DDR-RAM.\n\nWhen using SDRAM, it requires 32MB SDRAM for games less than 32MB. 32MB games require either 64MB or 128MB module.\nSDRAM will be automatically used when available.\n\n# Bios\nOpensource Bios from Normmatt is included, however it has issues with some games.\nOriginal GBA BIOS can be placed to GBA folder with name boot.rom\n\nPLEASE do not report errors without testing with the original BIOS\n\nHomebrew games are sometimes not supported by the official BIOS, \nbecause the BIOS checks for Nintendo Logo included in the ROM, which is protected by copyright.\nTo use these ROMs without renaming or removing the the boot.rom, \nyou can activate the \"Homebrew BIOS\" settings in OSD.\nAs the BIOS is already replaced at boot time, you must save this settings and hard reset/reload the GBA core.\n\n# Status\n~1600 games tested until ingame:\n- 99% without major issues (no crash, playable)\n\n# Features\n- all videomodes including affine and special effects\n- all soundchannels\n- saving as in GBA\n- Savestates\n- FastForward - speed up game by factor 2-4\n- CPU Turbomode - give games additional CPU power\n- Flickerblend - set to blend or 30Hz mode for games like F-Zero, Mario Kart or NES Classics to prevent flickering effects\n- Spritelimit - turn on to prevent wrong sprites for games that rely on the limit (opt-in)\n- Cheats\n- Color optimizations: shader colors and desaturate\n- Rewind: go back up to 60 seconds in time\n- Tilt: use analog stick (map stick in Mister Main before)\n- Solar Sensor: Set brightness in OSD\n- Gyro: use analog stick (map stick in Mister Main before)\n- RTC: automatically used, works with RTC board or internet connection\n- 2x Resolution: game is rendered at 480x320 instead of 240x160 pixels\n\n# Savestates\nCore provides 4 slots to save the state. The first slot gets saved to disk and automatically loaded (but not applied)\nupon next load of game. Rest 3 slots are residing only in memory for temporary use.\nFirst slot save/restore is available from OSD as well. \n\n\nHot keys for save states:\n- Alt-F1..F4 - save the state\n- F1...F4 - restore\n\n# Rewind\nTo use rewind, turn on the OSD Option \"Rewind Capture\" and map the rewind button.\nYou may have to restart the game for the function to work properly.\nAttention: Rewind capture will slow down your game by about 0.5% and may lead to light audio stutter.\nRewind capture is not compatible to \"Pause when OSD is open\", so pause is disabled when Rewind capture is on.\n\n# Spritelimit\nCurrently there are only few games known that produce glitches without sprite pixel limit:\n- Gunstar Super Heroes\n- Famicon Mini Series Vol21 - Vol30\n\n# 2x Resolution\nImproved rendering resolution for:\n- Affine background: \"Mode7\" games, typically racing games like Mario Kart\n- Affine sprites: games that scale or rotate sprites\nThis rendering is experimental and can cause glitches, as not all game behavior can be supported.\nThose glitches can not be fixed without gamespecific hacks and therefore will not be fixed. \nPlease don't add bugs in such cases.\n\n# Cartridge Hardware supported games\n- RTC: Pokemon Sapphire+Ruby+Emerald, Boktai 1+2+3, Sennen Kazoku, Rockman EXE 4.5\n- Solar Sensor: Boktai 1+2+3\n- Gyro: Wario Ware Twisted\n- Tilt: Yoshi Topsy Turvy/Universal Gravitation, Koro Koro Puzzle - Happy Panechu!\n\nIf there is a game you want to play that also uses one of these features, but is not listed, please open a bug request.\n\n# Not included\n- Multiplayer features like Serials\n- E-Reader support\n- other cartridge hardware\n\n# Accuracy\n\n(Status 03.02.2020)\n\n>> Attention: the following comparisons are NOT intended for proving any solution is better than the other.\n>> This is solely here for the purpose of showing the status compared to other great emulators available.\n>> It is not unusual that an emulator can play games fine and still fail tests. \n>> Furthermore some of these tests are new and not yet addressed by most emulators.\n\nThere is great testsuite you can get from here: https://github.com/mgba-emu/suite\nIt tests out correct Memory, Timer, DMA, CPU, BIOS behavior and also instruction timing. It works 100% on the real GBA.\nThe suite itself has several thousand single tests.\n\nTestname      | TestCount | Mister GBA| mGBA | VBA-M | Higan\n--------------|-----------|-----------|------|-------|-------\nMemory        |      1552 |  1552     | 1552 |  1338 | 1552\nIOREAD        |       123 |   123     |  116 |   100 |  123\nTiming        |      1660 |  1554     | 1540 |   692 | 1424\nTimer         |       936 |   445     |  610 |   440 |  457\nTimer IRQ     |        90 |    65     |   70 |     8 |   36\nShifter       |       140 |   140     |  140 |   132 |  132\nCarry         |        93 |    93     |   93 |    93 |   93\nBIOSMath      |       625 |   625     |  625 |   625 |  625\nDMATests      |      1256 |  1248     | 1232 |  1032 | 1136\nEdgeCase      |        10 |     3     |    7 |     3 |    1\nLayer Toggle  |         1 |  pass     | pass |  pass | fail \nOAM Update    |         1 |  fail     | fail |  fail | fail\n\n\nA complex CPU only testuite can be found here: https://github.com/jsmolka/gba-suite\n\nTestname | Mister GBA| mGBA | VBA-M | Higan\n---------|-----------|------|-------|-------\nARM      |  Pass     | Fail |  Fail |  Fail\nTHUMB    |  Pass     | Fail |  Fail |  Fail\n\n# Information for developers\n\nHow to simulate:\nhttps://github.com/MiSTer-devel/GBA_MiSTer/tree/master/sim\n\nHow to implement a GPIO module:\nhttps://github.com/MiSTer-devel/GBA_MiSTer/blob/master/gpio_readme.md\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/GBA_MiSTer",
      "releases": [
        {
          "name": "GBA_20200226.rbf",
          "sha": "7bee7208ca2af796b069c87db713538b3f7b224d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200226.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200305.rbf",
          "sha": "f6b9093dc376a43921cbbc0dfc2bf3e046573481",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200305.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200309.rbf",
          "sha": "b206a7c5bdebf5fc9d791f4bb4388f0707b930b0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200309.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200323.rbf",
          "sha": "b5c3cf9f6390abbfa2e799ee3ffacc5b64312798",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200323.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200408.rbf",
          "sha": "2bb4b326cb194af1cd695554efd008c3e2dc08a3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200409.rbf",
          "sha": "d200ec4c0c3e5c28e189c961998440cdf5562ddc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200422.rbf",
          "sha": "012023da7e5498664c5a15a023140a81c63539b9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200422.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200513.rbf",
          "sha": "4471858373e98f1b18ded71ce3b8f29501e59ced",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200513.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200514.rbf",
          "sha": "e6764fd91aca1a3418fbb6bcb7e93b5577a62a58",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200514.rbf",
          "type": "RBF"
        },
        {
          "name": "GBA_20200617.rbf",
          "sha": "3309a00a015bb8bc8e4cf752e0d99e8b0a6b1af0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/GBA_MiSTer/master/releases/GBA_20200617.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Genesis_MiSTer",
      "description": "Sega Genesis for MiSTer",
      "readme": "# SEGA Megadrive/Genesis for MiSTer.\n\nThis is the port of fpgagen core.\n\nfpgagen - a SEGA Megadrive/Genesis clone in a FPGA.\nCopyright (c) 2010-2013 Gregory Estrade (greg@torlus.com)\nAll rights reserved\n\n\n## Installing\ncopy *.rbf to root of SD card. Put some ROMs (*.BIN/*.GEN/*.MD) into Genesis folder\n\n\n## Hot Keys\n* F1 - reset to JP(NTSC) region\n* F2 - reset to US(NTSC) region\n* F3 - reset to EU(PAL)  region\n\n\n## Auto Region option\nThere are 2 versions of region detection:\n\n1) File name extension:\n\n* BIN -> JP\n* GEN -> US\n* MD  -> EU\n\n2) Header. It may not always work as not all ROMs follow the rule, especially in European region.\nThe header may include several regions - the correct one will be selected depending on priority option.\n\n\n## Additional features\n\n* Multitaps: 4-way, Team player, J-Cart\n* SVP chip (Virtua Racing)\n* Audio Filters for Model 1, Model 2, Minimal, No Filter.\n* Option to choose between YM2612 and YM3438 (changes Ladder Effect behavior).\n* Composite Blending, smooth dithering patterns in games.\n* Sprite Limit, enables more sprites.\n* CPU Turbo, mitigates slowdowns.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Genesis_MiSTer",
      "releases": [
        {
          "name": "Genesis_20200224.rbf",
          "sha": "b8b27dfade77fa2e594a5d878327455cabe80c52",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200224.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200225.rbf",
          "sha": "55c8b52392eda908305ed8f8ad4da16ef6695d7f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200225.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200325.rbf",
          "sha": "c50706b9f63e4e1c5f0008b971ee532fabaaa019",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200325.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200406.rbf",
          "sha": "131bc421d60a9b4974c6730d06444f19080f6911",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200406.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200408.rbf",
          "sha": "aadaaa3aa94903dd3f1860259f6fca0068d5d400",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200421.rbf",
          "sha": "a4f8f2768d990e9c5526aaee99337ef856500477",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200427.rbf",
          "sha": "54c3c3c5decc65f499dd47b575c55328d304aa57",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200427.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200502.rbf",
          "sha": "7efc1ee219333c7a428d8b4987f721b2769fdc22",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200502.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200503.rbf",
          "sha": "749b717b5eabc81d4fa81efbdeb80555400533fa",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200503.rbf",
          "type": "RBF"
        },
        {
          "name": "Genesis_20200701.rbf",
          "sha": "acb2882443ad4ab30270d65861f511647a7b01de",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Genesis_MiSTer/master/releases/Genesis_20200701.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Jupiter_MiSTer",
      "description": "Jupiter Ace for MiSTer",
      "readme": "# Jupiter Ace for MISTer\n\n### Features:\n- RAM 51KB\n- Turbo x2, x4\n- Scandoubler with HQ2x\n- Supports *.ACE snapshots\n\n### Install\ncopy *.rbf to the root of SD card.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Jupiter_MiSTer",
      "releases": [
        {
          "name": "Jupiter_20200512.rbf",
          "sha": "b694e4e812bfb6f8bfb8be66df80509fdb41bf46",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Jupiter_MiSTer/master/releases/Jupiter_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "Jupiter_20200513.rbf",
          "sha": "4d48ce442e6b21509a2db417affb05c79311b823",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Jupiter_MiSTer/master/releases/Jupiter_20200513.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Laser310_MiSTer",
      "description": "VTECH Laser 310 Mister FPGA core",
      "readme": "\nThis is a MiSTer port of the core by:\nhttps://github.com/zzemu-cn/LASER310_FPGA_DD20\n\n\n# VZ Loader\n\nLoad VZ snapshots - there are two types, basic images and binary images. The basic images will load, and you need to type RUN&lt;enter&gt; to start. Binary ones should start automatically.\n\n# Joystick Support\n\nThe original system has a left and right joystick. It is possible you may need a second joystick to play some games.\n\n# TODO\n\n* cassette \n* floppy support\n* Sound\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Laser310_MiSTer",
      "releases": [
        {
          "name": "Laser310_20200704.rbf",
          "sha": "8b19cd478bfe6910847f9db59f891110ba978c74",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Laser310_MiSTer/master/releases/Laser310_20200704.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Main_MiSTer",
      "description": "Main MiSTer binary and Wiki",
      "readme": null,
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Main_MiSTer",
      "releases": [
        {
          "name": "MiSTer_20200313",
          "sha": "d1e2981930c3b8ba15c4c9f813bdb8bea9bbd115",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200313",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200325",
          "sha": "cacd171a1d31803da857c227abc931dded6ea72f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200325",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200413",
          "sha": "18766da5eafd56a572a856e962061bf545b1deef",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200413",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200419",
          "sha": "e3be2fbfa73bda53f9d24dfaff9595ed61af6792",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200419",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200420",
          "sha": "e063034452ac3a526a91d1f04dd67c5a885b5a5c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200420",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200421",
          "sha": "a38928f7d786e61839f83a9a7251b7b76ef881ee",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200421",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200424",
          "sha": "00a5eef51717d4d615382cce61a69bca02d4dab8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200424",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200429",
          "sha": "6b27ceccd3e1b47dd13507030ec6677e31a4f63c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200429",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200505",
          "sha": "63c6832a994512137a153c29e418d5376fa979bd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200505",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200509",
          "sha": "58f4c471964bfa70fb92b7623572b4b337756f4d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200509",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200517",
          "sha": "d331420a9c58cb37f3aff5278921a3d28c38fb58",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200517",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200519",
          "sha": "d6dc25dd07c191e4fde6900f5d71df858fa1dd8b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200519",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200526",
          "sha": "2d6688d61632fa5563bbbea004feb3bb4a7a358d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200526",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200529",
          "sha": "baff13f05db6f8352cf3429e84f96775d395f731",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200529",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200601",
          "sha": "927668226319e0f6f14b93a0ec621c65977d8834",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200601",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200602",
          "sha": "ead811a0fbe4d5cd33aa61d7cb5090093df62c50",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200602",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200606",
          "sha": "b1fd0c92f0434c52da10f857fa73b91cad731801",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200606",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200608",
          "sha": "487161f37a74bce95c271595cf0fc183a8890b7b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200608",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200618",
          "sha": "856a95c1430e80b8e5de1ff84bc6a0c038ae173d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200618",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200622",
          "sha": "d51cd350ec8f6d1bfe4a67ccf2ae363124e76151",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200622",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200629",
          "sha": "483633fd02a914df1f668cf8ee4c6ace8c04e299",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200629",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200701",
          "sha": "7bcb7bd43e14f500f4d8c7ddf10efe5109589f0a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200701",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200703",
          "sha": "4d42567cad0c3e67db798be207d89fe8d1de8902",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200703",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200705",
          "sha": "ef956ad1973e71a9ac6843abc2de4462bdccc859",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200705",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200811",
          "sha": "c99bf39e7520dace3452b8884e3a4b337c95b7f8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200811",
          "type": "OTHER"
        },
        {
          "name": "MiSTer_20200814",
          "sha": "b52013c32aa7aaea34a8f4a6b93662af3becd6c1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Main_MiSTer/master/releases/MiSTer_20200814",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "MegaCD_MiSTer",
      "description": "Mega CD for MiSTer",
      "readme": "# MegaCD for MiSTer by srg320\n\n# Installation\nPlace BIOS to MegaCD folder with name boot.rom\n\n# Features\nAbout 150 games tested without long playing, US/EU regions only.\n\n### Known issues:\n- Microcosm & Ultraverse Prime (US) - graphic glitch in game\n- Supreme Warrior - Ying Heung (US) - can't select 2 disk\n\n### Supported image formats:\n- CUE + single image\n- CUE + multiple images (image per track)\n\n### ZIP\nZIP is supported but doesn't work due to long positioning time.\nSo DON'T zip the images!\n\n### CD BIOS\nsupport BIOS per game. Place cd_bios.rom in game's folder.\n\n### Pier Solar\nPlace cartridge dump named cart.rom into game's folder\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/MegaCD_MiSTer",
      "releases": [
        {
          "name": "MegaCD_20200225.rbf",
          "sha": "a58df80aebed7cbcd03f927d7e7c446361a8c97c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200225.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200325.rbf",
          "sha": "ea20e60ed2dd5573a92c3e6b6d0ded39f761e36f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200325.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200408.rbf",
          "sha": "52ab2db2ff3784b1730763937194e3bd7412ba3b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200409.rbf",
          "sha": "c2a3da75108f8d2a01cdc63f25630b3b04e09c67",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200421.rbf",
          "sha": "9ce06cd27b1f06b2f9dbd3dcdec034232d4c852c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200502.rbf",
          "sha": "7f82f8699bce0a853238767a8534c0bd9bcf810f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200502.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200503.rbf",
          "sha": "b7913b09dc059e7ce14074efc8ca492e9df1fce5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200503.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200601.rbf",
          "sha": "40f90ee8db6164d88167cee8be98be8615efa5bc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200601.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200602.rbf",
          "sha": "2516fa1c762d39bd98e8a915e4e6c54d98208da4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200602.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200608.rbf",
          "sha": "f120cb6be52046fb1d4b7773cb3a781b779ad0dd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200608.rbf",
          "type": "RBF"
        },
        {
          "name": "MegaCD_20200620.rbf",
          "sha": "5b19fd8e0067abae361ddbeb8ab597ceca76e2c0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MegaCD_MiSTer/master/releases/MegaCD_20200620.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Menu_MiSTer",
      "description": null,
      "readme": "# Startup core for MiSTer\r\n\r\n* **ESC** - switch to options\r\n* **F1** - switch the background\r\n* **F9** - Go to Linux terminal (F12 - back)\r\n\r\n## Notes:\r\n* Core supports sub-folders started with _ character.\r\n* Regardless the place of RBF file, boot rom/vhd should be placed into either root of SD card or core's dedicated folder (should be created in root of SD card).\r\n* Joystick (including emulation by keyboard) buttons defined in this core is default map for all cores unless defined in particalar core.\r\n\r\n## Artwork\r\n* Place menu.png or menu.jpg to the root of SD card to have it as background on HDMI (you can use vga_scaler=1 if you want it on VGA).\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Menu_MiSTer",
      "releases": [
        {
          "name": "menu_20200223.rbf",
          "sha": "f09bc4a2131815c2d0f842fbe931623eaf5ef71e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Menu_MiSTer/master/releases/menu_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "menu_20200325.rbf",
          "sha": "b3551fcbafaaa7f4b4ba0d006e2de13091b78b41",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Menu_MiSTer/master/releases/menu_20200325.rbf",
          "type": "RBF"
        },
        {
          "name": "menu_20200409.rbf",
          "sha": "06ca50c147c33227b1f03fd189fb0c793bccf2ea",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Menu_MiSTer/master/releases/menu_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "menu_20200416.rbf",
          "sha": "236899f5c3232eab3f5af29f940cedfd381a75c6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Menu_MiSTer/master/releases/menu_20200416.rbf",
          "type": "RBF"
        },
        {
          "name": "menu_20200429.rbf",
          "sha": "f7162a1eccbe467d2018da13357924e0528488e3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Menu_MiSTer/master/releases/menu_20200429.rbf",
          "type": "RBF"
        },
        {
          "name": "menu_20200618.rbf",
          "sha": "4f4a5af9920cf7fc64dc2c91f3d3495e0c844ffc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Menu_MiSTer/master/releases/menu_20200618.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Minimig-AGA_MiSTer",
      "description": null,
      "readme": "\n# Minimig-AGA_MiSTer\n\nThis is a port of the minimig core to the [MiSTer board](https://github.com/MiSTer-devel).\n\n[minimig](http://en.wikipedia.org/wiki/Minimig) (short for Mini Amiga) is an open source re-implementation of an Amiga using a field-programmable gate array (FPGA). Original minimig author is Dennis van Weeren.\n\n[Amiga](http://en.wikipedia.org/wiki/Amiga_500) was - in my opinion - an amazing personal computer, announced around 1984, which - at the time - far surpassed any other personal computer on the market, with advanced graphic & sound capabilities, not to mention its great OS with preemptive multitasking capabilities.\n\nThe minimig-MiSTer variant in this repository has been upgraded with [AGA chipset](http://en.wikipedia.org/wiki/Amiga_Advanced_Graphics_Architecture) capabilites, which allows it to emulate the latest Amiga models ([Amiga 1200](http://en.wikipedia.org/wiki/Amiga_1200), [Amiga 4000](http://en.wikipedia.org/wiki/Amiga_4000) and (partially) [Amiga CD32](http://en.wikipedia.org/wiki/Amiga_CD32)). Ofcourse it also supports previous OCS/ECS Amigas like [Amiga 500](http://en.wikipedia.org/wiki/Amiga_500), [Amiga 600](http://en.wikipedia.org/wiki/Amiga_600) etc.\n\n\n## Core features supported\n\n* chipset variants : OCS, ECS, AGA\n* chipRAM : 0.5MB - 2.0MB\n* slowRAM : 0.0MB - 1.5MB\n* fastRAM : 0.0MB - 384MB\n* CPU core : 68000, 68020\n* kickstart : 1.2 - 3.1 (256kB, 512kB & 1MB kickstart ROMs currently supported)\n* HRTmon with custom registers mirror\n* floppy disks : 1-4 floppies (supports ADF floppy image format), with normal & turbo speeds\n* hard disks : 1-2 hard disk images (supports whole disk images, partition images, using whole SD card and using SD card partition)\n* video standard : PAL / NTSC\n* supports almost all OCS/ECS/AGA custom resolutions\n* peripherals : USB keyboards, USB mice, USB gamepads\n* serial connection to Linux with ability to connect to internet.\n* shared folder for rapid file exchange between Linux and Amiga.\n\n\n## Usage\n\n### Screen adjustment\nAdjustment is initiated from OSD menu. Keyboard control:\n* Cursor keys - top/left corner.\n* ALT+Cursor keys - bottom/right corner.\n* Enter - finish and store position.\n* Backspace - reset do default.\n* Esc - cancel and finish.\n\nPositions are saved in the configuration file. Up to 64 different resolutions can be adjusted.\n\n### Shared folder\n\nAll required files (and sources) are in extra/MiSTer_share.lha\n\nAmiga driver is based on Niklas Ekstr\u00f6m [a314](https://github.com/niklasekstrom/a314) driver.\n\nOn Amiga:\n- copy dummy.device to DEVS:\n- copy MountList to DEVS: (or add content from MountList to existing file)\n- copy MiSTerFileSystem to L:\n- open CLI and type there: mount share:\n- MiSTer drive will appear on main WB screen. If it will work, then you can add this command into user-startup file, and it will be mounted at every boot.\n\nOn Linux side the folder is \"shared\" inside Amiga folder.\n\n### Software\nTo use the core, you will need a Kickstart ROM image file, which you can obtain by copying Kickstart ROM IC from your actual Amiga, or by buying an [Amiga Forever](http://www.amigaforever.com/) software pack. The Kickstart image should be placed on the root of the SD card with the name KICK.ROM. Minimig also supports the [AROS](http://aros.sourceforge.net/) kickstart ROM replacement.\n\nThe minimig can read any ADF floppy images you place on the SD card. I recommend at least Workbench 1.3 or 3.1 (AmigaOS), some of the Amigas great games (I recommend Ruff'n'Tumble) or some of the amazing demos from the vast Amiga demoscene (like State of the Art from Spaceballs).\n\nThe minimig can also use HDF harddisk images, which can be created with [WinUAE](http://www.winuae.net/).\n\n### Recommended minimig config\n\n* for ECS games / demos : CPU = 68000, Turbo=NONE, Chipset=ECS, chipRAM=0.5MB, slowRAM=0.5MB, Kickstart 1.3\n* for AGA games / demos : CPU = 68020, Turbo=NONE, Chipset=AGA, chipRAM=2MB, slowRAM=0MB, fastRAM=24MB, Kickstart 3.1\n\n### Controlling minimig\n\nKeyboard special keys:\n\n* F12         - OSD menu\n* F11         - start monitor (HRTmon) if HRTmon is enabled in OSD menu (otherwise F11 is the Amiga HELP key)\n* ScrollLock  - toggle keyoard only / mouse / joystick 1 / joystick 2 emulation on the keyboard (direction keys + LCTRL)\n\n\n## Sources\n\nThis sourcecode is based on Rok Krajnc project ([minimig-de1](https://github.com/rkrajnc/minimig-de1)).\n\nOriginal minimig sources from Dennis van Weeren with updates by Jakub Bednarski are published on [Google Code](http://code.google.com/p/minimig/).\n\nSome minimig updates are published on the [Minimig Discussion Forum](http://www.minimig.net/), done by Sascha Boing.\n\nARM firmware updates and minimig-tc64 port changes by Christian Vogelsang ([minimig_tc64](https://github.com/cnvogelg/minimig_tc64)) and A.M. Robinson ([minimig_tc64](https://github.com/robinsonb5/minimig_tc64)).\n\nMiSTer project by Sorgelig ([MiSTer](https://github.com/MiSTer-devel)).\n\nTG68K.C core by Tobias Gubener.\n\n\n## Links & more info\n\nMy page [somuch.guru](http://somuch.guru/).\n\nFurther info about minimig can be found on the [Minimig Discussion Forum](http://www.minimig.net/).\n\nMiSTer board support & other cores on the [MiSTer Project Page](https://github.com/MiSTer-devel).\n\n\n## License\n\nCopyright \u00a9 2011 - 2016 Rok Krajnc (rok.krajnc@gmail.com)\n\nCopyright \u00a9 2005 - 2015 Dennis van Weeren, Jakub Bednarski, Sascha Boing, A.M. Robinson, Tobias Gubener, Till Harbaum\n\nCopyright \u00a9 2017 - 2020 Sorgelig (mister.devel@gmail.com)\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Minimig-AGA_MiSTer",
      "releases": [
        {
          "name": "Minimig-20200301.rbf",
          "sha": "5894cb1bd97412185530e434b3b0d433be40b9bc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig-20200301.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig-20200314.rbf",
          "sha": "999a1915451d69f584c584c8c451041b5ac8400f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig-20200314.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig-20200327.rbf",
          "sha": "82f1b220b68a9b587e100122cb76d15100ced49b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig-20200327.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig-20200407.rbf",
          "sha": "71aec560a514da114d76d46230f109c725530780",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig-20200407.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200229.rbf",
          "sha": "8b81eb53e13f59153db7e43db972c873b0f4d8e5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200229.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200408.rbf",
          "sha": "f17c83b4475ef2c2325f88a4cf49cbcbfb5c8ae2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200409.rbf",
          "sha": "c43ccf97915d631a27672286425a4cbee991eb76",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200420.rbf",
          "sha": "e2d43c412ba742af566d8396a6aabe0367c48735",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200421.rbf",
          "sha": "7591766d8d90ebe5eb3fb621fa2cef8964f5bc71",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200423.rbf",
          "sha": "c20eee15146fc0b2ac9f39b0ab944f88799f0bec",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200423.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200424.rbf",
          "sha": "2a05c6573510c1ec0b58cb9c414b55500bfc747b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200424.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200504.rbf",
          "sha": "13168bdf3cef9e271f6eec6b8f7f917a58fc2b6e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200504.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200505.rbf",
          "sha": "b5c2482a00825877592ee06d3d06e3525cc9b0dd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200505.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200529.rbf",
          "sha": "7b741c23543a7b9c89ff681ec9d72072b149b032",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200529.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200629.rbf",
          "sha": "642a4b95bfb52e804807f4f69163430d3f412703",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200629.rbf",
          "type": "RBF"
        },
        {
          "name": "Minimig_20200701.rbf",
          "sha": "49113cf2de77dbadaf3a57c46f6218254021dd49",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Minimig-AGA_MiSTer/MiSTer/releases/Minimig_20200701.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "MiSTer-Arcade-Gyruss",
      "description": "FPGA implementation of Gyruss arcade game",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: Gyruss  for MiSTer by MiSTer-X\n-- 29 February 2020\n-- \n---------------------------------------------------------------------------------\n-- T80/T80s - Z80 compatible microprocessor core  Version 0242\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n-- SYNTHEZIABLE CPU09 - 6809 compatible CPU Core  Version 1.4 (Modified)\n-- Author: John E. Kent (dilbert57@opencores.org)\n---------------------------------------------------------------------------------\n-- T8039 Microcontroller System\n-- Copyright (c) 2004, Arnim Laeuger (arniml@opencores.org)\n---------------------------------------------------------------------------------\n-- YM2149 (AY-3-8910)\n-- Copyright (c) MikeJ - Jan 2005\n---------------------------------------------------------------------------------\n--\n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Fire\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Fire\n--\n-- Joystick support.\n--\n--\n---------------------------------------------------------------------------------\n-- 01 March 2020: Fix sound problem\n---------------------------------------------------------------------------------\n\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\n\nHow to install:\n  0. Update MiSTer binary to v200106 or later\n  1. copy releases/*.mra to /media/fat/_Arcade\n  2. copy releases/*.rbf to /media/fat/_Arcade/cores\n  3. copy ROM zip files  to /media/fat/_Arcade/mame\n\n\nBe sure to use the MRA file in \"releases\" of this repository.\nIt does not guarantee the operation when using other MRA files.\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/MiSTer-Arcade-Gyruss",
      "releases": [
        {
          "name": "Arcade-Gyruss_20200229.rbf",
          "sha": "edfe2861978bc9b980d13b934511997bcad3ccc0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Arcade-Gyruss_20200229.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Gyruss_20200301.rbf",
          "sha": "f131a4d7ef63854daafbf99781760435e5381601",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Arcade-Gyruss_20200301.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Gyruss_20200306.rbf",
          "sha": "09c40d6be76e4c69dcd8a07b1b1a93ed01e0b2db",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Arcade-Gyruss_20200306.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Gyruss_20200316.rbf",
          "sha": "227b1112e072e9a009bc9263ed012d7bd3158870",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Arcade-Gyruss_20200316.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Gyruss_20200408.rbf",
          "sha": "6e623d962e21ca2b72862b936cd81e0a651fde35",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Arcade-Gyruss_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-Gyruss_20200419.rbf",
          "sha": "7f9677da12051aa95b76630b07005fd3fccce4f1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Arcade-Gyruss_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Gyruss (Centuri).mra",
          "sha": "e35d39e5700601e7f6afafa8a257147f24442a1f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Gyruss%20(Centuri).mra",
          "type": "MRA",
          "extra": {
            "name": "Gyruss (Centuri)",
            "rbf": "Gyruss",
            "zips": [
              "gyruss.zip|gyrussce.zip"
            ]
          }
        },
        {
          "name": "Gyruss (bootleg).mra",
          "sha": "d6eb5eed336177f01b90143da56a34288278bda1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Gyruss%20(bootleg).mra",
          "type": "MRA",
          "extra": {
            "name": "Gyruss (bootleg)",
            "rbf": "gyruss",
            "zips": [
              "gyruss.zip|gyrussb.zip"
            ]
          }
        },
        {
          "name": "Gyruss.mra",
          "sha": "bb7e6bab2b1e750429d73146203047da639ebf28",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Gyruss.mra",
          "type": "MRA",
          "extra": {
            "name": "Gyruss",
            "rbf": "Gyruss",
            "zips": [
              "gyruss.zip"
            ]
          }
        },
        {
          "name": "Venus (bootleg of Gyruss).mra",
          "sha": "406ce74cd738a6116a56a5f60ce89176e878197c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-Gyruss/master/releases/Venus%20(bootleg%20of%20Gyruss).mra",
          "type": "MRA",
          "extra": {
            "name": "Venus (bootleg of Gyruss)",
            "rbf": "gyruss",
            "zips": [
              "gyruss.zip|venus.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "MiSTer-Arcade-SEGASYS1",
      "description": "FPGA implementation of SEGA SYSTEM 1 arcade board",
      "readme": "---------------------------------------------------------------------------------\n-- \n-- Arcade: SEGA System 1  for MiSTer by MiSTer-X\n-- 07 January 2020\n-- \n---------------------------------------------------------------------------------\n-- T80/T80s - Version : 0242\n--------------------------------\n-- Z80 compatible microprocessor core\n-- Copyright (c) 2001-2002 Daniel Wallner (jesus@opencores.org)\n---------------------------------------------------------------------------------\n--\n-- Keyboard inputs :\n--\n--   F2          : Coin + Start 2 players\n--   F1          : Coin + Start 1 player\n--   UP,DOWN,LEFT,RIGHT arrows : Movements\n--   SPACE       : Trig1\n--   CTRL        : Trig2\n--   ALT         : Trig3\n--\n-- MAME/IPAC/JPAC Style Keyboard inputs:\n--   5           : Coin 1\n--   6           : Coin 2\n--   1           : Start 1 Player\n--   2           : Start 2 Players\n--   R,F,D,G     : Player 2 Movements\n--   A           : Player 2 Trig1\n--   S           : Player 2 Trig2\n--   Q           : Player 2 Trig3\n--\n-- Joystick support.\n--\n---------------------------------------------------------------------------------\n-- 2020/01/08  Impl. Trigger 3  (for SEGA Ninja)\n---------------------------------------------------------------------------------\n\n                                *** Attention ***\n\nROM is not included. In order to use this arcade, you need to provide a correct ROM file.\n\nFind this zip file somewhere. You need to find the file exactly as required.\nDo not rename other zip files even if they also represent the same game - they are not compatible!\nThe name of zip is taken from M.A.M.E. project, so you can get more info about\nhashes and contained files there.\n\n\nHow to install:\n  0. Update MiSTer binary to v200106 or later\n  1. copy releases/*.mra to /media/fat/_Arcade\n  2. copy releases/*.rbf to /media/fat/_Arcade/cores\n  3. copy ROM zip files  to /media/fat/_Arcade/mame\n\n\nBe sure to use the MRA file in \"releases\" of this repository.\nIt does not guarantee the operation when using other MRA files.\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1",
      "releases": [
        {
          "name": "4-D Warriors.mra",
          "sha": "cb2b94ed542407662b3e057a9446548567d8333e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/4-D%20Warriors.mra",
          "type": "MRA",
          "extra": {
            "name": "4D Warriors",
            "rbf": "segasys1",
            "zips": [
              "4dwarrio.zip"
            ]
          }
        },
        {
          "name": "Arcade-SEGASYS1_20200223.rbf",
          "sha": "22c76ea152302329d4383a1d88c519ecf0739596",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Arcade-SEGASYS1_20200223.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-SEGASYS1_20200225.rbf",
          "sha": "953d04b130b0f267be070e0d6b21e7affb4d8b85",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Arcade-SEGASYS1_20200225.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-SEGASYS1_20200408.rbf",
          "sha": "7f49f2753e875a5b75abebc57047bde59379e889",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Arcade-SEGASYS1_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-SEGASYS1_20200419.rbf",
          "sha": "427c4afe63a17b2c35a8e50f9563f446e2e6647a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Arcade-SEGASYS1_20200419.rbf",
          "type": "RBF"
        },
        {
          "name": "Arcade-SEGASYS1_20200531.rbf",
          "sha": "3d0ce57b284ccb499a4de1c170e890b22fc2c559",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Arcade-SEGASYS1_20200531.rbf",
          "type": "RBF"
        },
        {
          "name": "Flicky.mra",
          "sha": "a43930aeda08cbc956152e3b660d304f127767e7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Flicky.mra",
          "type": "MRA",
          "extra": null
        },
        {
          "name": "I'm Sorry.mra",
          "sha": "39f584f1c25f4d2ba0112c4b30df106fb8d3197a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/I'm%20Sorry.mra",
          "type": "MRA",
          "extra": {
            "name": "I'm Sorry (315-5110, US)",
            "rbf": "segasys1",
            "zips": [
              "imsorry.zip"
            ]
          }
        },
        {
          "name": "Mister Viking.mra",
          "sha": "e0599647bdeda45b043955da04650d34b014819a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Mister%20Viking.mra",
          "type": "MRA",
          "extra": {
            "name": "Mister Viking (315-5041)",
            "rbf": "segasys1",
            "zips": [
              "mrviking.zip"
            ]
          }
        },
        {
          "name": "My Hero.mra",
          "sha": "e5bc715a9603d74698ec87e284394c1b2262b0a1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/My%20Hero.mra",
          "type": "MRA",
          "extra": {
            "name": "My Hero (US, not encrypted)",
            "rbf": "segasys1",
            "zips": [
              "myhero.zip"
            ]
          }
        },
        {
          "name": "Rafflesia.mra",
          "sha": "d1c977a9f42ba1d8607649f31ebeaea758200cc2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Rafflesia.mra",
          "type": "MRA",
          "extra": {
            "name": "Rafflesia",
            "rbf": "segasys1",
            "zips": [
              "raflesia.zip"
            ]
          }
        },
        {
          "name": "Regulus.mra",
          "sha": "86d45861eb460900225caff99ad89d7b801ebe3d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Regulus.mra",
          "type": "MRA",
          "extra": {
            "name": "Regulus",
            "rbf": "segasys1",
            "zips": [
              "regulus.zip"
            ]
          }
        },
        {
          "name": "Sega Ninja.mra",
          "sha": "5b213943ee2118b7209db412936dcd9370766a54",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Sega%20Ninja.mra",
          "type": "MRA",
          "extra": {
            "name": "Sega Ninja (315-5102)",
            "rbf": "segasys1",
            "zips": [
              "seganinj.zip"
            ]
          }
        },
        {
          "name": "Spatter.mra",
          "sha": "d819854d260a19f3dc095702c6a7520597df24f6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Spatter.mra",
          "type": "MRA",
          "extra": {
            "name": "Spatter (315-5xxx)",
            "rbf": "segasys1",
            "zips": [
              "spatter.zip"
            ]
          }
        },
        {
          "name": "TeddyBoy Blues.mra",
          "sha": "b6c957ddbc25ead5a20d23363ad010fa72cd7ed7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/TeddyBoy%20Blues.mra",
          "type": "MRA",
          "extra": {
            "name": "TeddyBoy Blues (315-5115, New Ver.)",
            "rbf": "segasys1",
            "zips": [
              "teddybb.zip"
            ]
          }
        },
        {
          "name": "Up'n Down.mra",
          "sha": "eed16e9569c80ad87ea07caff13730c6ebbd7f57",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Up'n%20Down.mra",
          "type": "MRA",
          "extra": {
            "name": "Up'n Down",
            "rbf": "segasys1",
            "zips": [
              "upndown.zip"
            ]
          }
        },
        {
          "name": "Wonder Boy.mra",
          "sha": "5c1766a42923de312ffb407559c63975f38290f7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/Wonder%20Boy.mra",
          "type": "MRA",
          "extra": {
            "name": "Wonder Boy (set 1, 315-5177)",
            "rbf": "segasys1",
            "zips": [
              "wboy.zip"
            ]
          }
        },
        {
          "name": "Gonbee no I'm Sorry (315-5110, Japan).mra",
          "sha": "a6584ea30fc265c49a8edaf43c0896c67a612b15",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/_alternatives/Gonbee%20no%20I'm%20Sorry%20(315-5110%2C%20Japan).mra",
          "type": "MRA",
          "extra": {
            "name": "Gonbee no I'm Sorry (315-5110, Japan)",
            "rbf": "segasys1",
            "zips": [
              "imsorry.zip",
              "imsorryj.zip",
              "imsorryj.zip"
            ]
          }
        },
        {
          "name": "Ninja Princess (315-5098, 128k Ver.).mra",
          "sha": "1bb133d27bcd9d0b9277289d641a1f8e85a90275",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/_alternatives/Ninja%20Princess%20(315-5098%2C%20128k%20Ver.).mra",
          "type": "MRA",
          "extra": {
            "name": "Ninja Princess (315-5098, 128k Ver.)",
            "rbf": "segasys1",
            "zips": [
              "seganinj.zip",
              "nprinceso.zip",
              "nprinceso.zip"
            ]
          }
        },
        {
          "name": "Sanrin San Chan (Japan, 315-5xxx).mra",
          "sha": "deaf1c13ecc5a828c851c62c9456c06af9f70299",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/_alternatives/Sanrin%20San%20Chan%20(Japan%2C%20315-5xxx).mra",
          "type": "MRA",
          "extra": {
            "name": "Sanrin San Chan (Japan, 315-5xxx)",
            "rbf": "segasys1",
            "zips": [
              "spatter.zip",
              "ssanchan.zip",
              "ssanchan.zip"
            ]
          }
        },
        {
          "name": "Seishun Scandal (315-5132, Japan).mra",
          "sha": "a92f9b5405fc728d04f574d85c5fa3b130197857",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MiSTer-Arcade-SEGASYS1/master/releases/_alternatives/Seishun%20Scandal%20(315-5132%2C%20Japan).mra",
          "type": "MRA",
          "extra": {
            "name": "Seishun Scandal (315-5132, Japan)",
            "rbf": "segasys1",
            "zips": [
              "myhero.zip",
              "sscandal.zip",
              "sscandal.zip"
            ]
          }
        }
      ]
    },
    {
      "name": "MiSTer_DB9",
      "description": "Unofficial cores with DB9 support",
      "readme": "| USER_IO | DE10         | DB9 | FPGA  | USB3\n| ------- | ------------ | --- | ----- | --------\n|         |              | 8   |       | 4 GND  \n|         |              | 5   |       | 1 5V   \n| 0       | Arduino_IO15 | 7   | AG11  | 3 D+   \n| 1       | Arduino_IO14 | 3   | AH9   | 2 D-   \n| 2       | Arduino_IO13 | 4   | AH12  | 8 TX-  \n| 3       | Arduino_IO12 | 6   | AH11  | 7 GND_D\n| 4       | Arduino_IO11 | shield | AG16  | 6 RX+  \n| 5       | Arduino_IO10 | 1   | AF15  | 5 RX-  \n| 6       | Arduino_IO8  | 9   | AF17  | 9 TX+  \n|         | Arduino_IO9  | 2   | AE15  |        \n\n9 TX+ is AF17 on SNAC+, with regular SNAC is 3.3V\n\n![splitters](photos/splitters.jpg?raw=true \"splitters\")\n\n| Genesis | SNES Option 1\n| ------- | ------------\n| A       | Y\n| B       | B\n| C       | A\n| X       | L\n| Y       | X\n| Z       | R\n| START   | START\n| MODE    | SELECT\n\n| Genesis | SNES Option 2\n| ------- | ------------\n| A       | B\n| B       | A\n| C       | R\n| X       | Y\n| Y       | X\n| Z       | L\n| START   | START\n| MODE    | SELECT\n\n\n| Genesis | GBA Option 1\n| ------- | ------------\n| A       | B\n| B       | A\n| C       | R\n| X       | FAST FORWARD\n| Y       | L\n| Z       | REWIND\n| START   | START\n| MODE    | SELECT\n\n| Genesis | GBA Option 2\n| ------- | ------------\n| A       | B\n| B       | A\n| C       | R\n| X       | FAST FORWARD\n| Y       | REWIND\n| Z       | L\n| START   | START\n| MODE    | SELECT\n\n\n| Genesis | Neo Geo\n| ------- | ------------\n| A       | A\n| B       | B\n| C       | C\n| X       | SELECT\n| Y       | ABC\n| Z       | D\n| START   | START\n| MODE    | COIN\n\n\n| Genesis | NES\n| ------- | ------------\n| B       | A\n| C       | B\n| START   | START\n| MODE    | SELECT\n\n\n| Genesis | Master System\n| ------- | ------------\n| B       | 1\n| C       | 2\n| START   | START/PAUSE\n\n\n| Genesis | TurboGrafx\n| ------- | ------------\n| A       | III\n| B       | II\n| C       | I\n| X       | IV\n| Y       | V\n| Z       | VI\n| START   | RUN\n| MODE    | SELECT\n\n\n| Genesis | Atari 2600\n| ------- | ------------\n| B       | A\n| START   | START\n| MODE    | SELECT\n\n\n| Genesis | GB/GBC\n| ------- | ------------\n| B       | A\n| C       | B\n| START   | START\n| MODE    | SELECT\n| A       | SELECT\n\n\n| Genesis | Generic Arcade\n| ------- | ------------\n| A       | Button 1 (Fire)\n| B       | Button 2 (Jump)\n| C       | Button 3 \n| X       | Button 4\n| Y       | Button 5\n| Z       | Button 6\n| START   | START\n| MODE    | COIN\n| START+B | COIN\n| START+C | OSD\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/MiSTer_DB9",
      "releases": []
    },
    {
      "name": "MSX_MiSTer",
      "description": "MSX for MiSTer",
      "readme": "# MSX for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\nPort of [MSX core version by Kdl](http://gnogni.altervista.org/)\n\n## Features:\n- MSX2/Plus/3.\n- Sound YM2149(PSG), YM2419(OPLL), SCC.\n- Various sound and memory expansions through virtual cartridges.\n- Turbo modes for CPU.\n- Mouse.\n- Joystick.\n- Real time clock.\n- VHD images HDD.\n- SD card support <4GB (SDSC) and >4GB (SDHC/SDXC).\n- No requires secondary SD card on I/O board v5.x. Supports both SDSC and SDHC cards.\n\n### Installation:\n* Copy the [*.rbf](https://github.com/MiSTer-devel/MSX_MISTer/tree/master/releases) file at the root of the SD card.\n* Use sdcreate util (you need to start it with Administrator rights) from [Utils](https://github.com/MiSTer-devel/MSX_MiSTer/tree/master/Utils) folder to format and create a basic SD card for MSX core. If you want to make it manually, then make sure OCM-BIOS.DAT is the first file copied to SD card after format! Only FAT16 is supported.\n\n### Notes about SD card:\n* Core no requires a secondary SD card located on I/O Board v5.x. You can use an VHD images on the main SD card.\n* You can use SD card of any size, but only partitions less than 4GB are supported. It's advised to use sdcreate utility. It will create 4GB partition of SD card is bigger than 4GB. \n* The core is kind of picky to SD card, so it's possible some cards won't work.\n\n### Usage notes:\n* In turbo mode use **F11** to change the speed.\n* Core recognizes short reset (warm reset) and long reset (cold reset). Long reset is reset held for more than 2 seconds.\n* use supplied (in sdcreate package) file manager **mm** to load various kind of apps like ROM and DSK files.\n* More advanced BIOSes can be downloaded from [KdL site](http://gnogni.altervista.org/) by sending request as per instruction on that site.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/MSX_MiSTer",
      "releases": [
        {
          "name": "MSX_20200226.rbf",
          "sha": "f6a76e96a22817969258d59009aa4815229566d5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MSX_MiSTer/master/releases/MSX_20200226.rbf",
          "type": "RBF"
        },
        {
          "name": "MSX_20200408.rbf",
          "sha": "f1051d2f52da5c47b5b34d9f4736cc1d02ab5149",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MSX_MiSTer/master/releases/MSX_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "MSX_20200420.rbf",
          "sha": "4cda1547c271abf3f997b540034c6c3df05ab729",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MSX_MiSTer/master/releases/MSX_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "MSX_20200511.rbf",
          "sha": "be4306344ec5866ce26307f6302e2abbe4acc2f9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/MSX_MiSTer/master/releases/MSX_20200511.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "NeoGeo_MiSTer",
      "description": "NeoGeo for MiSTer",
      "readme": "\r\n# NEO GEO for [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki) \r\n\r\nThis is an FPGA implementation of the NEO GEO/MVS system by [Furrtek](https://www.patreon.com/furrtek/posts)\r\n\r\n## Features\r\n* Supports memory card saving\r\n* MVS and AES system support\r\n* Compatible with Darksoft ROM sets using provided XML\r\n* Compatible with decrypted MAME ROM sets using your own XML\r\n* Support for Universe BIOS\r\n\r\nNote: Core doesn't support encrypted ROMs. Make sure the ROM has no encrypted parts before use it. MAME ROM pack includes many encrypted ROMs so it's not recommended for inexperienced users.\r\n\r\n## Installation\r\nCopy the NeoGeo_\\*.rbf file to the folder of your choice on the SD card. Create a **NEOGEO** folder on the root of the card, and place the unzipped ROM sets inside this folder. For ease of setup of use, it is strongly suggested that people use the Darksoft ROM pack. Several things must be observed:\r\n* Each set of ROMs must be in its own folder\r\n* The folders containing the ROM sets must be named to match the XML (MAME standard names)\r\n* The ROMs must not be zipped\r\n* ROM set folders can be placed inside sub-folders for organization\r\n\r\nIn addition, several bios files must be placed in the **NEOGEO** folder for the core to function properly:\r\n* 000-lo.lo\r\n* sfix.sfix\r\n* sp-s2.sp1 (MVS)\r\n* neo-epo.sp1 (AES)\r\n* uni-bios.rom\r\n\r\nSometimes these files may be named slightly differently depending on where they are obtained, but they must be renamed to match the filenames above to work with MiSTer. You may choose between using original system BIOS (sp-s2.sp1/neo-epo.sp1) and uni-bios.rom. Using uni-bios is recommended, and can be obtained [here](http://unibios.free.fr/).\r\n\r\nLastly, **romsets.xml** from the release folder must also be placed in the directory. The provided XML is for Darksoft ROMs only, you must make your own for MAME ROMs. This file describes to the core where the ROM sets are located and how to load them. **gog-romsets.xml** can be used (renamed to **romsets.xml**) for games purchased from gog.com (which also include all the needed bios files), see comments in gog-romsets.xml .\r\n\r\n## Saving and Loading\r\nIn AES mode, all saves are to the memory card only. In MVS mode, some games and uni-bios save their settings to a special area of battery backed ram built into the system, while game data can be still be saved to a memory card. To simplify things, it is suggested to stick to one system type on the OSD and use uni-bios to change the system type, so that game information is saved consistently.\r\n\r\n## RAM and Game Sizes\r\nNeo Geo uses very large ROMs. About 84% of the library will fit onto a 32 megabyte SDRAM module. Another 12% will fit onto a 64 megabyte SDRAM module. The remaining 8 games require a 128 megabyte module. For more information about which games can be loaded with which sized RAM, open romsets.xml in your favorite text editor or github. The games are organized by size.\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/NeoGeo_MiSTer",
      "releases": [
        {
          "name": "NeoGeo_20200224.rbf",
          "sha": "6e185137cef88871541b0ae52e29ee9035cba75a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200224.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200302.rbf",
          "sha": "7926b640eae31003319ebd1f83cc601062b43c24",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200302.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200325.rbf",
          "sha": "4176d46256e8ce4e9dde53ef2093654a9e2c24bf",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200325.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200408.rbf",
          "sha": "f5cdbc559ecbb299a9acc137f4f12a51c26bdc2c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200422.rbf",
          "sha": "4c907251251ca230358d57abd66784da781bb667",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200422.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200426.rbf",
          "sha": "36337afec716a843df6e476ab4c1ef96148bd6f2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200426.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200508.rbf",
          "sha": "8d23e36e947d9b950739b900d736380483295a96",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200508.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200510.rbf",
          "sha": "6001418f41612f82a810954b8e1fb17adf03fe5d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200510.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200622.rbf",
          "sha": "2892a001003f52bfb1d6527be2b9edc672222303",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200622.rbf",
          "type": "RBF"
        },
        {
          "name": "NeoGeo_20200820.rbf",
          "sha": "eaf61c75fc03340d096e16ac390e6308d51abc1b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/NeoGeo_20200820.rbf",
          "type": "RBF"
        },
        {
          "name": "README.md",
          "sha": "abdb8c23e66088a7b2bcc5d69f49951bbf6ca0ea",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/README.md",
          "type": "OTHER"
        },
        {
          "name": "gog-broken-romsets.xml",
          "sha": "65e00cadfaa3230b71e0d2c50464b7154f6aa1f7",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/gog-broken-romsets.xml",
          "type": "OTHER"
        },
        {
          "name": "gog-romsets.xml",
          "sha": "699a7588769f4d602b87a23c501d9ac753fe6c1f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/gog-romsets.xml",
          "type": "OTHER"
        },
        {
          "name": "romsets.xml",
          "sha": "7f03dc4fc9eeb2d1ce87d26a4b1d387299e11894",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NeoGeo_MiSTer/master/releases/romsets.xml",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "NES_MiSTer",
      "description": null,
      "readme": "# NES for [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\nThis is an FPGA implementation of the NES/Famicom based on [FPGANES](https://github.com/strigeus/fpganes) by Ludvig Strigeus and ported to MiSTer.\n\n## Features\n * Supports saves for most games\n * Supports NTSC, PAL, and Dendy system types\n * FDS Support with expansion audio\n * Multiple Palette options\n * Zapper, Powerpad, Microphone, and Miracle Piano support\n * Supports four players\n * Setting for increasing sprite per line by 8\n * Supports up to 32 cheat codes\n * Supports NSF Player\n * Supports expansion audio from mappers including VRC6 & 7, MMC5, Namco 163 and Sunsoft 5b\n * Supports many popular mappers including VRC1-7, MMC0-5, and many more (see below)\n * Supports large games such as Legend of Link and Rockman Minus Infinity\n\n## Installation\nCopy the NES_\\*.rbf file to the root of the SD card. Create a **NES** folder on the root of the card, and place NES roms (\\*.NES) inside this folder. The ROMs must have an iNES or NES2.0 header, which most already do. NES2.0 headers are prefered for the best accuracy. To have a game ROM load automatically upon starting the core and place it in the **NES** folder.\n- boot0.rom = FDS BIOS file.  Will be used for any FDS images loaded\n- boot1.rom = NES Cart file.  Can be used with boot0.rom (BIOS) in place\n- boot2.rom = FDS image file.  Requires boot0.rom (BIOS).  Use a blank FDS (header only) to boot the FDS BIOS without a disk image.\n- boot3.rom = PAL file. It can be used to set your default custom palette. Save the menu option on \"Custom\" to apply immediately.\n\n## Famicom Disk System Usage\nBefore loading \\*.FDS files, you must first load the official, unpatched FDS BIOS. The BIOS file should be renamed to boot0.rom and placed in the same folder as the ROMs (NES).  Alternatively, it can be loaded from the OSD if boot0.rom doesn't exist. After loading the core and the bios you may select an FDS image. By default, the NES core will swap disk sides for you automatically. To suppress this behavior, hold the FDS button on the player 1 controller. The \"Disk Swap\" OSD option manually controls the disk side.  Each button press increments the disk side.  Press and hold the fds button to eject and increment the disk side in this mode.  Some games only work correctly in manual disk swap mode, and require holding the FDS button for up to a few seconds (Gall Force,...).\n\n## Extra Sprites\nThis feature will double the number of sprites drawn per scanlines, decreasing the flickering sprites that NES is known for. Some games relied on the 8 sprite behavior to work correctly, such as Simon's Quest swamps. Other mappers may be impacted by using extra sprites. While it works well in most games, glitches may occur with this enabled.\n\n## Saving and Loading\nThe battery backed RAM (Save RAM) for the NES does not write to disk automatically. When loading a game, you must select **Load Backup RAM** from the OSD menu. After saving in your game, you must then write the RAM to the SD card by selecting **Save Backup RAM** from the menu. If you do not save your RAM to disk, the contents will be lost next time you restart the core or switch games. Alternatively you can enable to Autosave option from the OSD menu, and if you do your games will be recorded to disk every time you open the OSD menu. FDS saving uses the same method as for cartridge RAM saves.\n\n## Zapper Support\nThe \"Zapper\" (aka Light Gun) can be used via two methods. You can select Peripheral: Zapper(Mouse) to use your mouse to aim and shoot with the left button. This mode uses relative mouse motion, so devices that rely on absolute coordinates will not work via this method. Alternatively, you can choose Zapper(Joy) to use the Analog stick to aim, and the defined Trigger button to fire. Guns such as Aimtrak have joystick modes which may be compatible with this method.\n\n## Miracle Piano Support\nThe Miracle Piano is a MIDI keyboard compatible with the Miracle Piano Education System cart.  To use it with SNAC, no further settings are needed.  To use it with midilink, in the System Settings, set the UART connection to use MIDI.  The piano will then be connected on controller port 1 as expected.  The primary controller will automatically be assigned to port 2 as the cart expects.  The header for the ROM file should be set to NES 2.0 with controller type (0xF) set to the Miracle Piano (0x19).\n\n## Supported Mappers\n\n|#||||||||||||||||\n|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|---|\n|**0**|**1**|**2**|**3**|**4**|**5**||**7**||**9**|**10**|**11**|~~12~~|**13**||**15**|\n|**16**||**18**|**19**|**FDS**|**21**|**22**|**23**|**24**|**25**|**26**|**27**|**28**||**30**|**31**|\n|**32**|**33**|**34**|**35**|**36**|**37**|**38**||~~40~~|**41**|**42**|~~43~~|~~44~~|~~45~~|**46**|**47**|\n|**48**|~~49~~|~~50~~|~~51~~|~~52~~|~~53~~|~~54~~|~~55~~|~~56~~|~~57~~|~~58~~|~~59~~|~~60~~|~~61~~|~~62~~|~~63~~|\n|**64**|**65**|**66**|**67**|**68**|**69**|**70**|**71**|**72**|**73**|**74**|**75**|**76**|**77**|**78**|**79**|\n|**80**|~~81~~|**82**|**83**|~~84~~|**85**|**86**|**87**|**88**|**89**|**90**|~~91~~|**92**|**93**|**94**|**95**|\n|~~96~~|**97**||~~99~~|~~100~~|**101**|||~~104~~|**105**||**107**|~~108~~|~~109~~|~~110~~|**111**|\n|**112**|**113**|~~114~~|~~115~~|~~116~~|~~117~~|**118**|**119**|~~120~~||~~122~~|~~123~~||~~125~~|~~126~~|~~127~~|\n|~~128~~|~~129~~|~~130~~|~~131~~|**132**|**133**|~~134~~|~~135~~|**136**|**137**|**138**|**139**|**140**|**141**|~~142~~|**143**|\n|~~144~~|**145**|**146**|**147**|**148**|**149**|**150**|~~151~~|**152**|**153**|**154**|**155**|~~156~~|~~157~~|**158**|**159**|\n|~~160~~|~~161~~|**162**|**163**|**164**|**165**|~~166~~|~~167~~|~~168~~|~~169~~||**171**|**172**|**173**|||\n|||||**180**|~~181~~|~~182~~|~~183~~|**184**|**185**|~~186~~|~~187~~|~~188~~|~~189~~|**190**|**191**|\n|**192**|~~193~~|**194**|**195**|~~196~~||~~198~~|~~199~~|~~200~~|~~201~~|~~202~~|~~203~~|~~204~~|~~205~~|**206**|**207**|\n|~~208~~|**209**|**210**|**211**|~~212~~|~~213~~|~~214~~|~~215~~|~~216~~|~~217~~|**218**||||~~222~~||\n|~~224~~|**225**|~~226~~|~~227~~|**228**|~~229~~|~~230~~|~~231~~|**232**|~~233~~|**234**|~~235~~|~~236~~|~~237~~|||\n|~~240~~|~~241~~|~~242~~|**243**|~~244~~|~~245~~|~~246~~||~~248~~|~~249~~|~~250~~|~~251~~|~~252~~||~~254~~|**255**|\n\nKey: **Supported**, ~~Not Supported~~. Mappers that are not existent or not useful are blank.\n\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/NES_MiSTer",
      "releases": [
        {
          "name": "NES_20200228.rbf",
          "sha": "e9b9db99b48085b153ef6e1ce3f6f8cc1093c3f4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200228.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200305.rbf",
          "sha": "fa8db398e9475cf335e87b921c949d6d1dd32163",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200305.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200307.rbf",
          "sha": "b32a134ea37f62619577d60373619e19751b0ebe",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200307.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200316.rbf",
          "sha": "1751e9899e5baa30ae2df3a8367ea273239d6f49",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200316.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200317.rbf",
          "sha": "771c7165da709604b68d8c39d0977ccfd6d9bbab",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200317.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200409.rbf",
          "sha": "e257e75b15074ea0fcf95b677e9100ad29353e6b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200422.rbf",
          "sha": "804e61295daa2045b3db8aa3d9fa2a4235e3ee96",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200422.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200506.rbf",
          "sha": "869d037d69eb392dc15e72205d569662a8023fd4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200506.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200514.rbf",
          "sha": "989eeead97b186dac2e9c902bd26f2d5b4cf8f1e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200514.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200519.rbf",
          "sha": "6dd69425f9dee6a599b46a9a5e4256a3233ac8dd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200519.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200522.rbf",
          "sha": "4c8cf7e2e76e101ed366dcf7d5bfb6d8815fca93",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200522.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200526.rbf",
          "sha": "053e91603e302fe748bf03cb8c6bc7d3a1a6f398",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200526.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200620.rbf",
          "sha": "c447fd095f03dccda32c7d0154df18b401bc5b1e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200620.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200621.rbf",
          "sha": "076ce2f59e5fa015e30e8167ca180b6b7e356211",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200621.rbf",
          "type": "RBF"
        },
        {
          "name": "NES_20200820.rbf",
          "sha": "a455972718e5065403cffebcd24973bfda943f16",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/NES_MiSTer/master/releases/NES_20200820.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Oric_MiSTer",
      "description": "Oric-1 and Oric Atmos for MiSTer",
      "readme": "# Oric-1 and Oric Atmos for MiSTer.\n\nOriginal Read.Me for MiST. Not all info is releavant to MiSTer.\n-----------------------------------------------------\n\n# Oric 48K in MiST and SiDi FPGA\n\nOric-1 and Oric Atmos re-implementation on a modern FPGA.\n\n### Background:\n\nThere is one version made and ported by [Gehstock](https://github.com/Gehstock/Mist_FPGA/tree/master/Computer_MiST/OricInFPGA_MiST) at github , but it's far to be functional like an Oric. Gehstock's version for MiST board was realeased as a proof of concept with only 32KB RAM (no oric existed with that memory, only **16K** ,**48K** and **64K**)(64KB is real RAM) so there were errors managing **HIRES** mode) and no way to load audio tapes and lots of graphics errors on screen.\n\n### What can you expect from Oric 48K in MiST and SiDi FPGA ?\n\nThis project began in november 2019 with the aim to preserve the Oric's computer family into fpga.\n\nActually Oric 1, Oric Atmos and Microdisc are fully functional.\n* **ULA HCS10017**.\n* **VIA 6522**.\n* **CPU 6502**.\n* Full 64KB of **RAM**.\n* Keyboard managed by GI-8912.\n* Sound (**AY-3-8910**).\n* switchable **ROM** (between 1.1a ATMOS version and 1.0 ORIC 1 version).\n* Tape loading working (via audio cable on the RX pin).\n* Oric Microdisc implementation v\u00eda **CUMULUS**\n* Disc Read / Write operations fully supported with EDSK (The same as amstrad cpc) format.\n* Disc Sedoric/OricDOS Operating System Loading fully working\n\n### TODO\n\n * Debugging, checking for possible bugs at video and improving the core.\n\n\n### KNOWN BUGS\n\n   * None at the moment..., but if You find one, let Us know, please.\n\n### HOW TO USE AN ORIC 1 & ATMOS WITH MiST, MiSTica and SiDi FPGA boards.\n\n* **Create a directory called ORIC at your sd's root and put inside the disc images to work on**\n\n   * Once the core is launched:\n\n   Keyboard Shorcuts:\n   * F10 - NMI button, acts like original ORIC NMI\n   * F11 - Reset. Use F11 to reboot once a DSK is selected at OSD\n   * F12 - OSD Main Menu.\n\n   ![shortcuts](img/shorcuts.jpg?raw=true \"Keyboard shortcuts\")   \n\n   * Activate FDC controller at OSD MENU\n   * Select an Image from /ORIC directory, exit OSD and press F11. System will boot inmeddiately\n\n\n\n## The Oric Fpga preservation TEAM\n\n   * Ron Rodritty:  Team coordination and QA testing.\n   * Fernando Mosquera: FPGA guru.\n   * Subcritical: Verilog and VHDL.\n   * ManuFerHi: Hardware consulting.\n   * Chema Enguita: Oric Software gur\u00fa\n   * SiliceBit: Oric hardware Gur\u00fa\n   * ZXMarce: Hardware support 24/7...\n   * Ram\u00f3n Mart\u00ednez:  Oric hardware, Some software, and fpga coding.\n   * Slingshot: SDRAM work and advisor.\n\n* Kudos to: Sorgelig, Gehstock, DesUBIKado, RetroWiki and friends.\n\n## About disk images.\n\n  Despite of the .dsk extension, Disk images are the defacto standard **edsk** for disk preservation (also known as \"AMSTRAD CPC EXTENDED FORMAT\"). To convert images\n  from the oric \"dsk\" to the needed \"dsk\" you need the [HxCFloppyEmulator software] (https://hxc2001.com/download/floppy_drive_emulator/HxCFloppyEmulator_soft.zip).\n\n  Load the disk oric disk and export it as **CPC DSK file** the resulting image should load flawlessly on the Oric.\n  This images are also compatible with fastfloppy firmware on gothek, cuamana reborn, etc working with real orics.\n\n## Joystick\n\n almost all the Oric games dont have joystick support, but you can \"map\" the\nmost used keys to a joystick adding thist to your **mist.ini** file.\n\n\t[oric]\n\tjoy_key_map=1,4f     ; cursor right\n\tjoy_key_map=2,50     ; cursor left\n\tjoy_key_map=4,51     ; cursor down\n\tjoy_key_map=8,52     ; cursor up\n\tjoy_key_map=10,2c    ; button A as SPACE\n\tjoy_key_map=40,28    ; button SEL as ENTER\n\tjoy_key_map=80,44    ; button STA as F11 \n\n## Software redistribution.\n\n In the dsk directory, you will find some disk images in the proper format. \n\n* **SEDORIC 4.0** operating System disk image redistributed with permission from Symoon.\n* **Blake's 7** game, redistributed with permission of chema enguita you can download manual and additional info from [Defence force](http://www.defence-force.org/index.php?page=games&game=blakes7)\n* **Oricium** game, redistributed with permission of chema enguita you can download manual and additional info from [Defence force](http://www.defence-force.org/index.php?page=games&game=oricium)\n* **Space:1999** game, redistributed with permission of chema enguita you can download manual and additional info from [Defence force](http://www.defence-force.org/index.php?page=games&game=space1999)\n* **1337** game, redistributed with permission of chema enguita you can download manual and additional info from [Defence force](http://www.defence-force.org/index.php?page=games&game=1337)\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Oric_MiSTer",
      "releases": [
        {
          "name": "Oric_20200401.rbf",
          "sha": "343376224918d3c8f79b7a1a2b5da91f4384e476",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Oric_MiSTer/master/releases/Oric_20200401.rbf",
          "type": "RBF"
        },
        {
          "name": "Oric_20200408.rbf",
          "sha": "17f4a51498a678f994ae42244a9f980b147841c3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Oric_MiSTer/master/releases/Oric_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "Oric_20200420.rbf",
          "sha": "8cfbacc42ff058a52c20f0248700f040d1f55615",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Oric_MiSTer/master/releases/Oric_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "Oric_20200513.rbf",
          "sha": "3f711e33b2a608c7dd955cd6f811e51f85c39678",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Oric_MiSTer/master/releases/Oric_20200513.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "QL_MiSTer",
      "description": "Sinclair QL for MiSTer",
      "readme": "# Sinclair QL for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki) \n\nThis is port from [MiST](https://github.com/mist-devel/mist-board/tree/master/cores/ql)\n\n### Additional features implemented:\n* Turbo modes (x2,x4)\n* 896K of RAM\n* RTC\n\n### Note:\nThis core should support secondary SD card, but i couldn't find a working combination of SD card format and ROM. Need further testing.\n\n### Installation:\n* Copy the *.rbf file at the root of the SD card. \n* Copy boot.rom into QL folder.\n* Copy some *.mdv files to QL folder.\n\n\n## Original ReadMe\n\nSinclair QL core for the MIST board\n\nThis core needs a QL rom image on SD card named ql.rom in the SD cards\nroot directory. It's known to work with Minerva ROM 1.98 as well as the\noriginal js.rom. Other ROMs may work as well. The ROM size must be exaclty\n49152 bytes. Minerva and other roms are available as a free download from \nhttp://www.dilwyn.me.uk/qlrom/.\n\nIt is possible to add another 16k of extension ROM. The resulting size\nof the ROM image should then be 65536 bytes. E.g. the Toolkit-2 ROM is\navailable for download at http://www.dilwyn.me.uk/pe. The necessary\ncombination of both ready-to-use is available \n[here](https://github.com/MiSTer-devel/QL_MiSTer/tree/master/releases).\n\nThe core implements the complete 8049 IPC controller and thus fully\nsupports all keybaord monitoring modes as well as joysticks and audio.\n\nFiles can be loaded from microdrive images stored in MDV files in QLAY\nformat. Thee files must be exactly 174930 bytes in size. Examples can\nbe found in http://web.inter.nl.net/hcc/A.Jaw.Venema/psion.zip as well as\nin the [releases](https://github.com/MiSTer-devel/QL_MiSTer/tree/master/releases) directory.\n\nIf a matching ql.rom is being used the built-in [QL-SD](http://www.dilwyn.me.uk/qlsd/index.html) allows to directly access a huge image file stored\non SD card.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/QL_MiSTer",
      "releases": [
        {
          "name": "GamesCart.mdv",
          "sha": "8db5dec3322d8c847a7be355452bd3294aaaedf3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/QL_MiSTer/master/releases/GamesCart.mdv",
          "type": "OTHER"
        },
        {
          "name": "QL_20200512.rbf",
          "sha": "e62d59ff5ee947374de13c07ea980a67a1d60fa5",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/QL_MiSTer/master/releases/QL_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "QL_20200513.rbf",
          "sha": "a04c884eedadeecdeeaf940fcdc1a039c7ba3dc1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/QL_MiSTer/master/releases/QL_20200513.rbf",
          "type": "RBF"
        },
        {
          "name": "boot.rom",
          "sha": "7cae62c00c5c5eae3c6dd69c4d9c2024e4266e67",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/QL_MiSTer/master/releases/boot.rom",
          "type": "OTHER"
        },
        {
          "name": "crazy.mdv",
          "sha": "7a0898cbbf2c465252f89ba1b818e2139122423e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/QL_MiSTer/master/releases/crazy.mdv",
          "type": "OTHER"
        },
        {
          "name": "minerva+qlsd_ql.rom",
          "sha": "c0231c930cf186a2e5b5992323f69731eaa87234",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/QL_MiSTer/master/releases/minerva%2Bqlsd_ql.rom",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "SAM-Coupe_MiSTer",
      "description": null,
      "readme": "# [SAM Coupe](https://en.wikipedia.org/wiki/SAM_Coup%C3%A9) for [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\n### Features:\n- Fully functional SAM Coupe with precise CPU and Video timings.\n- Real CPU frequency for ZX mode and full speed (6MHz) for other modes.\n- Turbo up to 24MHz\n- 512KB of original internal memory.\n- Emulation for 4MB of extended memory.\n- Two disk drives.\n- Support for disk formats: EDSK, MGT, IMG.\n- Write support (Drive 1).\n- Original SAM joysticks (same as Sinclair 1 and 2).\n- Kempston joystick (useful for some ZX games).\n- SAA1099 sound chip.\n- SID MOS6581 sound chip.\n- Stereo SAM DAC on LPT1.\n- Mouse.\n\n### Installation:\nCopy the *.rbf file at the root of the SD card.\n\n### Notes about supported formats:\n**MGT** is simple sector dump of SAM disks. All disks have the same size 819200 (for 80 track disks).\n\n**IMG** is the same as **MGT** but uses different layout. It's used on +D FDC add-on (ZX Spectrum).\n\n**EDSK** is format for non-standard disks. Sizes up to 1024kb are supported.\nThere is only basic support for EDSK format. If application has strong copy protection then it may not work.\n\n**MGT and EDSK formats may have common file extension - DSK. IMG format should use extension IMG for correct detection**.\n\nOther formats like **SAD,SDF,TD0, etc.** can be converted to one of supported format by [SAMdisk](http://simonowen.com/samdisk/) utility.\n\nWrite feature isn't mature yet. Make backup of important disks before write to them.\n\nCore provides autostart for newly inserted disk into drive 1. Autostart works only on startup screen with stripes. Press any key after restart before loading the disk if you don't want autostart.\n\n### Keyboard:\nMost PC keys are mapped to the same SAM Coupe keys.\n**F1-F10** mapped to **F1-F0**, thus reduced keyboards like Logitech K400r can be used. **Alt** is mapped to **Symbol shift**. **Left Shift** is mapped to **Shift**, **Right Shift** doesn't map to SAM Coupe key but used as modifier for unfitted keys to represent original SAM Coupe keys. For example RShift + 6...0 prodice keys as written on PC keyboards. Suitable for other close to RShift PC keys. **RShift+Ctrl** switches to layout more suitable for ZX (where cursor keys are mapped to CAPS 5-8) although most SAM Coupe ZX emulators already provide good mapping and thus usually you don't need to switch layout.\n\n* F11 - NMI key\n* Ctrl-F11 - reset.\n* Alt-F11 - reset and unload disk images.\n* F12 - show OSD\n\n### Other info:\n**CPU Speed** modes:\n- Normal - original SAM coupe 6MHz clock with wait states (full 6MHz while accessing extended RAM).\n- 6MHz - full 6MHz speed without wait states.\n- 9.6MHz, 12MHz, 24MHz - turbo modes.\n\n**ZX mode speed**:\n- Emulated - original SAM Coupe ZX CPU emulation (through wait states).\n- Full - full SAM Coupe CPU clock.\n- Real - original ZX CPU clock (3.5MHz).\n\n*Note 1*: Real mode is useful for ZX import where beeper used for sound. In emulation and full modes the sound is garbled in such games while real frequency provides clean sound. (Arkanoid 48k is a good example).\n\n*Note2*: Emulated mode is true only for Normal CPU speed. For other CPU speeds this value equals to Full speed.\n\n**External RAM** enables/disables support for additional 4MB of RAM. Disabling external RAM reduces startup time of some apps. Some apps can gain advantages if this option is enabled. Actual change of this option happens upon reset.\n\n### Download precompiled binaries and system ROMs:\nGo to [releases](https://github.com/MiSTer-devel/SAM-Coupe_MiSTer/tree/master/releases) folder.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/SAM-Coupe_MiSTer",
      "releases": [
        {
          "name": "SAMCoupe20200512.rbf",
          "sha": "f05ea4bda8527fd09f7acaf98aefb332625103d8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SAM-Coupe_MiSTer/master/releases/SAMCoupe20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "SAMCoupe_20200512.rbf",
          "sha": "d9c23c26d5730c6ad1594b12da7f5b41f1050f0e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SAM-Coupe_MiSTer/master/releases/SAMCoupe_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "SAMCoupe_20200526.rbf",
          "sha": "1f8b365347ed848c96d325624012ea831d5199fa",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SAM-Coupe_MiSTer/master/releases/SAMCoupe_20200526.rbf",
          "type": "RBF"
        },
        {
          "name": "SAMCoupe_20200530.rbf",
          "sha": "f30e8492278bed4f9f4a1672bfcde6e84532919b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SAM-Coupe_MiSTer/master/releases/SAMCoupe_20200530.rbf",
          "type": "RBF"
        },
        {
          "name": "SAMCoupe_20200531.rbf",
          "sha": "5cfa22ffefb79569579c42ec2c56e0f885cb0348",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SAM-Coupe_MiSTer/master/releases/SAMCoupe_20200531.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "SMS_MiSTer",
      "description": "Sega Master System for MiSTer",
      "readme": "# Sega Master System and Game Gear for the [MiSTer](https://github.com/MiSTer-devel/Main_MiSTer/wiki) and [MiST](https://github.com/mist-devel/mist-board/wiki) boards\n\n### Installation:\n* Copy the *.rbf file at the root of the SD card.\n* Copy *.SMS ROMs into SMS folder.\n\n### Download precompiled binaries at:\n* For MiSTer, go to [releases](https://github.com/MiSTer-devel/SMS_MISTer/tree/master/releases) folder.\n* For MiST, go to [mist-binaries](https://github.com/mist-devel/mist-binaries/tree/master/cores/sms).\n\n### Notes:\n* Some games come in .gg format but are in fact SMS games. Rename the .gg extention to .sms or .bin to fix them.\n  These games are mostly listed in this page [SMSpower-SMS-GG list](http://www.smspower.org/Tags/SMS-GG).\n* The \"Aspect ratio\" doesn't do much in PAL mode, that's normal\n* The \"Region\" parameter toggle some hardware features that are specific to the different console models.\n  Some localized games need these modifications to work properly\n* Each game cartridge comes with a specific mapper, which description is not included in the .gg ou .sms file.\n  The core has a special logic to automatically determine which mapper needs to be used, but some games make\n  a good effort to make this logic fail. The \"Disable mappers\" parameter permits to force the usage \n  of the most used sega mapper. \n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/SMS_MiSTer",
      "releases": [
        {
          "name": "SMS_20200225.rbf",
          "sha": "2350d8448502f406d6cbfe2729e47fca1ca98ea4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200225.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200316.rbf",
          "sha": "77aa9227da34d31915481549295c47a84361a14d",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200316.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200409.rbf",
          "sha": "e1fecd519d91ab395a3b0ae30caf65de7f559149",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200421.rbf",
          "sha": "1313811119d5703d038ca2fa96aaee339116f4c3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200511.rbf",
          "sha": "7c62b6946b3441b3c3c7b335ffba4b68e16a2fa8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200511.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200528.rbf",
          "sha": "e3c2d5f838ea2d78269b6d93c75ef76546ff815b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200528.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200529.rbf",
          "sha": "145deb8bafa2586a14221e5e2e71ff58eae7bf09",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200529.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200530.rbf",
          "sha": "954a6a997f62f033900d8a4a36335523bee491b2",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200530.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200602.rbf",
          "sha": "b7d602f18624b867a0045ec94320b6974565224f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200602.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200603.rbf",
          "sha": "a8d99d4b1c8f1a37c0d80d406f8bf45da25447f6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200603.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200604.rbf",
          "sha": "6b404fa4e86711119a118340ec05ba7589dba333",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200604.rbf",
          "type": "RBF"
        },
        {
          "name": "SMS_20200819.rbf",
          "sha": "91b0c5773cc07488374e5239fcdbc825965b71dd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SMS_MiSTer/master/releases/SMS_20200819.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "SNES_MiSTer",
      "description": "SNES for MiSTer",
      "readme": "# SNES for MiSTer by [srg320](https://github.com/srg320)\n\n## Installing\ncopy *.rbf to root of SD card. Put some ROMs (*.SCF, *.SMC, *.BIN) into SNES folder\n\n## Features\n* Cycle accurate SNES replica.\n* Supports LoROM, HiROM, ExHiROM.\n* Supports additional chips: DSP-1/2/3/4, ST010, CX4, SDD1, SuperFX(GSU-1/2), SA1, OBC1, SPC7110, S-RTC.\n* Cheat engine.\n* Save/Load Backup RAM.\n* Supports mouse.\n* Light gun support via Wiimote, mouse or analog stick.\n* [SuperFX Turbo and CPU Turbo.](https://github.com/MiSTer-devel/SNES_MiSTer/blob/master/SNES_Turbo.md)\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/SNES_MiSTer",
      "releases": [
        {
          "name": "SNES_20200228.rbf",
          "sha": "08e192910b36b7cb9a3f3a1275d0b497184669ca",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200228.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200305.rbf",
          "sha": "403746241dbed47553849ffca20e0740d19ad07c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200305.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200307.rbf",
          "sha": "073707f29147d63043b10a1bfb4e738c81e748cc",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200307.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200317.rbf",
          "sha": "9f3ba800434557e34ecdd82924fe20516ec892d8",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200317.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200326.rbf",
          "sha": "1c65edea1384e1b02ea0f6055d9895848535b068",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200326.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200409.rbf",
          "sha": "b1369c31b2eaf57086cc25f44863fbb03898f940",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200422.rbf",
          "sha": "66f722b153b51b1490c7d8b962e29ef0abe74a57",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200422.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200428.rbf",
          "sha": "5be8ea298c1df0de4521669ed97f0c0b8ff677d4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200428.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200511.rbf",
          "sha": "9cf146aa5344d1dcb2c53aba1d4ed83526a222c0",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200511.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200530.rbf",
          "sha": "f9cf4c8e714f920a38c339b41025dbd6915c5a05",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200530.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200618.rbf",
          "sha": "ff0ded125af896ad568b12c693b2fbeffaff9a2e",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200618.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200621.rbf",
          "sha": "c9548c7a4c93deed0533b3c49f69325ca71d9416",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200621.rbf",
          "type": "RBF"
        },
        {
          "name": "SNES_20200701.rbf",
          "sha": "342e82c38736235d44561f77180768354a5d6050",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/SNES_MiSTer/master/releases/SNES_20200701.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Template_MiSTer",
      "description": "Template with latest framework for MiSTer",
      "readme": "# Template core for MiSTer\r\n\r\n## General description\r\nThis core contains the latest version of framework and will be updated when framework is updated. There will be no releases. This core is only for developers. Besides the framework, core demonstrates the basic usage. New or ported cores should use it as a template.\r\n\r\nIt's highly recommended to follow the notes to keep it standartized for easier maintanance and collaboration with other developers.\r\n\r\n## Source structure\r\n\r\n### Legend:\r\n* `<core_name>` - you have to use the same name where you see this in this manual. Basically it's your core name.\r\n\r\n### Standard MiSTer core should have following folders:\r\n* `sys` - the framework. Basically it's prohibited to change any files in this folder. Framework updates may erase any customization in this folder. All MiSTer cores have to include sys folder as is from this core.\r\n* `rtl` - the actual source of core. It's up to developer how to organize the inner structure of this folder. Exception is pll folder/files (see below).\r\n* `releases` - the folder where rbf files should be placed. format of each rbf is: <core_name>_YYMMDD.rbf YYMMDD is date code of release.\r\n\r\n### Other standard files:\r\n* `<core_name>.qpf`- quartus project file. Copy it as is and then modify the line `PROJECT_REVISION = \"<core_name>\"` according to your core name.\r\n* `<core_name>.qsf` - quartus settings file. In most cases you don't need to modify anything inside (although you may wont to adjust some settings in quartus - this is fine, but keep changes minimal). You also need to watch this file before you make a commit. Quartus in some conditions may \"spit\" all settings from different files into this file so it will become large. If you see this, then simply revert it to original file.\r\n* `<core_name>.srf` - optional file to disable some warnings which are safe to disable and make message list more clean, so you will have less chance to miss some improtant warnings. You are free to modify it.\r\n* `<core_name>.sdc` - optional file for constraints in case if core require some special constraints. You are free to modify it.\r\n* `<core_name>.sv` - glue logic between framework and core. This is where you adapt core specific signals to framework.\r\n* `files.qip` - list of all core files. You need to edit it manually to add/remove files. Quartus will use this file but can't edit it. If you add files in Quartus IDE, then they will be added to `<core_name>.qsf` which is recommended manually move them to `files.qip`.\r\n* `clean.bat` - windows batch file to clean the whole project from temporary files. In most cases you don't need to modify it.\r\n* `.gitignore` - list of files should be ignored by git, so temprorary files wont be included in commits.\r\n* `jtag.cdf` - it will be produced when you compile the core. By clicking it in Quartus IDE, you will launch programmer where you can send the core to MiSTer over USB blaster cable (see manual for DE10-nano how to connect it). This file normally is not presend on cleaned project and not includede in commits.\r\n\r\n### PLL:\r\nFramework implies use of at least one PLL in the core. Framework doesn't comtain this PLL but requires it to be placed in `rtl` folder, so `pll` folder and `pll.v`, `pll.qip` files must be present, however PLL settings are up to the core.\r\n\r\n# Quartus version\r\nCores must be developed in **Quartus v17.0.x**. It's recommended to have updates, so it will be **v17.0.2**. Newer versions won't give any benefits to FPGA used in MiSTer, howver they will introduce incompatibilities in project settings and it will make harder to maintain the core and collaborate with others. **So please stick to good old 17.0.x version.** You may use either Lite or Standard license.\r\n\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Template_MiSTer",
      "releases": [
        {
          "name": "_put_rbf_here_",
          "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Template_MiSTer/master/releases/_put_rbf_here_",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "TI-99_4A_MiSTer",
      "description": "Texas Instrument 99/4A Home Computer",
      "readme": "#TI-99/4A Core for MiSTer\nSee below for original readme\n\n- Use the create-misterrom.cmd file to create the full bin file.\n- Requires 994aROM.BIN and 994AGROM.BIN files (speech ROMs are optional [speech not currently working]).\n- Load this as Full.bin\n- When loading carts, load C/G files before loading D files.\n\n\n# EP994A\nMy TI-99/4A clone implemented with a TMS99105 CPU and FPGA (master branch).\nAnother version of the clone (the latest development in soft-cpu branch) includes my own\nTMS9900 CPU core written in VHDL.\n\nSee the file LICENSE for license terms. At least for now (without contributors from others)\nthe source code is made available under the LGPL license terms.\nYou need to retain copyright notices in the source code.\n\nLatest changes\n--------------\nCommit 2018-01-03:\n- So I have been very lacy at updating this README file. There has been a ton of changes.\n  Note that there are two branches, master branch contains the **TMS99105** version and soft-cpu contains the **FPGA CPU** version. \n\n\nCommit 2016-11-13:\n\t\n- Added firmware/diskdsr.asm which is a Device Service Routine for disk I/O support. It currently\n\tregisters DSK1 and DSK2. It support LOAD and SAVE opcodes. Support means that it will\n\tpass the PAB to the PC host to read by copying it to system RAM at address 0x8020.\n\tThere is a command buffer at address 0x800A..0x8013 which is used for communication between\n\tthe TMS99105 system and the host PC.\n\t\n- Refactored memloader code:\n\t- Added disk io support. Now if memloader is started with the command \"-k\" it \n\t\twill not only poll keyboard but also poll memory location updated by the DSR when\n\t\tdisk I/O requests happen.\n\t\t\n\t- Memloader now parses command line arguments better. Output is less verbose.\n\t\t\n- FPGA code now supports SAMS memory extension, currently configured to 256Kbytes.\n\tThis required a bunch of other changes, as the scratchpad area needs to be unpaged.\n\tThis is done by remapping the scratchpad above the 256K area used by SAMS.\n\nHackaday\n--------\nProject is documented to an extent at Hackaday and AtariAge TI-99/4A forums.\n\nhttps://hackaday.io/project/15430-rc201699-ti-994a-clone-using-tms99105-cpu\n\nAtariAge\n--------\nThe AtariAge forum thread talks about my other FPGA project as well, but contains information about \nhttp://atariage.com/forums/topic/255855-ti-994a-with-a-pipistrello-fpga-board/page-8\n\nAbout the directories\n---------------------\n**firmware** test software I used to debug the hardware. Written in assembler. Also some loading scripts.\n- 2016-11-13 now here is also the diskdsr.asm assembly module, which implements a starting point for disk access. Currently it relies on support by the PC program \"memloader\".\n\n**fpga** the VHDL code implementing the TI-99/4A (except the CPU).\n\n**memloader** a program for Windows (compiled with Cygwin) to transfer data from PC to the FPGA. This program is used for a few purposes:\n- load software from PC to the memory of the EP994A\n- reset the EP994A\n- pass keypresses from host PC to the EP994A\n- 2016-11-13: poll certain memory locations to enable disk access, i.e. saving and loading \n- 2016-11-13: Now there are project files for Visual Studio 2015 community edition. This is just a great IDE and speeds up programming.\n\n**schematics** the schematics of the protoboard (incl. CPU, clock, a buffer chip) connected to the FPGA board. Note: the schematics are in a need of an update, the current version lacks to wires:\n- CPU reset from FPGA to buffer to CPU\n- VDP interrupt signal from FPGA to buffer to CPU\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/TI-99_4A_MiSTer",
      "releases": [
        {
          "name": "Ti994a_20200513.rbf",
          "sha": "b3967877c6fab542cd7fb68edb815e11d7af9633",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TI-99_4A_MiSTer/master/releases/Ti994a_20200513.rbf",
          "type": "RBF"
        },
        {
          "name": "Ti994a_20200517.rbf",
          "sha": "667a09c30d2d214ef705ac8f6b0e74d282c0edfb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TI-99_4A_MiSTer/master/releases/Ti994a_20200517.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "TRS-80_MiSTer",
      "description": "port of HT1080Z to MiSTer (Tandy TRS-80 Model I)",
      "readme": "# TRS-80_MiSTer\n## Model I Support ##\nThis is a port of HT1080Z MiST core by Jozsef Laszlo to the MiSTer\n\n**NOTE: This core was renamed from ht1080z to TRS-80.  If you are using the old core, be sure to rename the ht1080z directory to trs-80 on the MiSTer SD Card**\n\nTo learn how to use the TRS-80, this is a quick tutorial:\nhttps://www.classic-computers.org.nz/system-80/driving_instructions.htm\n\nThe TRS-80 with Disk Drives attached will boot to a screen of '@' symbols and will then only continue booting once you place a disk in the drive.  To bypass this and boot directly to BASIC to load a cassette game, press Escape immediately after selecting Reset in the OSD menu.\n\n### To load a cassette game:\n```\n  return\n  system\n  <Then go to the OSD and load a cassette>\n  [type the first letter of the file you want to load (e or g for the disk images provided)]\n  / (to start once loaded)\n```\n\n### To load a CMD file:\nJust select it in the OSD. Some CMD files won't work if they access disk rom routines and there is no disk in the drive. Sometimes a clean reboot is necessary before loading a CMD.\n\n### To load files from DSK images:\nThere are three main TRS-80 image formats, which are JV1, JV3 and DMK and they all usually share the same DSK extension.  This MiSTer Core only supports the JV1 image format with upto 250 tracks, all tracks must currently hold 10 x 256 byte sectors.  To check what format a disk is in, and if it is compatible with the core, use the TRSTOOLS utility from Matthew Reed, available from: http://www.trs-80emulators.com/trstools/\n\nThe Disk emulation supports reading and writing to JV1 formatted disks, but disks cannot be formatted in the core because there is no Write Track support for JV1 images.  There are many different DOS versions for the TRS-80 with popular ones including TRSDOS, NEWDOS/80 and MULTIDOS.  For beginners it is recommended you use TRSDOS which is the original DOS produced by Radio Shack.  Instructions for using TRSDOS can be found in the following Wikipedia article: https://en.wikipedia.org/wiki/TRSDOS\n\n## Features:\n * TRS-80 Model I with 48KB installed\n * Expansion interface with dual disk drives\n * Real Time Clock (RTC)\n * White, Green and Amber Phosphor screen emulation\n * Sound output is supported (however cassette saving sound is suppressed)\n * Cassette loading is many times faster than the original 500 baud\n \n## Notes:\n * The included BOOT.ROM has been modified to take advantage of a special interface for loading cassettes; original BASIC ROMs are also supported\n * Simulates Percom Doubler and TRS-80DD, but the upcoming JV3 decoding will be required to use DD disk images\n * Even though sector write operations are supported, formatting of disks is not.\n\n## Technical:\nDebug status line\n * The Debug Status line will only be visible in Partial or Full overscan modes\n   * For monitoring Floppy Disk Controller (FDC)\n   * Usess the following format: Ddddd,Ccc,Ttt,Sss,dnn,sSS \\* where:\n     * dddd - Drive select latch (1-4).  Only 2 drives are currently supported\n     * cc   - FDC Command Register\n     * tt   - FDC Track Register\n     * ss   - FDC Sector Register\n     * nn   - FDC Data Register\n     * SS   - FDC Status Register\n     * \\*   - RTC Second Timer\n\n\nSpecial ports (i.e. Z-80 \"OUT\"/\"IN\" commands) have been added as follows:\n * VIDEO:\n   * OUT 0, n (where n=(0-7)) -> change foreground color\n   * OUT 1, n (where n=(0-7)) -> change bacgronund color\n   * OUT 2, n (where n=(0-7)) -> change overscan color\n\n * Memory-mapped cassette:\n   * OUT 6, n (where n=(0-255)) -> set address bits 23-16 of virtual memory pointer\n   * OUT 5, n (where n=(0-255)) -> set address bits 15- 8 of virtual memory pointer\n   * OUT 4, n (where n=(0-255)) -> set address bits  7- 0 of virtual memory pointer\n   * A = INP(4)  -> read virtual memory at current virtual memory pointer and increment pointer\n   * Note that cassette image is loaded at 0x010000, and no memory exists beyond 0x01ffff\n\n * Holmes Sprinter Interface\n   * OUT 254, n - Even number = Override Turbo.  Odd number = Enabe Turbo\n\nSpecial memory mapped ports have been added as follows:\n\n* TRS-80 DD Interface - Memory mapped interface\n    * 0x37ec = 0x80 - Enable Double Density Mode\n    * 0x37ec = 0xa0 - Disable Double Density Mode\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/TRS-80_MiSTer",
      "releases": [
        {
          "name": "BOOT.ROM",
          "sha": "1f5f03b2b00ab69f8c3708369a6cebcbba3249f9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TRS-80_MiSTer/master/releases/BOOT.ROM",
          "type": "OTHER"
        },
        {
          "name": "TRS-80_20200525.rbf",
          "sha": "8c3ebf1be947d0d06f89c21c1fea7598459b4eff",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TRS-80_MiSTer/master/releases/TRS-80_20200525.rbf",
          "type": "RBF"
        },
        {
          "name": "TRS-80_20200618.rbf",
          "sha": "62807c3f7427a48176453ee99c6b75c785f315ae",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TRS-80_MiSTer/master/releases/TRS-80_20200618.rbf",
          "type": "RBF"
        },
        {
          "name": "env.cas",
          "sha": "6ba4ef68623ce6ac0b67fac08d01b25ab364597f",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TRS-80_MiSTer/master/releases/env.cas",
          "type": "OTHER"
        },
        {
          "name": "galaxy.cas",
          "sha": "01c5b182fddd57b1ea61c2d3bf420402ac09dbe3",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TRS-80_MiSTer/master/releases/galaxy.cas",
          "type": "OTHER"
        },
        {
          "name": "spores.cas",
          "sha": "79e710feb3787fd34ba1f42ec84e0af1d5ea9bba",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TRS-80_MiSTer/master/releases/spores.cas",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "TSConf_MiSTer",
      "description": "TSConf for MiSTer",
      "readme": "# TSConf for MiSTer\nThis is the port of TSConf (one of ZX Spectrum clone with extra functionalities) to MiSTer.\n\n## Features of the port\n* Scandoubler with HQ2x and Scanlines.\n* RTC.\n* Configurable CMOS settings through OSD.\n* Supports both secondary SD and image on primary SD.\n* Kempston Joystick.\n* Kempston Mouse.\n* Turbosound FM (dual YM2203)\n* General Sound 512KB-2MB\n* SAA1099\n\n## Installation\nplace RBF into root of primary SD card. And then you have 3 options:\n1) Format secondary SD card with FAT32 and unpack content of SDCard.zip to it.\n2) Create TSConf.vhd image (non-MBR!) with FAT32 format and unpack SDCard.zip to it. Then place TSConf.vhd to root of primary SD card.\n3) same as 2, but name the file boot.vhd and place it into TSConf folder on primary SD card.\n\nPut some TAP, SNA, SCL, TRD, SPG files to secondary SD card (or to TSConf.vhd image) as well.\n\nBy default, if everything is done right, Wild Commander will be loaded where you can choose the games to start.\n\n## VHD files\nYou can make several VHD files and put them into TSConf folder on primary SD card and then choose from OSD.\n\n### Note\nAlthough original CMOS setting page can be launched (CTRL+F11), the settings made there won't have effect. You need to use OSD for CMOS settings.\n\nOriginal TSConf F12 key (reset) is transferred to F11.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/TSConf_MiSTer",
      "releases": [
        {
          "name": "SDCard.zip",
          "sha": "3998efa406b711c1ca47e021a22cf20fc5beaabe",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TSConf_MiSTer/master/releases/SDCard.zip",
          "type": "OTHER"
        },
        {
          "name": "TSConf_20200408.rbf",
          "sha": "4d93b9bfb78cfceec683d970120f112a1c3b819c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TSConf_MiSTer/master/releases/TSConf_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "TSConf_20200420.rbf",
          "sha": "0a8a65824a87c5556ad6a2e4b0dfbc08bba3d177",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TSConf_MiSTer/master/releases/TSConf_20200420.rbf",
          "type": "RBF"
        },
        {
          "name": "TSConf_20200512.rbf",
          "sha": "4056e4aee61864cc401fd472928c54c483325340",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TSConf_MiSTer/master/releases/TSConf_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "alt_roms.zip",
          "sha": "f4387be49e1c6d87cd6f206d5e28b516848c1456",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TSConf_MiSTer/master/releases/alt_roms.zip",
          "type": "OTHER"
        }
      ]
    },
    {
      "name": "TurboGrafx16_MiSTer",
      "description": "TurboGrafx 16 / PC Engine for MiSTer",
      "readme": "# TurboGrafx 16 / PC Engine for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki) \r\n\r\n### This is the port of Gregory Estrade's [FPGAPCE](https://github.com/Torlus/FPGAPCE)\r\n\r\n## Features\r\n * SuperGrafx mode\r\n * saves\r\n * Completely rewritten CPU and VDC for cycle accuracy\r\n * Uses DDR3 and SDRAM for cartridge's ROM (SDRAM is recommended for accuracy)\r\n * 6(8)-buttons joystick\r\n * Turbotap(multiple joysticks)\r\n * Mouse\r\n * Pachinko controller\r\n * Street Fighter II and Populous mappers\r\n * CD-ROM\r\n * Arcade Card\r\n * Cheat engine\r\n\r\n## Installation:\r\nCopy the *.rbf file at the root of the SD card. Copy roms (*PCE,*BIN) to **TGFX16** folder. You may rename ROM of your favorite game to **boot.rom** - it will be automatically loaded upon core loading.\r\nUse SGX file extension for SuperGrafx games.\r\n\r\n## CD-ROM games\r\nCD-ROM images must be in BIN/CUE format, and must be located in the **TGFX16-CD** folder. Each CD-ROM image must have its own folder.\r\n**cd_bios.rom** must be placed in the same TGFX16-CD folder as the images mentioned above. **Japanese Super CD-ROM v3.00 is recomended for maximum compatibility**. \r\nAdditionally you can use a different bios for specific games (for example from Games Express) by placing cd_bios.rom inside the game image's folder.\r\n\r\n**Do not zip CD-ROM images! It won't work correctly.**\r\n\r\n**Attention about US BIOS:** MiSTer requires original dump of US BIOS to work properly. It needs to be of 262144 bytes.\r\nIf you can read copyright string at the end of US BIOS file, then it's not correct dump! It's already pre-swapped for emulators.\r\nWhile it will work on MiSTer, some CD games will refuse to start. **Correct US BIOS file is when copyright string is not readable.**\r\n\r\n## Cheat engine\r\nStandard cheats location is supported for HuCard games. For CD-ROM game all cheats must be zipped into a single zip file and placed inside game's CD-ROM folder.\r\n\r\n## Joystick\r\nBoth Turbotap and 6-button joysticks are supported.\r\nDo not enable these features for games not supporting it, otherwise game will work incorrectly.\r\n\r\n## Pachinko\r\nPachinko controller is supported through either paddle or analog joystick Y axis.\r\n\r\n## Reset\r\nHold down Run button then press Select. Some games require to keep both buttons pressed longer to reset. The PC Engine/Turbografx-16 did not have a hardware reset button, and instead relies on this button combination. With this method, in-game options will remain if you have changed them, whereas the MiSTer OSD reset will revert them.\r\n\r\n## SDRAM\r\nThis core may work without SDRAM (using on-board DDR3), but it may have different kinds of issues/glitches due to high latency of DDR3 memory. Thus SDRAM module is highly recommended for maximum accuracy.\r\n\r\n### Notes:\r\n* Both headerless ROMs and ROMs with header (512b) are supported and automatically distinguished by file size.\r\n\r\n## Download precompiled binaries\r\nGo to [releases](https://github.com/MiSTer-devel/TurboGrafx16_MiSTer/tree/master/releases) folder. \r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/TurboGrafx16_MiSTer",
      "releases": [
        {
          "name": "TurboGrafx16_20200224.rbf",
          "sha": "cf185c49faf2d8e5e19f3b91ca1c1b8b61e4fdf4",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200224.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200305.rbf",
          "sha": "c1f6084ef34c2788598325b870324df19c1d2077",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200305.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200326.rbf",
          "sha": "e1fbd8447bae01e642da444cd7d7a124a4848f22",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200326.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200408.rbf",
          "sha": "38c925fc0583fcddfdd06583b1fee6328f8e1cd6",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200408.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200421.rbf",
          "sha": "3a31de1c3ff6f19779187a0a1d350d3ec4d90e42",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200517.rbf",
          "sha": "d175e98960cd871aea695fd4a19e430c8137321b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200517.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200518.rbf",
          "sha": "d175e98960cd871aea695fd4a19e430c8137321b",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200518.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200519.rbf",
          "sha": "4bf854a0fae9ef8484ce5432672a01888c5da769",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200519.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200527.rbf",
          "sha": "2f93da1c8c8482f7eb54d1be4aa80146e2eed7f9",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200527.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200529.rbf",
          "sha": "3a89bf8655e0d103d6d178bef15ad692ec92fcad",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200529.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200602.rbf",
          "sha": "ed68d4a17ce3688620be06e44d15b01da12b1fbd",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200602.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200605.rbf",
          "sha": "dab8a940a48775f0e199c275291d6da61a03b24a",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200605.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200608.rbf",
          "sha": "4abbd8bc75f499e41c801559ef1df40265dcc7e1",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200608.rbf",
          "type": "RBF"
        },
        {
          "name": "TurboGrafx16_20200618.rbf",
          "sha": "0838347d3ca1648feeb8388d7b45b843b661d659",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/TurboGrafx16_MiSTer/master/releases/TurboGrafx16_20200618.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Vector-06C_MiSTer",
      "description": null,
      "readme": "# [Vector 06C](https://en.wikipedia.org/wiki/Vector-06C) for [MiSTer Board](https://github.com/MiSTer-devel)\r\n\r\nPrecise K580VM80A (i8080) Verilog model by Vslav is used in this project. Some modules from [Vector06cc](https://github.com/svofski/vector06cc) and [Bashkiria 2M](http://bashkiria-2m.narod.ru/index/fpga/0-12) were used.\r\n\r\n### Features:\r\n- Fully functional Vector 06C with precise timings\r\n- 3MHz(original) and 6MHz(turbo) speeds for CPU.\r\n- 320KB RAM (including 256KB of Quasi-disk)\r\n- Following file formats are supported: \r\n    - ROM: simple tape backup (loading from 0x100 address)\r\n    - FDD: floppy dump (read/write)\r\n    - EDD: Quasi-disk dump\r\n- All known joystick connections: 2xP, 1xPU(USPID), 2xS\r\n- Specially developed i8253 module for better compatibility.\r\n- AY8910/YM2149 sound\r\n- Optional loadable BOOT ROM (up to 32KB)\r\n- Z80 CPU (experimental)\r\n\r\nKeep in mind Z80 CPU is not original CPU for Vector 06C, so not all applications can work correctly with this CPU. No additional hardware for ZX emulator supported. Use ZX Spectrum core if you want Spectrum.\r\n\r\n### Installation:\r\nCopy the *.rbf file at the root of the SD card. You can rename the file to core.rbf if you want the MiST to load it automatically at startup.\r\n\r\nCopy **vector06.rom** to the root of SD card if you wish to use another BOOT ROM (up to 32KB).\r\n\r\n##### Keyboard map:\r\n\r\n- F12 - OSD menu.\r\n- CTRL-F11 - Reset to Boot ROM (don't clean the memory).\r\n- SHIFT-F11 - Reset to Boot ROM (various additional keys are supported (F1-F5) depending on BOOT ROM functions).\r\n- ALT-F11 - Enter to application.\r\n- ALT - Rus/Lat\r\n- ESC - AP2\r\n- CRTL - US\r\n- SHIFT - SS\r\n\r\n### Additional usage notes\r\n- ROM files are started automatically after loading.\r\n- After loading FDD or EDD files, BOOT ROM will be activated. You need to press **ALT-F11** to start the disk if it's bootable. If disk is not bootable then you need to load additionally EDD or ROM file with MicroDOS and then follow the MicroDOS guide.\r\n- Some applications on disks require Quasi-disk to be formatted (and refuse to work if not). In this case, you need to hold **CTRL** and shortly press **ALT+F11** key combination to automatically format Quasi-disk at MiscroDOS startup.\r\n- If both EDD and FDD are loaded then EDD has priority by default. To switch to FDD you need to hold down **SHIFT+F1+F2** and quickly press **F11**\r\n\r\n### Download precompiled binaries:\r\nGo to [releases](https://github.com/MiSTer-devel/Vector-06C_MiSTer/tree/master/releases) folder.\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Vector-06C_MiSTer",
      "releases": [
        {
          "name": "Dummy",
          "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Vector-06C_MiSTer/master/releases/Dummy",
          "type": "OTHER"
        },
        {
          "name": "Vector-06C_20200512.rbf",
          "sha": "acecaa32d67a0b3bee6fe7fceb95b219c5273849",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Vector-06C_MiSTer/master/releases/Vector-06C_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "Vector-06C_20200606.rbf",
          "sha": "25ec09864d18531639a25f9f55d7f5692c725163",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Vector-06C_MiSTer/master/releases/Vector-06C_20200606.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "Vectrex_MiSTer",
      "description": "Vectrex for MiSTer",
      "readme": "# Vectrex for [MiSTer Board](https://github.com/MiSTer-devel/Main_MiSTer/wiki)\n\nPort of Vectrex by Dar (darfpga@aol.fr) http://darfpga.blogspot.fr\n\nSupports both digital and analog joystick/gamepad\n\n### Installation:\nCopy the *.rbf file at the root of the SD card. Copy *.vec/*.bin files to Vectrex folder.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/Vectrex_MiSTer",
      "releases": [
        {
          "name": "Vectrex_20200224.rbf",
          "sha": "cf1a7bcddfc110559245ea3b5327c8ded23f5117",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Vectrex_MiSTer/master/releases/Vectrex_20200224.rbf",
          "type": "RBF"
        },
        {
          "name": "Vectrex_20200409.rbf",
          "sha": "71071e54c62b03bc7d85c846707b797823719f85",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Vectrex_MiSTer/master/releases/Vectrex_20200409.rbf",
          "type": "RBF"
        },
        {
          "name": "Vectrex_20200421.rbf",
          "sha": "1927fd414996d1c8677d53264acdc6f51269d8aa",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Vectrex_MiSTer/master/releases/Vectrex_20200421.rbf",
          "type": "RBF"
        },
        {
          "name": "Vectrex_20200512.rbf",
          "sha": "62b5aaa4114cff0af0ac83f63c472a7123b88338",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/Vectrex_MiSTer/master/releases/Vectrex_20200512.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "VIC20_MiSTer",
      "description": "Commodore VIC-20 for MiSTer",
      "readme": "Commodore VIC20 for MISTer\r\nMiSTer port and enhancements by Sorgelig\r\n\r\nOriginal VIC20 core by MikeJ (Mike Johnson) and WoS (Wolfgang Scherr)\r\n\r\n=================================================\r\n\r\nCommodore VIC-20 has very messy and confusing expansions, so you need to be familiar with this computer to know how to run different cartridges and correct RAM expansion for different games. Multi-part cartriges only add more mess. Some cartridges have loading address in the first 2 bytes, some haven't so you only can guess where to load the cart. Usually loading address is written in the file name.\r\n\r\nIf cartridge has one of these exact sizes: 2048, 4096, 8192, 16384 then it has no header.\r\nIf size is 2 bytes more of one of these sizes then it has a header with loading address.\r\n\r\nYou can find many dumps of multipart carts as a single CRT files - in most cases these dumps won't work as these parts usually aren't loaded into connected regions and must be loaded separately.\r\n\r\nThe core supports following extensions:\r\n- .CRT - cartridges with header.\r\n- .CTx - cartridges without header\r\n   where x is one of 2-9,A,B(CT2-CT9,CTA,CTB) symbols denoting the loading address 2000-9000,A000,B000\r\n\r\nYou won't find the cartridges with CTx extensions. All cartridges you will find have CRT extension regardless having the header or not. So you need to rename them accordingly if they are headerless.\r\n\r\nThe best practice is to use only carts with header.\r\n\r\nSince many cartridges are multipart cartridges, there is no autostart procedure. You need to load all parts from OSD and if starting address is $A000(SYS 40960) then simply press CTRL+F11 to start. If starting address is different, then follow the instruction of the cartridge. Usually it's SYS <address> command.\r\n\r\nRAM expansions aren't universal. Enabling of all expansions won't automatically make VIC20 compatible with all games. So, you need to find the info about specific game RAM requirement if it doesn't run. Or try different options.\r\n\r\nGood luck in playing with this Zoo :)\r\n\r\n=================================================\r\n\r\nPort has follwing features:\r\n\r\n- Options for 3 extended RAM regions.\r\n- Automatic screen centering (many Vic20 games have off-center screen)\r\n- Support for *.PRG files.\r\n- Support for *.TAP files\r\n- Cartridge support with and without header.\r\n- Disk with write support (*.D64)\r\n- Partly/fully Loadable system ROM for C1541, Kernal and Basic.\r\n- Scandoubler with HQ2x and Scanlines\r\n- PAL/NTSC TV modes\r\n- Joystick support\r\n\r\nSystem ROM can be loaded from SD card. Put boot.rom into VIC20 folder.\r\nContent of boot.rom: C1541(16KB) + PAL kernal(8KB) + NTSC kernal(8KB)\r\nYou can load only part of whole ROM, for example only C1541 + PAL kernal (JiffyDOS).\r\n\r\nThere are 2 ways to reset the VIC20:\r\n1) lctrl+lalt+ralt - cold reset with cartridge unloading - must be done before loading the new game!\r\n2) ctrl+f11 - reset the CPU with cartridge autostart at $A000\r\n\r\n---\r\nSorgelig\r\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/VIC20_MiSTer",
      "releases": [
        {
          "name": "VIC20_20200512.rbf",
          "sha": "a12b1fdaa2da805b2be465c51dd703c3091e2e41",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/VIC20_MiSTer/master/releases/VIC20_20200512.rbf",
          "type": "RBF"
        }
      ]
    },
    {
      "name": "ZX81_MiSTer",
      "description": "ZX81 for MiSTer",
      "readme": "# ZX80/ZX81 for MISTer\n\nPort of MiST version by Szombathelyi Gyorgy\n\n### Features:\n- Based on Grant Searle's [ZX80 page](http://searle.hostei.com/grant/zx80/zx80.html)\n- Selectable ZX80/ZX81\n- 16k/32k/48k RAM packs\n- 8KB with CHR$128/UDG addon\n- QS CHRS (press F1 to enable/disable the alternative chars)\n- CHROMA81\n- Turbo in Slow mode: NoWait, x2, x8\n- YM2149 sound chip (ZON X-81 compatible)\n- Joystick types: Cursor, Sinclar, ZX81, ZXpand\n- PAL/NTSC timings\n- Turbo loading of .o and .p files\n- Load alternative ROM.\n- Load colorization and char files\n\n### Install\ncopy *.rbf to the root of SD card.\n\n### Tape loading\nSelecting an .o (ZX80) or .p (ZX81) file opens the tape. This is indicated by the\nuser LED. The LOAD command will load it as it would be on a standard tape.\nReset (ALT-F11 or the Reset OSD option) closes the .o or .p file.\n\n### Joystick\nOSD menu allows to switch joysticks between Cursor, Sinclar, ZX81. ZXpand joystick is always enabled.\nOther kinds of joystick will be disabled if ZXpand access is detected to avoid collisions.\nOnly direct ZXpand joystick port is supported. $1FFE call is not supported as the ZXpand ROM is not used.\n\n### Colorization and Char files\nCore supports .col and .chr files loading together with main .p file if the have the same name.\nFor proper .col file work, CHROMA81 should be enabled before loading. For .chr file QS CHRS should be enabled before loading.\n\nCheck [this site](http://www.fruitcake.plus.com/Sinclair/ZX81/Chroma/ChromaInterface_Software.htm) for games adapted for colors.\n\n**MiSTer binary should be updated to 20180903 or later to support .col/.chr files.**\n\n### Options\nZX81 has many options and for most games, it's better to set:\n* Main RAM: 16KB\n* Low RAM: 8KB\n* CHR$128: 128 chars\n* QD CHRS: enabled\n* CHROMA81: enabled\n\nSome games may require specific settings - check the proper sites.\n",
      "archived": false,
      "fork": true,
      "url": "https://github.com/Miguel-T80c/ZX81_MiSTer",
      "releases": [
        {
          "name": "ZX81_20200512.rbf",
          "sha": "8f3611bfc19d0bdc251127c162c3d58a3bc944cb",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ZX81_MiSTer/master/releases/ZX81_20200512.rbf",
          "type": "RBF"
        },
        {
          "name": "ZX81_20200513.rbf",
          "sha": "fd00d728f3e006d1f5e4edfc1842ca254904997c",
          "url": "https://raw.githubusercontent.com/Miguel-T80c/ZX81_MiSTer/master/releases/ZX81_20200513.rbf",
          "type": "RBF"
        }
      ]
    }
  ]
}
